#wid-id-0.jarviswidget{"data-widget-colorbutton" => "false", "data-widget-editbutton" => "false"}
  %header
    %span.widget-icon
      %i.fa.fa-eye
    %h2 Profesionales
  .widget-body
    = simple_form_for([:biddings, @professional], html: {class: 'form-horizontal smart-form', autocomplete: 'off' }) do |f|
      %fieldset
        .row
          %section.col.col-10
            %label.label Nombre
            %label.input{for: "name"}
              %i.icon-append.fa.fa-user
              = f.input :name, placeholder: "Nombre", input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-6
            %label.label DNI
            %label.input{for: "dni"}
              %i.icon-append.fa.fa-superscript
              = f.input :dni, placeholder: "DNI", input_html: { class: 'form-control' }, label: false

        .row
          %section.col.col-10
            %label Profesiones
            .input-group
              = f.association :majors, :as => :collection_select, :label => false, :input_html =>{:class => "select2", :multiple => true}
        .row
          %section.col.col-10
            %label.col-md-20.control-label Fecha de Titulación
        .row
          %section.col.col-10
            .col-md-8
              .input-group
                = f.input :professional_title_date, as: :string, :input_html => {:class => 'form-control', :type => "date"}, label: false
                %span.input-group-addon
                  %i.fa.fa-calendar
        .row
          %section.col.col-6
            .col-md-10
              %label.col-md-20.control-label Fecha de Colegiatura
          %section.col.col-6
            .col-md-10 
              %label.col-md-20.control-label Número de Colegiatura
        .row
          %section.col.col-6
            .col-md-8
              .input-group
                = f.input :date_of_tuition, as: :string, :input_html => {:class => 'form-control', :type => "date"}, label: false
                %span.input-group-addon
                  %i.fa.fa-calendar
          %section.col.col-6
            .col-md-12
              .input-group
                %span.input-group-addon
                  %i.fa N°
                = f.input :code_tuition, placeholder: "Código", input_html: { class: 'form-control' }, label: false
        .row 
          %section.col.col-10
            %label Archivos a Adjuntar
        .row
          %section.col.col-10
            %label.label Título profesional
            %label.input.input-file{for: "professional_title"}
              .button
                = f.input :professional_title, html: { class: 'form-control' }, label: false, onchange: "this.parentNode.nextSibling.value = this.value", as: "file"
                Browse
              %input{readonly: "readonly", type: "text"}/
          
          %section.col.col-10
            %label.label Colegiatura
            %label.input.input-file{for: "tuition"}
              .button
                = f.input :tuition, html: { class: 'form-control' }, label: false, onchange: "this.parentNode.nextSibling.value = this.value", as: "file"
                Browse
              %input{readonly: "readonly", type: "text"}/

          %section.col.col-10
            %label.label Curriculum Vitae
            %label.input.input-file{for: "cv"}
              .button
                = f.input :cv, html: { class: 'form-control' }, label: false, onchange: "this.parentNode.nextSibling.value = this.value", as: "file"
                Browse
              %input{readonly: "readonly", type: "text"}/
              
      %footer
        %button.btn.btn-primary{type: "submit"}
          %i.fa.fa-save
            Guardar

:javascript
  $(document).ready(function () {

    $('#professional_major_ids').select2({ width: '100%' });


    if($('form[id^="edit_"]').length > 0) {
      submit_validate($('form[id^="edit_"]'));
    }
    else{
      submit_validate($('#new_professional'));
    }
  });
  
  function submit_validate(form){
    $(form['selector']).ajaxForm({
      beforeSubmit: function() {
        $(form['selector']).validate({
          // Rules for form validation
          rules : {
            'professional[name]' : {
              required : true
            },
            'professional[dni]' : {
              required : true,
              digits: true
            },
            'professional[profession]' : {
              required : true
            },
            'professional[professional_title_date]' : {
              required : true
            },
            'professional[date_of_tuition]' : {
              required : true
            },
            'professional[code_tuition]' : {
              required : true,
              digits: true
            },
            'professional[professional_cv]' : {
              required : true
            }
          },

          // Messages for form validation
          messages : {
            'professional[name]' : {
              required : 'Porfavor, ingresar el nombre del profesional'
            },
            'professional[dni]' : {
              required : 'Porfavor, ingresar el DNI del profesional',
              digits: 'Solo se aceptan números'
            },
            'professional[profession]' : {
              required : 'Porfavor, ingresar la profesión.'
            },
            'professional[professional_title_date]' : {
              required : 'Porfavor, ingresar la fecha de titulación.'
            },
            'professional[date_of_tuition]' : {
              required : 'Porfavor, ingresar la fecha de colegiatura.'
            },
            'professional[code_tuition]' : {
              required : 'Porfavor, ingresar el número de colegiatura',
              digits: 'Solo se aceptan números'
            },
            'professional[professional_title]' : {
              required : 'Porfavor, ingresar el archivo del título profesional'
            },
            'professional[tuition]' : {
              required : 'Porfavor, ingresar el archivo de colegiatura.'
            }
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
          }
        });
        // Remove all Help-inLine
        $(".help-inline").remove();
        // Client Valid
        return $(form['selector']).valid();
      },
      target: '#content',
      success: function (data){
        $(".help-inline").parent().addClass("state-error");
      },
      error: function(xhr, status, error) {
      }
    });

    
  }