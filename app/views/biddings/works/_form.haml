#wid-id-0.jarviswidget{"data-widget-colorbutton" => "false", "data-widget-editbutton" => "false"}
  %header
    %span.widget-icon
      %i.fa.fa-eye
    %h2 Obras
  .widget-body
    = simple_form_for([:biddings, @work], html: {class: 'form-horizontal smart-form', autocomplete: 'off' }) do |f|
      %fieldset
        .row
          %section
            %label.label Especialidad
            %label.select.type-specialty
              %select.input-sm{disabled: "disabled", for: "type_training"}
              -if @action=="edit"
                -if @training.type_training=="Saneamiento"
                  %option{value: "Saneamiento", selected:=>true} Saneamiento
                  %option{value: "Civil"} Civil
                  %option{value: "Doctorado"} Doctorado
                  %option{value: "Hidráulica"} Hidráulica
                -if @training.type_training=="Civil"
                  %option{value: "Saneamiento"} Saneamiento
                  %option{value: "Civil", selected:=>true} Civil
                  %option{value: "Doctorado"} Doctorado
                  %option{value: "Hidráulica"} Hidráulica
                -if @training.type_training=="Doctorado"
                  %option{value: "Saneamiento"} Saneamiento
                  %option{value: "Civil"} Civil
                  %option{value: "Doctorado", selected:=>true} Doctorado
                  %option{value: "Hidráulica"} Hidráulica
                -if @training.type_training=="Hidráulica"
                  %option{value: "Saneamiento"} Saneamiento
                  %option{value: "Civil"} Civil
                  %option{value: "Doctorado"} Doctorado
                  %option{value: "Hidráulica", selected:=>true} Hidráulica
              -else
                %option{value: "Saneamiento"} Saneamiento
                %option{value: "Civil"} Civil
                %option{value: "Doctorado"} Doctorado
                %option{value: "Hidráulica"} Hidráulica
        .row
          %section.col.col-6
            %label.label Entidad contratante
            %label.input{for: "contracting_entity"}
              %i.icon-append.fa.fa-user
              = f.input :contracting_entity, placeholder: "Entidad Contratante", input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-6
            %label.label Nombre de la obra
            %label.input{for: "name"}
              %i.icon-append.fa.fa-user
              = f.input :name, placeholder: "Nombre de la Obra", input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-6
            %label.label Monto de Contrato
            %label.input{for: "amount_of_contract"}
              %i.icon-append.fa.fa-user
              = f.input :amount_of_contract, placeholder: "Monto de Contrato", input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-6
            %label.label Contratista
            %label.input{for: "contractor"}
              %i.icon-append.fa.fa-user
              = f.input :contractor, placeholder: "Contratista", input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-6
            %label.label Participación de ARSAC
            %label.input{for: "participation_of_arsac"}
              %i.icon-append.fa.fa-user
              = f.input :participation_of_arsac, placeholder: "Participación de ARSAC", input_html: { class: 'form-control' }, label: false
        .row
           .col-md-4
             %label.col-md-4.control-label Fecha de Firma de Contrato
              .col-md-8
                .input-group
                  = f.input :date_signature_of_contract, as: :string, :input_html => {:class => 'form-control', :type => "date"}, label: false
                  %span.input-group-addon
                    %i.fa.fa-calendar
            .col-md-4
             %label.col-md-4.control-label Fecha de Inicio de Obra
              .col-md-8
                .input-group
                  = f.input :start_date_of_work, as: :string, :input_html => {:class => 'form-control', :type => "date"}, label: false
                  %span.input-group-addon
                    %i.fa.fa-calendar
           .col-md-4
             %label.col-md-4.control-label Fecha de Fin Real de Obra
              .col-md-8
                .input-group
                  = f.input :real_end_date_of_work, as: :string, :input_html => {:class => 'form-control', :type => "date"}, label: false
                  %span.input-group-addon
                    %i.fa.fa-calendar
            .col-md-4
             %label.col-md-4.control-label Fecha de Recepción de Obra
              .col-md-8
                .input-group
                  = f.input :date_of_receipt_of_work, as: :string, :input_html => {:class => 'form-control', :type => "date"}, label: false
                  %span.input-group-addon
                    %i.fa.fa-calendar
           .col-md-4
             %label.col-md-4.control-label Fecha de Liquidación
              .col-md-8
                .input-group
                  = f.input :settlement_date, as: :string, :input_html => {:class => 'form-control', :type => "date"}, label: false
                  %span.input-group-addon
                    %i.fa.fa-calendar
        .row
          %section.col.col-6
            %label.label Monto de Liquidación
            %label.input{for: "amount_of_settlement"}
              %i.icon-append.fa.fa-user
              = f.input :amount_of_settlement, placeholder: "Monto de Liquidación", input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-6
            %label.label IPC de Liquidación
            %label.input{for: "ipc_settlement"}
              %i.icon-append.fa.fa-user
              = f.input :ipc_settlement, placeholder: "Monto de Liquidación", input_html: { class: 'form-control' }, label: false















        .row
          %section
            %label.label Componentes
            .col.col-8.inline-group
              -if @action == "edit"
                - @component.each do |checkent|
                  - @entity.type_entities.each do |enty|
                    - if enty.id == checkent.id
                      .fields.inline-group
                        %input{name: "entity[entity_per_type_entities_attributes][#{@entity.created_at.to_time.to_i.to_s}][type_entity_id]", type: "checkbox", :checked=> "#{checkent.id}"}
                          = "#{checkent.name}"
                - @type_entities.each do |checkent|
                  - @ete.each do |ete|
                    - if checkent.id != ete.id
                      .fields.inline-group
                        %input{name: "entity[entity_per_type_entities_attributes][#{@entity.created_at.to_time.to_i.to_s}][type_entity_id]", type: "checkbox", :value=> "#{checkent.id}"}
                          = "#{checkent.name}"
                    -break
              -else
                - @component do |checomp|
                  .fields.inline-group
                    %input{name: "entity[entity_per_type_entities_attributes][" +@reg_n.to_s + "][type_entity_id]", type: "checkbox", value:"#{checomp.id}"}
                      = "#{checomp.name}"
                  - @reg_n += 1
















        .row
          %section
            %label.label Minuta/Testimonio de Consorcio
            %label.input.input-file{for: "testimony_of_consortium"}
              .button
                = f.input :testimony_of_consortium, html: { class: 'form-control' }, label: false, onchange: "this.parentNode.nextSibling.value = this.value", as: "file"
                Browse
              %input{readonly: "readonly", type: "text"}/
        .row
          %section
            %label.label Contrato
            %label.input.input-file{for: "contract"}
              .button
                = f.input :contract, html: { class: 'form-control' }, label: false, onchange: "this.parentNode.nextSibling.value = this.value", as: "file"
                Browse
              %input{readonly: "readonly", type: "text"}/
        .row
          %section
            %label.label Acta de Recepción
            %label.input.input-file{for: "reception_certificate"}
              .button
                = f.input :reception_certificate, html: { class: 'form-control' }, label: false, onchange: "this.parentNode.nextSibling.value = this.value", as: "file"
                Browse
              %input{readonly: "readonly", type: "text"}/
        .row
          %section
            %label.label Liquidación de Obra
            %label.input.input-file{for: "settlement_of_work"}
              .button
                = f.input :settlement_of_work, html: { class: 'form-control' }, label: false, onchange: "this.parentNode.nextSibling.value = this.value", as: "file"
                Browse
              %input{readonly: "readonly", type: "text"}/

      %footer
        %button.btn.btn-primary{type: "submit"}
          %i.fa.fa-save
            Guardar


//ver todo el script, no lo he domificado
:javascript
  $(document).ready(function () {
    $("#category_code").focus();

    if($('form[id^="edit_"]').length > 0) {
      submit_validate($('form[id^="edit_"]'));
    }
    else{
      submit_validate($('#new_category'));
    }
  });
  
  function submit_validate(form){
    $(form['selector']).ajaxForm({
      beforeSubmit: function() {
        $(form['selector']).validate({
          // Rules for form validation
          rules : {
            'category[code]' : {
              required : true,
              minlength : 2,
              maxlength : 2
            },
            'category[name]' : {
              required : true,
            }
          },

          // Messages for form validation
          messages : {
            'category[code]' : {
              required : 'Porfavor, ingresar el código del Grupo',
              minlength : "Como mínimo debe tener 2 dígitos.",
              maxlength : "Como máximo debe tener 2 dígitos.",
            },
            'category[name]' : {
              required : 'Porfavor, ingresar el nombre del Grupo.'
            }
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
          }
        });
        // Remove all Help-inLine
        $(".help-inline").remove();
        // Client Valid
        return $(form['selector']).valid();
      },
      target: '#content',
      success: function (data){
        $(".help-inline").parent().addClass("state-error");
      },
      error: function(xhr, status, error) {
      }
    });
  }