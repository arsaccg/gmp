#wid-id-0.jarviswidget{"data-widget-colorbutton" => "false", "data-widget-editbutton" => "false"}
  %header
    %span.widget-icon
      %i.fa.fa-eye
    %h2 Capacitaciones
  .widget-body
    = simple_form_for([:biddings, @training], html: {class: 'form-horizontal smart-form', autocomplete: 'off' }) do |f|
      %fieldset
        .row
          %section.col.col-6
            %label.label Nombre del profesional
            %label.select
              %select.input-sm{name: "training[professional_id]"}
                -if @action=="edit"
                  -@professional.each do |pro|
                    -if @training.professional_id==pro.id
                      %option{value: "#{pro.id}", selected:true}
                        = "#{pro.name}"
                    -else
                      %option{value: "#{pro.id}"} 
                        ="#{pro.name}"
                -else
                  -@professional.each do |pro|
                    %option{value: "#{pro.id}"}
                      = "#{pro.name}"
        .row
          %section.col.col-6
            %label.label Tipo de capacitación
            %label.select.type-training
              %select.input-sm{name: "training[type_training]"}
                -if @action=="edit"
                  -if @training.type_training=="Curso"
                    %option{value: "Curso", selected:true} Curso
                    %option{value: "Diplomado"} Diplomado
                    %option{value: "Doctorado"} Doctorado
                    %option{value: "Maestría"} Maestría
                  -if @training.type_training=="Diplomado"
                    %option{value: "Curso"} Curso
                    %option{value: "Diplomado", selected:true} Diplomado
                    %option{value: "Doctorado"} Doctorado
                    %option{value: "Maestría"} Maestría
                  -if @training.type_training=="Doctorado"
                    %option{value: "Curso"} Curso
                    %option{value: "Diplomado"} Diplomado
                    %option{value: "Doctorado", selected:true} Doctorado
                    %option{value: "Maestría"} Maestría
                  -if @training.type_training=="Maestría"
                    %option{value: "Curso"} Curso
                    %option{value: "Diplomado"} Diplomado
                    %option{value: "Doctorado"} Doctorado
                    %option{value: "Maestría", selected:true} Maestría
                -else
                  %option{value: "Curso"} Curso
                  %option{value: "Diplomado"} Diplomado
                  %option{value: "Doctorado"} Doctorado
                  %option{value: "Maestría"} Maestría
          
          %section.col.col-6
            %label.label Nombre de curso
            %label.input{for: "name_training"}
              %i.icon-append.fa.fa-book
              = f.input :name_training, placeholder: "Nombre del curso", input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-6
            %label.label Certificado de capacitación
            %label.input.input-file{for: "training"}
              .button
                = f.input :training, html: { class: 'form-control' }, label: false, onchange: "this.parentNode.nextSibling.value = this.value", as: "file"
                Browse
              %input{readonly: "readonly", type: "text"}/

      %footer
        %button.btn.btn-primary{type: "submit"}
          %i.fa.fa-save
            Guardar


//ver todo el script, no lo he domificado
:javascript
  $(document).ready(function () {

    if($('form[id^="edit_"]').length > 0) {
      submit_validate($('form[id^="edit_"]'));
    }
    else{
      submit_validate($('#new_training'));
    }
  });

  console.log($('professional_id'))
  
  function submit_validate(form){
    $(form['selector']).ajaxForm({
      beforeSubmit: function() {
        $(form['selector']).validate({
          // Rules for form validation
          rules : {
            'training[professional_id]' : {
              required : true,
            },
            'training[type_training]' : {
              required : true,
            },
            'training[training]' : {
              required : true,
            },
            'training[name_training]' : {
              required : true,
            }
          },

          // Messages for form validation
          messages : {
            'training[type_training]' : {
              required : 'Porfavor, seleccione el tipo de capacitación',
            },
            'training[professional_id]' : {
              required : 'Porfavor, seleccione al profesional.'
            },
            'training[training]' : {
              required : 'Porfavor, adjunte su certificado de capacitación.'
            },
            'training[name_training]' : {
              required : 'Porfavor, ingrese el nombre de la capacitación.'
            }
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
          }
        });
        // Remove all Help-inLine
        $(".help-inline").remove();
        // Client Valid
        return $(form['selector']).valid();
      },
      target: '#content',
      success: function (data){
        $(".help-inline").parent().addClass("state-error");
      },
      error: function(xhr, status, error) {
      }
    });
  }