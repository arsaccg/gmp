#wid-id-0.jarviswidget{"data-widget-colorbutton" => "false", "data-widget-editbutton" => "false"}
  %header
    %span.widget-icon
      %i.fa.fa-eye
    %h2 Certificados
  .widget-body
    = simple_form_for([:biddings, @certificate], html: {class: 'form-horizontal smart-form', autocomplete: 'off' }) do |f|
      %fieldset
        .row
          %section.col.col-6
            %label.label Nombre del profesional
            %label.input{for: "professional_id"}
              %i.icon-append.fa.fa-superscript
                -if @action==edit
                  -@professional.each do |pro|
                    -if @training.professional_id==pro.id
                      %option{value: "#{pro.id}", selected:true} =pro.name
                    -else
                      %option{value: "#{pro.id}"} =pro.name
                -else
                  -@professional.each do |pro|
                    %option{value: "#{pro.id}"} =pro.name
        .row
          %section.col.col-6
            %label.label Nombre de la obra
            %label.input{for: "work_id"}
              %i.icon-append.fa.fa-superscript
                -if @action==edit
                  -@work.each do |wc|
                    -if @work.certificates_id==wc.id
                      %option{value: "#{wc.id}", selected:true} =wc.name
                    -else
                      %option{value: "#{wc.id}"} = wc.name
                -else
                  -@professional.each do |wc|
                    %option{value: "#{wc.id}"} = wc.name
        
        .row
          %section.col.col-6
            %label.label Cargo
            %label.input{for: "charge"}
              %i.icon-append.fa.fa-superscript
              = f.input :charge, placeholder: "Cargo", input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-6
            %label.label Contratista
            %label.input{for: "contractor"}
              %i.icon-append.fa.fa-superscript
              = f.input :contractor, placeholder: "Contratista", input_html: { class: 'form-control' }, label: false

        .row
           .col-md-4
             %label.col-md-4.control-label Fecha de Inicio
              .col-md-8
                .input-group
                  = f.input :star_date, as: :string, :input_html => {:class => 'form-control', :type => "date"}, label: false
                  %span.input-group-addon
                    %i.fa.fa-calendar
            .col-md-4
             %label.col-md-4.control-label Fecha de Termino
              .col-md-8
                .input-group
                  = f.input :finish_date, as: :string, :input_html => {:class => 'form-control', :type => "date"}, label: false
                  %span.input-group-addon
                    %i.fa.fa-calendar

        .row
          %section
            %label.label Componentes de la obra
            %label.select.type-training
              %select.input-sm{disabled: "disabled", for: "type_training"}
              -if @action=="edit"
              -else
                
        .row
          %section
            %label.label Certificado
            %label.input.input-file{for: "certificate"}
              .button
                = f.input :certificate, html: { class: 'form-control' }, label: false, onchange: "this.parentNode.nextSibling.value = this.value", as: "file"
                Browse
              %input{readonly: "readonly", type: "text"}/

      %footer
        %button.btn.btn-primary{type: "submit"}
          %i.fa.fa-save
            Guardar


//ver todo el script, no lo he domificado
:javascript
  $(document).ready(function () {
    $("#category_code").focus();

    if($('form[id^="edit_"]').length > 0) {
      submit_validate($('form[id^="edit_"]'));
    }
    else{
      submit_validate($('#new_category'));
    }
  });
  
  function submit_validate(form){
    $(form['selector']).ajaxForm({
      beforeSubmit: function() {
        $(form['selector']).validate({
          // Rules for form validation
          rules : {
            'category[code]' : {
              required : true,
              minlength : 2,
              maxlength : 2
            },
            'category[name]' : {
              required : true,
            }
          },

          // Messages for form validation
          messages : {
            'category[code]' : {
              required : 'Porfavor, ingresar el código del Grupo',
              minlength : "Como mínimo debe tener 2 dígitos.",
              maxlength : "Como máximo debe tener 2 dígitos.",
            },
            'category[name]' : {
              required : 'Porfavor, ingresar el nombre del Grupo.'
            }
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
          }
        });
        // Remove all Help-inLine
        $(".help-inline").remove();
        // Client Valid
        return $(form['selector']).valid();
      },
      target: '#content',
      success: function (data){
        $(".help-inline").parent().addClass("state-error");
      },
      error: function(xhr, status, error) {
      }
    });
  }