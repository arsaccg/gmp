#wid-id-0.jarviswidget{"data-widget-colorbutton" => "false", "data-widget-editbutton" => "false"}
  %header
    %span.widget-icon
      %i.fa.fa-eye
    %h2 Trabajadores
  .widget-body
    = simple_form_for([:production, @worker], html: {class: 'form-horizontal smart-form', autocomplete: 'off' }) do |f|
      %fieldset
        .row{ 'style' => 'display:none' }
          %input{ 'name' => 'company_id', 'value' => "#{@company_id}", 'readonly' => true, 'style' => 'display:none' }
        .row
          %section.col.col-10
            %label.label Categoria del Trabajador
            %label.input{for: "category_of_worker_id"}
              %select.form-control{:name =>"worker[category_of_worker_id]"}
                - @categoryOfWorkers.each do |categoryOfWorker|
                  - if @worker.category_of_worker_id == categoryOfWorker.id
                    %option{:value => "#{categoryOfWorker.id}", :selected => true}
                      = categoryOfWorker.name
                  - else
                    %option{:value => "#{categoryOfWorker.id}"}
                      = categoryOfWorker.name
        .row
          %section.col.col-10
            %label.label Nombres
            %label.input{for: "first_name"}
              %i.icon-append.fa.fa-user
              = f.input :first_name, placeholder: "Nombre", input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-10
            %label.label Apellido Paterno
            %label.input{for: "paternal_surname"}
              %i.icon-append.fa.fa-user
              = f.input :paternal_surname, placeholder: "Apellido Paterno", input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-10
            %label.label Apellido Materno
            %label.input{for: "maternal_surname"}
              %i.icon-append.fa.fa-user
              = f.input :maternal_surname, placeholder: "Apellido Materno", input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-10
            %label.label DNI
            %label.input{for: "dni"}
              %i.icon-append.fa.fa-credit-card
              = f.input :dni, placeholder: "DNI", input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-10
            %label.label Email
            %label.input{for: "email"}
              %i.icon-append.fa.fa-credit-card
              = f.input :email, placeholder: "RUC", input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-10
            %label.label Teléfono
            %label.input{for: "phone"}
              = f.input :phone, input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-10
            %label.label Banco
            %label.input{for: "bank"}
              = f.input :bank, input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-10
            %label.label Numero de Cuenta Bancaria
            %label.input{for: "account_number"}
              = f.input :account_number, input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-10
            %label.label Fecha de Nacimiento
            %label.input{for: "date_of_birth"}
              = f.input :date_of_birth, as: :string, input_html: { class: 'form-control', :type => "date"}, label: false
        .row
          %section.col.col-10
            %label.label Dirección
            %label.input{for: "address"}
              = f.input :address, input_html: { class: 'form-control' }, label: false
      %footer
        %button.btn.btn-primary{type: "submit"}
          %i.fa.fa-save 
          Guardar

:javascript
  $(document).ready(function () {
    $('select').select2();

    if($('form[id^="edit_"]').length > 0) {
      submit_validate($('form[id^="edit_"]'));
    }else{
      submit_validate($('#new_worker'));
    }

  });
  
  function submit_validate(form){
    $(form['selector']).ajaxForm({
      beforeSubmit: function() {
        $(form['selector']).validate({
          // Rules for form validation
          rules : {
            'worker[category_of_worker_id]' : {
              required : true,
            },
            'worker[first_name]' : {
              required : true,
            },
            'worker[paternal_surname]' : {
              required : true,
            },
            'worker[maternal_surname]' : {
              required : true,
            },
            'worker[dni]' : {
              required : true,
              digits: true,
              maxlength: 8,
              minlength: 8
            },
            'worker[email]' : {
              required : true,
            },
            'worker[phone]' : {
              required : true,
            },
            'worker[date_of_birth]' : {
              required : true,
            }
          },

          // Messages for form validation
          messages : {
            'worker[category_of_worker_id]' : {
              required : 'Por favor, ingresar la categoria del trabajador.'
            },
            'worker[first_name]' : {
              required : 'Por favor, ingresar el nombre.'
            },
            'worker[paternal_surname]' : {
              required : 'Por favor, ingresar el apellido Paterno.'
            },
            'worker[maternal_surname]' : {
              required : 'Por favor, ingresar el apellido Materno.'
            },
            'worker[dni]' : {
              required : 'Por favor, ingresar el DNI.',
              digits: 'Por favor, ingresar un DNI válido',
              maxlength: 'Por favor, ingresar un DNI válido',
              minlength: 'Por favor, ingresar un DNI válido'
            },
            'worker[email]' : {
              required : 'Por favor, ingresar el email.',
              email: true
            },
            'worker[phone]' : {
              required : 'Por favor, ingresar el teléfono.'
            },
            'worker[date_of_birth]' : {
              required : 'Por favor, ingresar la fecha de nacimiento.'
            }
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
          }
        });
        // Remove all Help-inLine
        $(".help-inline").remove();
        // Client Valid
        return $(form['selector']).valid();
      },
      target: '#content',
      success: function (data){
        $(".help-inline").parent().addClass("state-error");
      },
      error: function(xhr, status, error) {
      }
    });
  }