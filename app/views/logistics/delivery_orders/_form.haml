#wid-id-0.jarviswidget{"data-widget-colorbutton" => "false", "data-widget-editbutton" => "false"}
  %header
    %span.widget-icon
      %i.fa.fa-eye
    %h2 Orden de Suministro
  %div{:style => "padding-top: 0"}
    .jarviswidget-editbox
    .widget-body 
      = simple_form_for([:logistics, @deliveryOrder], html: {class: 'form-horizontal', autocomplete: 'off' }) do |f|
        .col-sm-12
          %fieldset
            %legend{:style => "border:none"}
            - if @deliveryOrder.id != nil
              .form-group.col-md-4
                %label.col-md-3{for: "id"} Código
                .col-md-9.smart-form= f.input :id, placeholder: "Código", :input_html => {:class => 'form-control', :value => @deliveryOrder.id.to_s.rjust(5, '0')}, label: false, readonly: true
            - if @action == 'edit'
              .form-group.col-md-4
                %label.col-md-3{for: "cost_center_id"} Centro de Costo
                .col-md-9.smart-form
                  %select.form-control#delivery_order_cost_center_id{:name =>"delivery_order[cost_center_id]"}
                    - @costcenters.each do |unit|
                      %option{:value => "#{unit.id}", :rel => "#{unit.id}", :selected => @deliveryOrder.cost_center_id == unit.id}
                        = unit.name
              .form-group.col-md-4
                %label.col-md-3{for: "state"} Estado
                .col-md-9.smart-form
                  = f.input :state, placeholder: "Nombre de la Orden", :input_html => {:class => 'form-control', :value => translate_delivery_order_state(@deliveryOrder.state)}, label: false, readonly: true
              .form-group.col-md-4
                %label.col-md-3{for: "date_of_issue"} Fecha de Requerimiento
                .col-md-9.smart-form
                  = f.input :date_of_issue, placeholder: "Fecha de emisión", as: :string ,:input_html => {:class => 'form-control', type: "date"}, label: false
              .form-group.col-md-4
                %label.col-md-3{for: "scheduled"} Fecha Programada
                .col-md-9.smart-form
                  = f.input :scheduled, placeholder: "Fecha Programada", as: :string, :input_html => {:class => 'form-control', type: "date"}, label: false
              .form-group.col-md-4
                %label.col-md-3{for: "liable"} Responsable
                .col-md-9.smart-form
                  = text_field(:deliveryOrder, :liable, class: "form-control", value: "#{current_user.first_name} #{current_user.last_name}", readonly: true)
              .form-group.col-md-8
                %label.col-md-1{for: "description", style: "margin-right: 4%;"} Glosa
                .col-md-9.smart-form= f.input :description, placeholder: "Glosa", :input_html => {:class => 'form-control'}, label: false
            - else
              = hidden_field_tag "delivery_order[cost_center_id]", @cost_center.id
              .form-group.col-md-4
                %label.col-md-3{for: "state"} Estado
                .col-md-9.smart-form
                  = f.input :state, placeholder: "Nombre de la Orden", :input_html => {:class => 'form-control', :value => translate_delivery_order_state(@deliveryOrder.state)}, label: false, readonly: true
              .form-group.col-md-4
                %label.col-md-3{for: "date_of_issue"} Fecha de Requerimiento
                .col-md-9.smart-form
                  = f.input :date_of_issue, placeholder: "Fecha de emisión", as: :string ,:input_html => {:class => 'form-control', type: "date"}, label: false
              .form-group.col-md-4
                %label.col-md-3{for: "scheduled"} Fecha Programada
                .col-md-9.smart-form
                  = f.input :scheduled, placeholder: "Fecha Programada", as: :string, :input_html => {:class => 'form-control', type: "date"}, label: false
              .form-group.col-md-4
                %label.col-md-3{for: "liable"} Responsable
                .col-md-9.smart-form
                  = text_field(:deliveryOrder, :liable, class: "form-control", value: "#{current_user.first_name} #{current_user.last_name}", readonly: true)
              .form-group.col-md-8
                %label.col-md-1{for: "description"} Glosa
                .col-md-11= f.input :description, placeholder: "Glosa", :input_html => {:class => 'form-control'}, label: false
            
            = hidden_field_tag "company_id"

        .col-sm-12
          %fieldset
            %legend Detalle de Orden de Suministro
            .form-group
              .col-lg-12
                %label(for="article_id" class="col-lg-2 control-label") Insumos
                .col-lg-6 
                  %select(name='article_id' class = 'select2 form-control' id = 'article-select' style='width:100%;padding: 0;border: none;')
                    - @articles.each do |article|
                      %option(value = "#{article.id}-#{article.unit_of_measurement.id}")
                        = article.code + " - " + article.name + " - " + article.unit_of_measurement.symbol
                .col-lg-1
                  = text_field_tag 'amount', nil, class: 'form-control', id: 'article-amount', value: '1'
                .col-lg-2 
                  %div(class="col-lg-3")
                    %a(href="javascript:add_article_item();" id="btn-add-article" class="btn btn-success" role="button")
                      Agregar Insumo
            .form-group
              .col-lg-3
              .col-lg-12
                %table(class="table table-condensed table-bordered table-striped table-hover dataTable" style="font-size: 12px;" id="summary-articles" aria-describedby="data-table_info")
                  %thead
                    %tr
                      %th Codigo
                      %th Insumo
                      %th Unidad
                      %th Cantidad
                      %th Sector
                      %th Fases/Subfases
                      %th Centro de Atención
                      %th Fecha Programada
                      %th Equipos
                      %th Glosa
                      %th 
                  %tbody(id="article_items_table")
                    - if @action != nil && @action == 'edit'
                      - @deliveryOrder.delivery_order_details.each do |dod|
                        %tr(class="order_delivery_item"){id: "tr" + dod.id.to_s}
                          %td.article-id(style="display:none")
                            = hidden_field_tag 'delivery_order[delivery_order_details_attributes][' + dod.created_at.to_time.to_i.to_s + '][article_id]', dod.article_id.to_i
                          %td.measurement-id(style="display:none")
                            = hidden_field_tag 'delivery_order[delivery_order_details_attributes][' + dod.created_at.to_time.to_i.to_s + '][unit_of_measurement_id]', dod.unit_of_measurement_id.to_i
                          %td
                            = dod.article.code
                          %td
                            = dod.article.name
                          %td
                            = dod.unit_of_measurement.name
                          %td.col-md-1
                            .col-md-9
                              = text_field_tag 'delivery_order[delivery_order_details_attributes][' + dod.created_at.to_time.to_i.to_s + '][amount]', dod.amount.to_i , class: "form-control quantity", id: 'article-amount'
                          %td.precio
                            %select.form-control{:name =>"delivery_order[delivery_order_details_attributes][#{dod.created_at.to_time.to_i.to_s}][sector_id]"}
                              - @sectors.each do |sect|
                                - if sect.id == dod.sector.id
                                  %option{:value => "#{sect.id}", :selected => true}
                                    = sect.name
                                %option{:value => "#{sect.id}"}
                                  = sect.name
                          %td
                            %select.form-control{:name =>"delivery_order[delivery_order_details_attributes][#{dod.created_at.to_time.to_i.to_s}][phase_id]"}
                              - @phases.each do |phas|
                                %optgroup{:label => "#{phas.name}"}
                                  - Phase.get_subphases(phas.code).each do |subphase|
                                    - if subphase.id == dod.phase.id
                                      %option{:value => "#{subphase.id}", :selected => true}
                                        = subphase.name
                                    %option{:value => "#{subphase.id}"}
                                      = subphase.name
                          %td(class="order_delivery_centro_atencion")
                            %select.form-control{:name =>"delivery_order[delivery_order_details_attributes][#{dod.created_at.to_time.to_i.to_s}][center_of_attention_id]"}
                              - @centerOfAttentions.each do |centerOfAttention|
                                - if centerOfAttention.id == dod.center_of_attention.id
                                  %option{:value => "#{centerOfAttention.id}", :selected => true}
                                    = centerOfAttention.name
                                %option{:value => "#{centerOfAttention.id}"}
                                  = centerOfAttention.name
                          %td(class="order_delivery_fecha_programada")
                            %section.col.col-6
                              %label.input.state-success
                                %i.icon-append.fa.fa-calendar
                                %input.scheduled-date{:type => "date", :name => "delivery_order[delivery_order_details_attributes][#{dod.created_at.to_time.to_i.to_s}][scheduled_date]", :value => dod.scheduled_date}
                          %td(class="order_delivery_equipos")
                          %td
                            = text_area_tag 'delivery_order[delivery_order_details_attributes][' + dod.created_at.to_time.to_i.to_s + '][description]', dod.description, class: "form-control description"
                          %td(style="display:none")= hidden_field_tag 'delivery_order[delivery_order_details_attributes][' + dod.created_at.to_time.to_i.to_s + '][id]', dod.id
                          %td(style="display:none")= hidden_field_tag 'delivery_order[delivery_order_details_attributes][' + dod.created_at.to_time.to_i.to_s + '][delivery_order_id]', @deliveryOrder.id
                          %td
                            %i.fa.fa-check{style: "color: green;text-align:center"}
        .form-actions{:style => "margin-top: 0;"}
          .row
            .col-md-12
              %button.btn.btn-primary{type: "submit"}
                %i.fa.fa-save
                  Guardar

:javascript
  
  $(document).ready(function(){
    $("#company_id").val("#{@company}");
    loadScript("#{ asset_path 'plugin/select2/select2.min.js', type: :javascript }");
    $('#article-select').select2();

    $('#new_delivery_order').ajaxForm({
      beforeSubmit: function() {
        $('#new_delivery_order').validate({
          // Rules for form validation
          rules : {
            'delivery_order[state]' : {
              required : true
            },
            'deliveryOrder[liable]' : {
              required : true,
            },
            'delivery_order[date_of_issue]' : {
              required : true
            },
            'delivery_order[scheduled]' : {
              required : true
            }
          },

          // Messages for form validation
          messages : {
            'delivery_order[state]' : {
              required : 'El estado de la Orden es requerido.'
            },
            'deliveryOrder[liable]' : {
              required : 'El nombre del responsable es requerido. Por favor, verifique si usted a actualizado su perfil.',
            },
            'delivery_order[date_of_issue]' : {
              required : 'La fecha de emisión es requerida.'
            },
            'delivery_order[scheduled]' : {
              required : 'La fecha programada es requerida.'
            }
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
          }
        });

        return $('#new_delivery_order').valid();
      },
      target: '#content'
    });

    $('form[id^="edit_"]').ajaxForm({
      beforeSubmit: function() {
        $('form[id^="edit_"]').validate({
          // Rules for form validation
          rules : {
            'delivery_order[state]' : {
              required : true
            },
            'deliveryOrder[liable]' : {
              required : true
            },
            'delivery_order[date_of_issue]' : {
              required : true
            },
            'delivery_order[scheduled]' : {
              required : true
            }
          },

          // Messages for form validation
          messages : {
            'delivery_order[state]' : {
              required : 'El estado de la Orden es requerido.'
            },
            'deliveryOrder[liable]' : {
              required : 'El nombre del responsable es requerido. Por favor, verifique si usted a actualizado su perfil.',
            },
            'delivery_order[date_of_issue]' : {
              required : 'La fecha de emisión es requerida.'
            },
            'delivery_order[scheduled]' : {
              required : 'La fecha programada es requerida.'
            }
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
          }
        });

        return $('form[id^="edit_"]').valid();
      },
      target: '#content'
    });
  });

  function go_datepicker(element){
    $(element).datepicker();
  }

  function add_article_item(){

    var article_id = $("#article-select").val();
    str_item = {authenticity_token: "#{form_authenticity_token}", article_id: $("#article-select").val(), amount: $("#article-amount").val()};

    append_url_ajax('#{add_delivery_order_item_field_logistics_delivery_orders_path}', 'article_items_table', str_item, 0, 'POST');
  }

  function delete_item(code){
    $("#tr" + code).remove();
  }