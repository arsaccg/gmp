#wid-id-0.jarviswidget{"data-widget-colorbutton" => "false", "data-widget-editbutton" => "false"}
  %header
    %span.widget-icon
      %i.fa.fa-eye
    %h2 Entidad
  .widget-body
    = simple_form_for([:logistics, @entity], html: {class: 'form-horizontal smart-form', autocomplete: 'off' }) do |f|
      %fieldset
        .row
          %section.col.col-10
            %label.label Nombre
            %label.input{for: "name"}
              %i.icon-append.fa.fa-user
              = f.input :name, placeholder: "Nombre", input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-10
            %label.label Apellidos
            %label.input{for: "surname"}
              %i.icon-append.fa.fa-user
              = f.input :surname, placeholder: "Apellidos", input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-10
            %label.label DNI
            %label.input{for: "dni"}
              %i.icon-append.fa.fa-credit-card
              = f.input :dni, placeholder: "DNI", input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-10
            %label.label RUC
            %label.input{for: "surname"}
              %i.icon-append.fa.fa-credit-card
              = f.input :ruc, placeholder: "RUC", input_html: { class: 'form-control' }, label: false
        .row
          %section
            %label.label Tipo
            .col.col-8.inline-group
              -if @action == "edit"
                -  @type_entities.each do |checkent|
                  -@entity.type_entities.each do |enty|
                    -if enty.id == checkent.id
                      .fields.inline-group
                        %input{name: "entity[entity_per_type_entities_attributes][#{@entity.created_at.to_time.to_i.to_s}][type_entity_id]", type: "checkbox", :checked=> "#{checkent.id}"}
                          = "#{checkent.name}"
                      -break
                    - else
                      .fields.inline-group
                        %input{name: "entity[entity_per_type_entities_attributes][#{@entity.created_at.to_time.to_i.to_s}][type_entity_id]", type: "checkbox", value:"#{checkent.id}"}
                        = "#{checkent.name}"
                      -break
              -else
                - @type_entities.each do |checkent|
                  .fields.inline-group
                    %input{name: "entity[entity_per_type_entities_attributes][" +@reg_n.to_s + "][type_entity_id]", type: "checkbox", value:"#{checkent.id}"}
                      = "#{checkent.name}"
                  - @reg_n += 1
      %footer
        %button.btn.btn-primary{type: "submit"}
          %i.fa.fa-save 
          Guardar

:javascript
  $(document).ready(function () {
    $("#entity_name").focus();
    $('#type-entity-select').select2();

    if($('form[id^="edit_"]').length > 0) {
      submit_validate($('form[id^="edit_"]'));
    }else{
      submit_validate($('#new_entity'));
    }
  });
  
  function submit_validate(form){
    $(form['selector']).ajaxForm({
      beforeSubmit: function() {
        $(form['selector']).validate({
          // Rules for form validation
          rules : {
            'entity[name]' : {
              required : true,
            },
            'entity[surname]' : {
              required : true,
            }
          },

          // Messages for form validation
          messages : {
            'entity[name]' : {
              required : 'Por favor, ingresar el nombre.'
            },
            'entity[surname]' : {
              required : 'Por favor, ingresar el apellido.'
            }
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
          }
        });
        // Remove all Help-inLine
        $(".help-inline").remove();
        // Client Valid
        return $(form['selector']).valid();
      },
      target: '#content',
      success: function (data){
        $(".help-inline").parent().addClass("state-error");
      },
      error: function(xhr, status, error) {
      }
    });
  }