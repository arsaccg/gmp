#wid-id-0.jarviswidget{"data-widget-colorbutton" => "false", "data-widget-editbutton" => "false"}
  %header
    %span.widget-icon
      %i.fa.fa-eye
    %h2 Categoria del Trabajador
  .widget-body
    = simple_form_for([:production, @categoryOfWorker], html: {class: 'form-horizontal smart-form', autocomplete: 'off' }) do |f|
      %fieldset
        .row{ 'style' => 'display:none' }
          %input{ 'name' => 'company_id', 'value' => "#{@company_id}", 'readonly' => true, 'style' => 'display:none' }
        .row
          %section.col.col-10
            %label.label Nombre
            %label.input{for: "name"}
              %select.form-control{:name => "category_of_worker[name]", :style => 'width:100%;padding: 0;border: none;'}
                - @articles.each do |article|
                  %option{:value => "#{article.name}"}
                    = article.name
        .row
          %section.col.col-10
            %label.label Unidad
            %label.input{for: "unit_of_measurement_id"}
              %select.form-control{:name =>"category_of_worker[unit_of_measurement_id]", :style => 'width:100%;padding: 0;border: none;'}
                - @unitOfMeasurements.each do |unitOfMeasurement|
                  %option{:value => "#{unitOfMeasurement.id}"}
                    = unitOfMeasurement.name
        .row
          %section.col.col-10
            %label.label Precio Normal
            %label.input{for: "normal_price"}
              %i.icon-append.fa.fa-user
              = f.input :normal_price, placeholder: "Precio Normal", input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-10
            %label.label Precio HE 60
            %label.input{for: "he_60_price"}
              %i.icon-append.fa.fa-credit-card
              = f.input :he_60_price, placeholder: "Precio Horas Extras 60%", input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-10
            %label.label Precio HE 100
            %label.input{for: "he_100_price"}
              %i.icon-append.fa.fa-credit-card
              = f.input :he_100_price, placeholder: "Precio Horas Extras 100%", input_html: { class: 'form-control' }, label: false
      %footer
        %button.btn.btn-primary{type: "submit"}
          %i.fa.fa-save 
          Guardar

:javascript
  $(document).ready(function () {

    $('select').select2();

    if($('form[id^="edit_"]').length > 0) {
      submit_validate($('form[id^="edit_"]'));
    }else{
      submit_validate($('#new_category_of_worker'));
    }

  });
  
  function submit_validate(form){
    $(form['selector']).ajaxForm({
      beforeSubmit: function() {
        $(form['selector']).validate({
          // Rules for form validation
          rules : {
            'category_of_worker[name]' : {
              required : true,
            },
            'category_of_worker[unit_of_measurement_id]' : {
              required : true,
            },
            'category_of_worker[normal_price]' : {
              required : true,
            },
            'category_of_worker[he_60_price]' : {
              required : true,
            },
            'category_of_worker[he_100_price]' : {
              required : true,
            }
          },

          // Messages for form validation
          messages : {
            'category_of_worker[name]' : {
              required : 'Por favor, ingresar el nombre.'
            },
            'category_of_worker[unit_of_measurement_id]' : {
              required : 'Por favor, ingresar la unidad de Medida.'
            },
            'category_of_worker[normal_price]' : {
              required : 'Por favor, ingresar el precio Normal.'
            },
            'category_of_worker[he_60_price]' : {
              required : 'Por favor, ingresar el precio 60.'
            },
            'category_of_worker[he_100_price]' : {
              required : 'Por favor, ingresar el precio 100.'
            }
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
          }
        });
        // Remove all Help-inLine
        $(".help-inline").remove();
        // Client Valid
        return $(form['selector']).valid();
      },
      target: '#content',
      success: function (data){
        $(".help-inline").parent().addClass("state-error");
      },
      error: function(xhr, status, error) {
      }
    });
  }