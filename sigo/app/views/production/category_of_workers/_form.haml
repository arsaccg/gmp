#wid-id-0.jarviswidget{"data-widget-colorbutton" => "false", "data-widget-editbutton" => "false"}
  %header
    %span.widget-icon
      %i.fa.fa-eye
    %h2 Categoria del Trabajador
  .widget-body
    = simple_form_for([:production, @categoryOfWorker], html: {class: 'form-horizontal smart-form', autocomplete: 'off' }) do |f|
      %header Datos Principales
      %br
      %fieldset
        .row{ 'style' => 'display:none' }
          %input{ 'name' => 'cost_center_id', 'value' => "#{@cc}", 'readonly' => true, 'style' => 'display:none' }
          %input{ 'id' => 'id', 'value' => @categoryOfWorker.id, 'readonly' => true, 'style' => 'display:none' }
          = f.input :id, label: false
        .row
          %section.col.col-4
            %label.label Fecha
            %label.input{for: "week_id"}
            = f.input :change_date, label: false, as: :string,  input_html: { class: 'form-control', :value => @fecha, :type => "date", :id => "weeks", :onchange => "weeks_for_data();"}
              
          %section.col.col-4
            %label.label Nombre Categoria
            %label.input{for: "name"}
              %i.icon-append.fa.fa-user
              = f.input :name, placeholder: "Nombre", input_html: { class: 'form-control' }, label: false

          %section.col.col-4
            %label.label Sub-Grupo
            %label.input{for: "category_id"}
              %select.form-control{:name =>"category_of_worker[category_id]", :style => 'width:100%;padding: 0;border: none;'}
                %option{:value => ''}
                  = 'Seleccione sub-Grupo'
                - @subgroups.each do |subgroup|
                  - if @action == 'edit'
                    - if @categoryOfWorker.category_id == subgroup.id
                      %option{:value => "#{subgroup.id}", :selected => true}
                        = '(' + subgroup.code + ') ' + subgroup.name
                    - else
                      %option{:value => "#{subgroup.id}"}
                        = '(' + subgroup.code + ') ' + subgroup.name
                  - else
                    %option{:value => "#{subgroup.id}"}
                      = '(' + subgroup.code + ') ' + subgroup.name


        .row
          %section.col.col-4
            %label.label Precio Normal
            %label.input{for: "normal_price"}
              %i.icon-append.fa.fa-credit-card
              = f.input :normal_price, placeholder: "Precio Normal", input_html: { class: 'form-control' }, label: false
          %section.col.col-4
            %label.label Precio HE 60
            %label.input{for: "he_60_price"}
              %i.icon-append.fa.fa-credit-card
              = f.input :he_60_price, placeholder: "Precio Horas Extras 60%", input_html: { class: 'form-control' }, label: false
        
          %section.col.col-4
            %label.label Precio HE 100
            %label.input{for: "he_100_price"}
              %i.icon-append.fa.fa-credit-card
              = f.input :he_100_price, placeholder: "Precio Horas Extras 100%", input_html: { class: 'form-control' }, label: false
      
      %fieldset
        .row
          - @reg_n = ((Time.now.to_f)*100).to_i
          %section.col.col-6
            %header{ :style => 'margin-left: 0;' } Ganancias Fijas
            %br
            %div#ingresos            
              - if @action == 'new'
                - @concept_earnings.each do |concept|
                  .row
                    %section.col.col-10
                      %label.label= concept.name.to_s
                      %label.input{for: "#{concept.code}"}
                        %i.icon-append.fa.fa-credit-card
                        = hidden_field_tag "category_of_worker[category_of_workers_concepts_attributes][" + @reg_n.to_s + "][concept_id]", concept.id
                        = hidden_field_tag "category_of_worker[category_of_workers_concepts_attributes][" + @reg_n.to_s + "][type_concept]", concept.type_obrero
                        = hidden_field_tag "category_of_worker[category_of_workers_concepts_attributes][" + @reg_n.to_s + "][concept_code]", concept.code
                        = text_field_tag "category_of_worker[category_of_workers_concepts_attributes][" + @reg_n.to_s + "][amount]", 0.00, class: "form-control", onkeypress: "return isNumber(event);", onchange: "this.value = minmax(this.value, 0, 99999999)"
                  - @reg_n += 1
              - else
                - @concept_earnings.each do |cowc|
                  .row
                    %section.col.col-10
                      %label.label= cowc.concept.name.to_s
                      %label.input{for: "#{cowc.concept.code}"}
                        %i.icon-append.fa.fa-credit-card
                        = hidden_field_tag "category_of_worker[category_of_workers_concepts_attributes][" + @reg_n.to_s + "][id]", cowc.id
                        = hidden_field_tag "category_of_worker[category_of_workers_concepts_attributes][" + @reg_n.to_s + "][category_of_worker_id]", @categoryOfWorker.id
                        = text_field_tag "category_of_worker[category_of_workers_concepts_attributes][" + @reg_n.to_s + "][amount]", cowc.amount.to_f, class: "form-control", onkeypress: "return isNumber(event);", onchange: "this.value = minmax(this.value, 0, 99999999)"
                  - @reg_n += 1

          %section.col.col-6
            %header{ :style => 'margin-left: 0;' } Descuentos Fijos
            %br
            %div#descuentos
              - if @action == 'new'
                - @concept_discounts.each do |concept|
                  .row
                    %section.col.col-10
                      %label.label= concept.name.to_s
                      %label.input{for: "#{concept.code}"}
                        %i.icon-append.fa.fa-credit-card
                        = hidden_field_tag "category_of_worker[category_of_workers_concepts_attributes][" + @reg_n.to_s + "][concept_id]", concept.id
                        = hidden_field_tag "category_of_worker[category_of_workers_concepts_attributes][" + @reg_n.to_s + "][type_concept]", concept.type_obrero
                        = hidden_field_tag "category_of_worker[category_of_workers_concepts_attributes][" + @reg_n.to_s + "][concept_code]", concept.code
                        = text_field_tag "category_of_worker[category_of_workers_concepts_attributes][" + @reg_n.to_s + "][amount]", 0.00, class: "form-control", onkeypress: "return isNumber(event);", onchange: "this.value = minmax(this.value, 0, 99999999)"
                  - @reg_n += 1
              - else
                - @concept_discounts.each do |cowc|
                  .row
                    %section.col.col-10
                      %label.label= cowc.concept.name.to_s
                      %label.input{for: "#{cowc.concept.code}"}
                        %i.icon-append.fa.fa-credit-card
                        = hidden_field_tag "category_of_worker[category_of_workers_concepts_attributes][" + @reg_n.to_s + "][id]", cowc.id
                        = hidden_field_tag "category_of_worker[category_of_workers_concepts_attributes][" + @reg_n.to_s + "][category_of_worker_id]", @categoryOfWorker.id
                        = text_field_tag "category_of_worker[category_of_workers_concepts_attributes][" + @reg_n.to_s + "][amount]", cowc.amount.to_f, class: "form-control", onkeypress: "return isNumber(event);", onchange: "this.value = minmax(this.value, 0, 99999999)"
                  - @reg_n += 1

      %footer
        %button.btn.btn-primary{type: "submit"}
          %i.fa.fa-save 
          Guardar

:javascript
  $(document).ready(function () {
    $('select').select2();
    if($('form[id^="edit_"]').length > 0) {
      submit_validate($('form[id^="edit_"]'));
    }else{
      submit_validate($('#new_category_of_worker'));
    }
    weeks_for_data();
  });
  
  function submit_validate(form){
    $(form['selector']).ajaxForm({
      beforeSubmit: function() {
        $(form['selector']).validate({
          // Rules for form validation
          rules : {
            'category_of_worker[name]' : {
              required : true,
            },
            'category_of_worker[unit_of_measurement_id]' : {
              required : true,
            },
            'category_of_worker[normal_price]' : {
              required : true,
            },
            'category_of_worker[he_60_price]' : {
              required : true,
            },
            'category_of_worker[he_100_price]' : {
              required : true,
            }
          },

          // Messages for form validation
          messages : {
            'category_of_worker[name]' : {
              required : 'Por favor, ingresar el nombre.'
            },
            'category_of_worker[unit_of_measurement_id]' : {
              required : 'Por favor, ingresar la unidad de Medida.'
            },
            'category_of_worker[normal_price]' : {
              required : 'Por favor, ingresar el precio Normal.'
            },
            'category_of_worker[he_60_price]' : {
              required : 'Por favor, ingresar el precio 60.'
            },
            'category_of_worker[he_100_price]' : {
              required : 'Por favor, ingresar el precio 100.'
            }
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
            $('#modalLoadingLabelading').modal('hide');
            $('.modal-backdrop.fade.in').remove();
          }
        });
        // Remove all Help-inLine
        $(".help-inline").remove();
        $('#modalLoadingLabelading').modal('hide');
        $('.modal-backdrop.fade.in').remove();
        // Client Valid
        if( $(form['selector']).valid() ){
          $('#modalLoadingLabelading').modal();
        }
        // Client Valid
        return $(form['selector']).valid();
      },
      target: '#content',
      success: function (data){
        $(".help-inline").parent().addClass("state-error");
        $('#modalLoadingLabelading').modal('hide');
        $('.modal-backdrop.fade.in').remove();
      },
      error: function(xhr, status, error) {
        $('#modalLoadingLabelading').modal('hide');
        $('.modal-backdrop.fade.in').remove();
      }
    });
  }

  function isNumber(evt) {
    evt = (evt) ? evt : window.event;
    var charCode = (evt.which) ? evt.which : evt.keyCode;
    if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode != 46) {
        return false;
    }
    return true;
  }

  function minmax(value, min, max){
    console.log(value)
    if(parseFloat(value) < min || isNaN(value)) 
      return min; 
    else if(parseFloat(value) > max) 
      return max; 
    else return value;
  }

  function weeks_for_data(){
    if(#{@action=="edit"}){
      var week_id = $('#weeks').val();
      var cat_id = #{@categoryOfWorker.category_id}
      complete_info("#{get_info_per_week_production_category_of_workers_path}", week_id, cat_id, "#{form_authenticity_token}");
    }
  }


  function complete_info(url, week, cat, form_token){
    $.ajax({
      type: "POST",
      url: url,
      async: false,
      data: { week: week, authenticity_token: form_token, cat: cat}
    }).done(function( data ){
      newOptions = [];
      $('#id').val(data.category['id']);
      $('#category_of_worker_id').val(data.category['id']);
      $('#category_of_worker_id').attr('value',data.category['id']);
      $('#category_of_worker_normal_price').val(data.category['normal_price']);
      $('#category_of_worker_he_60_price').val(data.category['he_60_price']);
      $('#category_of_worker_he_100_price').val(data.category['he_100_price']);


      newOptions = [];
      $.each(data.ingresos, function(key, value){
        item = {};
        item['id'] = value.id;
        item['name'] = value.name;
        item['category_of_worker_id'] = value.category_of_worker_id;
        item['concept_id'] = value.concept_id;
        item['amount'] = value.amount;
        item['type_concept'] = value.type_concept;
        item['concept_code'] = value.concept_code;
        item['reg'] = value.reg;
        newOptions.push(item);
      });

      $('#ingresos').empty();
      $.each(newOptions, function(key,value){
        $('#ingresos').append(
          $('<div></div').attr('class','row').append(
            $('<section></section').attr('class','col col-10').append(
              $('<label></label').attr('class','label').text(value.name),
              $('<label></label').attr('class','input').append(
                $('<i></i>').attr('icon-append fa fa-credit-card'),
                $('<input></input').attr('id','category_of_worker_category_of_workers_concepts_attributes_'+value.reg+'_concept_id').attr('name', 'category_of_worker[category_of_workers_concepts_attributes]['+value.reg+'][id]').attr('type','hidden').attr('value',value.id),
                $('<input></input').attr('id','category_of_worker_category_of_workers_concepts_attributes_'+value.reg+'_concept_id').attr('name', 'category_of_worker[category_of_workers_concepts_attributes]['+value.reg+'][concept_id]').attr('type','hidden').attr('value',value.concept_id),                
                $('<input></input').attr('id','category_of_worker_category_of_workers_concepts_attributes_'+value.reg+'_type_concept').attr('name', 'category_of_worker[category_of_workers_concepts_attributes]['+value.reg+'][type_concept]').attr('type','hidden').attr('value',value.type_concept),
                $('<input></input').attr('id','category_of_worker_category_of_workers_concepts_attributes_'+value.reg+'_concept_code').attr('name', 'category_of_worker[category_of_workers_concepts_attributes]['+value.reg+'][concept_code]').attr('type','hidden').attr('value',value.concept_code),
                $('<input></input').attr('class','form-control').attr('id','category_of_worker_category_of_workers_concepts_attributes_'+value.reg+'_amount').attr('name', 'category_of_worker[category_of_workers_concepts_attributes]['+value.reg+'][amount]').attr('onchange','this.value = minmax(this.value, 0, 99999999)').attr('value',value.amount).attr('onkeypress','return isNumber(event);').attr('type','text')
              )
            )
          )
        );
      });  

      newOptions = [];
      $.each(data.descuentos, function(key, value){
        item = {};
        item['id'] = value.id;
        item['name'] = value.name;
        item['category_of_worker_id'] = value.category_of_worker_id;
        item['concept_id'] = value.concept_id;
        item['amount'] = value.amount;
        item['type_concept'] = value.type_concept;
        item['concept_code'] = value.concept_code;
        item['reg'] = value.reg;
        newOptions.push(item);
      });
      $('#descuentos').empty();
      $.each(newOptions, function(key,value){
        $('#descuentos').append(
          $('<div></div').attr('class','row').append(
            $('<section></section').attr('class','col col-10').append(
              $('<label></label').attr('class','label').text(value.name),
              $('<label></label').attr('class','input').append(
                $('<i></i').attr('icon-append fa fa-credit-card'),
                $('<input></input').attr('id','category_of_worker_category_of_workers_concepts_attributes_'+value.reg+'_concept_id').attr('name', 'category_of_worker[category_of_workers_concepts_attributes]['+value.reg+'][id]').attr('type','hidden').attr('value',value.id),
                $('<input></input').attr('id','category_of_worker_category_of_workers_concepts_attributes_'+value.reg+'_concept_id').attr('name', 'category_of_worker[category_of_workers_concepts_attributes]['+value.reg+'][concept_id]').attr('type','hidden').attr('value',value.concept_id),                
                $('<input></input').attr('id','category_of_worker_category_of_workers_concepts_attributes_'+value.reg+'_type_concept').attr('name', 'category_of_worker[category_of_workers_concepts_attributes]['+value.reg+'][type_concept]').attr('type','hidden').attr('value',value.type_concept),
                $('<input></input').attr('id','category_of_worker_category_of_workers_concepts_attributes_'+value.reg+'_concept_code').attr('name', 'category_of_worker[category_of_workers_concepts_attributes]['+value.reg+'][concept_code]').attr('type','hidden').attr('value',value.concept_code),
                $('<input></input').attr('class','form-control').attr('id','category_of_worker_category_of_workers_concepts_attributes_'+value.reg+'_amount').attr('name', 'category_of_worker[category_of_workers_concepts_attributes]['+value.reg+'][amount]').attr('onchange','this.value = minmax(this.value, 0, 99999999)').attr('value',value.amount).attr('onkeypress','return isNumber(event);').attr('type','text')
              )
            )
          )
        );
      });      
    });
  }
