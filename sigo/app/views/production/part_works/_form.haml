#wid-id-0.jarviswidget{"data-widget-colorbutton" => "false", "data-widget-editbutton" => "false"}
  %header
    %span.widget-icon
      %i.fa.fa-eye
    %h2 Subcontrato
  .widget-body
    = simple_form_for([:production, @partwork], html: {class: 'form-horizontal smart-form', autocomplete: 'off' }) do |f|
      %fieldset
        .row{ 'style' => 'display:none' }
          %input{ 'name' => 'company_id', 'value' => "#{@company}", 'readonly' => true, 'style' => 'display:none' }
        .row
          %section.col.col-1
            %label.input{for: "number_working_group"}
              = f.input :number_working_group, placeholder: "Numero", input_html: { class: 'form-control' }, label: false

          %section.col.col-5
            %label.input{for: "working_group_id"}
              %select.form-control{:name =>"part_work[working_group_id]", :style => 'width:100%;padding: 0;border: none;'}
                %option{:value => ''}
                  = 'JEFEDEFRENTE - EJECUTOR - MAESTRO DE OBRA'
                - @working_groups.each do |working_group|
                  - if @action == 'edit'
                    - if @partwork.working_group_id == working_group.id
                      %option{:value => "#{working_group.id}", :selected => true}
                        =  Worker.find(working_group.front_chief_id).entity.name + ' ' + Worker.find(working_group.front_chief_id).entity.second_name + ' - ' + Entity.find(working_group.executor_id).name + ' - ' + Worker.find(working_group.master_builder_id).entity.name + ' ' + Worker.find(working_group.master_builder_id).entity.second_name
                    - else
                      %option{:value => "#{working_group.id}"}
                        = Worker.find(working_group.front_chief_id).entity.name + ' ' + Worker.find(working_group.front_chief_id).entity.second_name + ' - ' + Entity.find(working_group.executor_id).name + ' - ' + Worker.find(working_group.master_builder_id).entity.name + ' ' + Worker.find(working_group.master_builder_id).entity.second_name
                  - else
                    %option{:value => "#{working_group.id}"}
                      =  Worker.find(working_group.front_chief_id).entity.name + ' ' + Worker.find(working_group.front_chief_id).entity.second_name + ' - ' + Entity.find(working_group.executor_id).name + ' - ' + Worker.find(working_group.master_builder_id).entity.name + ' ' + Worker.find(working_group.master_builder_id).entity.second_name
          %section.col.col-4
            %select.form-control{:name =>"part_work[sector_id]", :style => 'width:100%;padding: 0;border: none;'}
              - @sectors.each do |sector|
                %optgroup{:label => "#{sector.name}"}
                  - Sector.getSubSectors(sector.code).each do |subsector|
                    %option{:value => "#{subsector.id}"}
                      = subsector.name
          %section.col.col-2
            %label.input{for: "date_of_creation"}
              = f.input :date_of_creation, as: :string, input_html: { class: 'form-control', :type => "date" }, label: false
            
      %fieldset
        %legend Registro de Partidas
        .row
          %section.col.col-2
            %label.control-label(for="article_id") Insumos

          %section.col.col-6
            %input#article-select.select2.bigdrop.select2-offscreen.form-control{'name' => 'article_id', 'type' => 'hidden', 'style' => 'width:100%;padding: 0;border: none;'}

          %section.col.col-2
            %div
              %a(href="javascript:add_article_item();" id="btn-add-article" class="btn btn-success" role="button")
                Agregar Insumo

        .col-lg-12
          %table.has-tickbox(class="table table-condensed table-bordered table-striped table-hover dataTable" style="font-size: 12px;" id="summary-articles" aria-describedby="data-table_info")
            %thead
              %tr
                %th Insumo
                %th Unidad
                %th Metrado
                %th ObservaciÃ³n
                %th Eliminar
            %tbody(id="article_items_table")
              -if @action == "edit"
                - @partworkde.each do |part|
                  %tr.partwork_item{id: "tr" + @reg_n.to_s}
                    %td.part-id{"style"=>"display:none"}
                      = hidden_field_tag 'part_work[part_work_details_attributes][' + @reg_n.to_s + '][id]', part.id
                    %td.article-id{"style"=>"display:none"}
                      = hidden_field_tag 'part_work[part_work_details_attributes][' + @reg_n.to_s + '][part_work_id]', @partwork.id
                    %td.article-id{"style"=>"display:none"}
                      = hidden_field_tag 'part_work[part_work_details_attributes][' + @reg_n.to_s + '][article_id]', part.article_id
                    %td.col-md-2
                      = part.article.name
                    %td.col-md-2
                      = part.article.unit_of_measurement.name
                    %td.bill-of-quantitties.col-md-1{:style => "width:5%"}
                      = text_field_tag 'part_work[part_work_details_attributes][' + @reg_n.to_s + '][bill_of_quantitties]', part.bill_of_quantitties , class: "form-control bill-of-quantitties", :required => true, title:'No puede dejar este campo vacio'
                    %td.description
                      = text_area_tag 'part_work[part_work_details_attributes][' + @reg_n.to_s + '][description]', part.description, class: "form-control description"
                    %td{:style => "width: 1%; text-align: center;"}
                      %label.checkbox
                        = check_box 'part_work', '[part_work_details_attributes][' + @reg_n.to_s + '][_destroy]'
                        %i
                  - @reg_n+=1
      %footer
        %button.btn.btn-primary{type: "submit"}
          %i.fa.fa-save 
          Guardar

:javascript
  $(document).ready(function () {

    $('select').select2();

    $('#article-select').select2({
      placeholder: "Buscar Insumos...",
      minimumInputLength: 3,
      ajax: {
        url: "#{display_articles_production_part_works_path}",
        dataType: 'json',
        type: 'POST',
        quietMillis: 100,
        data: function(term, page){
          return {
            q: term,
            page: page,
            authenticity_token: "#{form_authenticity_token}"
          };
        },
        results: function(data, page){
          return {results: data.articles};
        }
      },
      formatResult: function(node){ return '<div>' + node.name + '</div>' },
      formatSelection: function(node){ return node.name },
      escapeMarkup: function (m) { return m; }
    });

    if($('form[id^="edit_"]').length > 0) {
      submit_validate($('form[id^="edit_"]'));
    }else{
      submit_validate($('#new_part_work'));
    }

  });
  
  function submit_validate(form){
    $(form['selector']).ajaxForm({
      beforeSubmit: function() {
        $(form['selector']).validate({
          // Rules for form validation
          rules : {
            'part_work[number_working_group]' : {
              required : true
            },
            'part_work[working_group_id]' : {
              required : true
            },
            'part_work[sector_id]' : {
              required : true
            },
            'part_work[date_of_creation]' : {
              required : true
            }
          },

          // Messages for form validation
          messages : {
            'part_work[number_working_group]' : {
              required : 'Por favor, ingresar el grupo de trabajo.'
            },
            'part_work[working_group_id]' : {
              required : 'Por favor, ingresar el grupo de trabajo.'
            },
            'part_work[sector_id]' : {
              required : 'Por favor, ingresar el sector.'
            },
            'part_work[date_of_creation]' : {
              required : 'Por favor, ingresar la fecha.'
            }
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
          }
        });
        // Remove all Help-inLine
        $(".help-inline").remove();
        // Client Valid
        return $(form['selector']).valid();
      },
      target: '#content',
      success: function (data){
        $(".help-inline").parent().addClass("state-error");
      },
      error: function(xhr, status, error) {
      }
    });
  }

  function add_article_item(){
    str_item = {authenticity_token: "#{form_authenticity_token}", article_id: $("#article-select").val(), amount: $("#article-amount").val()};
    append_url_ajax('#{add_more_article_production_part_works_path}', 'article_items_table', str_item, 0, 'POST');
  }


  function delete_item(code){
    $("#tr" + code).remove();
  }