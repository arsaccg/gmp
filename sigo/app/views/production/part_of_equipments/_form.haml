#wid-id-0.jarviswidget{"data-widget-colorbutton" => "false", "data-widget-editbutton" => "false"}
  %header
    %span.widget-icon
      %i.fa.fa-eye
    %h2 Parte de Equipo
  .widget-body
    = simple_form_for([:production, @partofequipment], html: {class: 'form-horizontal smart-form', autocomplete: 'off' }) do |f|
      %fieldset
        .row{ 'style' => 'display:none' }
          %input{ 'name' => 'company_id', 'value' => "#{@company}", 'readonly' => true, 'style' => 'display:none' }
        .row
          %section.col.col-6
            .row
              %section.col.col-3
                %label.label NÃºmero de Parte
                %label.input
                  = f.input :code, placeholder: "Numero", input_html: { class: 'form-control' }, label: false
            .row
              %section.col.col-6
                %label.label Proveedor
                %label.input
                  %select.form-control#ent{:name =>"part_of_equipment[subcontract_equipment_id]", :style => 'width:100%;padding: 0;border: none;'}
                    -@subcon.each do |subcon|
                      -if @action =="edit"
                        -if @partofequipment.subcontract_equipment_id == subcon.id
                          %option{:value => "#{subcon.id}", :selected=>"selected"}
                            = subcon.entity.name
                        -else
                          %option{:value => "#{subcon.id}"}
                            = subcon.entity.name
                      -else
                        %option{:value => "#{subcon.id}"}
                          = subcon.entity.name
            .row
              %section.col.col-6
                %label.label Equipos
                %label.input
                  %select.form-control#equipment{:name =>"part_of_equipment[equipment_id]", :style => 'width:100%;padding: 0;border: none;'}
            .row
              %section.col.col-6
                %label.label Operador
                %label.input
                  %select.form-control#worker{:name =>"part_of_equipment[worker_id]", :style => 'width:100%;padding: 0;border: none;'}
                    -@worker.each do |wo|
                      -if @action =="edit"
                        -if @partofequipment.worker_id == wo.id
                          %option{:value => "#{wo.id}", :selected=>"selected"}
                            = wo.first_name + ' ' + wo.paternal_surname + ' ' + wo.maternal_surname
                        -else
                          %option{:value => "#{wo.id}"}
                            = wo.first_name + ' ' + wo.paternal_surname + ' ' + wo.maternal_surname
                      -else
                        %option{:value => "#{wo.id}"}
                          = wo.first_name + ' ' + wo.paternal_surname + ' ' + wo.maternal_surname

          %section.col.col-6
            .row
              %section.col.col-3
                %label.label Horometro/Kilometraje
              %section.col.col-2
                %label.input#hm
                  = f.input :initial_km, placeholder: "Inicial", input_html: { class: 'form-control'}, label: false,  :onchange =>'calculateHours();'
              %section.col.col-1
                %i.fa.fa-minus
              %section.col.col-2
                %label.input#km
                  = f.input :final_km, placeholder: "Final", input_html: { class: 'form-control'}, label: false, :onchange =>'calculateHours();'
              %section.col.col-1
                %i.fa.fa-exchange
              %section.col.col-2
                %label.input
                  = f.input :dif, input_html: { class: 'form-control' }, label: false, :readonly => true
            .row
              %section.col.col-3
                %label.label H. stand by
                %label.input
                  = f.input :h_stand_by, placeholder: " H. stand by", input_html: { class: 'form-control' }, label: false
              %section.col.col-2
              %section.col.col-3
                %label.label H. Mantenimiento
                %label.input
                  = f.input :h_maintenance, placeholder: "  H. Mantenimiento", input_html: { class: 'form-control' }, label: false
            .row
              %section.col.col-5
                %label.label Tipo de Combustible
                %label.input
                  %input#fuel.select2.bigdrop.select2-offscreen.form-control{'name' => 'part_of_equipment[subcategory_id]', 'type' => 'hidden', 'style' => 'width:100%;padding: 0;border: none;', 'value' => "#{@partofequipment.subcategory_id}"}

              %section.col.col-3
                %label.label Cantidad de Combustible
                %label.input
                  = f.input :fuel_amount, input_html: { class: 'form-control' }, label: false

            .row
              %section.col.col-5
                %label.label Fecha
                .col.col-12
                  .form-group
                    .input-group
                      = f.input :date,as: :string, input_html: { class: 'form-control', :type => "date" }, label: false
                      %span.input-group-addon
                        %i.fa.fa-calendar.fa-md.fa-fw

              %section.col.col-3
                %label.label Total de Horas Efectivas
                %label.input
                  = f.input :total_hours, input_html: { class: 'form-control'}, label: false, :readonly => true


        %fieldset
          %legend Registro de Partidas
          .row
            %section.col.col-2
              %div
                %a(href="javascript:add_more_register();" id="btn-add-article" class="btn btn-success" role="button")
                  Agregar Registro

          .col-lg-12
            %table.has-tickbox(class="table table-condensed table-bordered table-striped table-hover dataTable" style="font-size: 12px;" id="summary-workers" aria-describedby="data-table_info")
              %thead
                %tr
                  %th.col-lg-3 Grupo de Trabajo
                  %th.col-lg-2 Sector
                  %th.col-lg-2 Fase
                  %th.col-lg-2 Horas Efectivas
                  %th.col-lg-2 Unidad de Medida
                  %th.col-lg-1 Eliminar
              %tbody(id="part_register_table")
                -if @action=="edit"
                  - @partdetail.each do |part|
                    = hidden_field_tag 'part_of_equipment[part_of_equipment_details_attributes][' + @reg_n.to_s + '][id]', part.id
                    = hidden_field_tag 'part_of_equipment[part_of_equipment_details_attributes][' + @reg_n.to_s + '][part_of_equipment_id]', @partofequipment.id
                    %tr.part-equi_item{id: "tr" + @reg_n.to_s}
                      %td.col-lg-3
                        %select.form-control{:name =>"part_of_equipment[part_of_equipment_details_attributes][" + @reg_n.to_s + "][working_group_id]"}
                          -@working_groups.each do |wg|
                            -if part.working_group_id == wg.id
                              %option{:value => "#{wg.id}", :selected=>"selected"}
                                =wg.name
                            -else
                              %option{:value => "#{wg.id}"}
                                =wg.name

                      %td.sector
                        %select.form-control{:name =>"part_of_equipment[part_of_equipment_details_attributes][" + @reg_n.to_s + "][sector_id]"}
                          - @sectors.each do |sector|
                            %optgroup{:label => "#{sector.name}"}
                              - Sector.getSubSectors(sector.code).each do |subsector|
                                %option{:value => "#{subsector.id}"}
                                  = subsector.name
                          
                      %td.phase.col-lg-2
                        %select.form-control{:name =>"part_of_equipment[part_of_equipment_details_attributes][" + @reg_n.to_s + "][phase_id]"}
                          - @phases.each do |phas|
                            %optgroup{:label => "#{phas.name}"}
                              - Phase.get_subphases(phas.code).each do |subphase|
                                -if part.phase_id == subphase.id
                                  %option{:value => "#{subphase.id}", :selected=>"selected"}
                                    = subphase.name
                                -else
                                  %option{:value => "#{subphase.id}"}
                                    = subphase.name

                      %td.effective-hours.col-lg-2
                        = text_field_tag 'part_of_equipment[part_of_equipment_details_attributes][' + @reg_n.to_s + '][effective_hours]', part.effective_hours , class: "form-control effective-hours", onchange: "sumHours(this);"
                      %td.unit-of-measumente.col-lg-1
                        = text_field_tag 'part_of_equipment[part_of_equipment_details_attributes][' + @reg_n.to_s + '][unit]', '' , class: "form-control unit", readonly: true
                      %td.delete-item
                        %label.checkbox
                          = check_box 'part_of_equipment[part_of_equipment_details_attributes]', '[' + @reg_n.to_s + '][_destroy]'
                          %i
                    - @reg_n+=1
              
      %footer
        %button.btn.btn-primary{type: "submit"}
          %i.fa.fa-save 
          Guardar

:javascript
  $(document).ready(function () {
    
    var subcontract_id = $("#ent").val();
    complete_equipment("#{get_equipment_form_subcontract_production_part_of_equipments_path}", subcontract_id, "#{form_authenticity_token}", "0302");

    $('select').select2();
    $('#fuel').select2({
      placeholder: "Buscar Combustible...",
      minimumInputLength: 3,
      ajax: {
        url: "#{display_fuel_articles_production_part_of_equipments_path}",
        dataType: 'json',
        type: 'POST',
        quietMillis: 100,
        data: function(term, page){
          return {
            q: term,
            page: page,
            authenticity_token: "#{form_authenticity_token}"
          };
        },
        results: function(data, page){
          return {results: data.articles};
        }
      },
      initSelection: function(element, callback) {
        var id=$(element).val();
        if (id != "") {
          $.ajax("#{display_fuel_articles_production_part_of_equipments_path}", {
            type: 'POST',
            data: {
              element: id,
              authenticity_token: "#{form_authenticity_token}"
            },
            dataType: "json"
          }).done(function(data) { 
            callback(data.articles[0]);
          });
        }
      },
      formatResult: function(node){ return '<div>' + node.name + '</div>' },
      formatSelection: function(node){ return node.name },
      escapeMarkup: function (m) { return m; }
    });

    if($('form[id^="edit_"]').length > 0) {
      submit_validate($('form[id^="edit_"]'));
    }else{
      submit_validate($('#new_part_of_equipment'));
    }

  });
  
  function submit_validate(form){
    $(form['selector']).ajaxForm({
      beforeSubmit: function() {
        $(form['selector']).validate({
          // Rules for form validation
          rules : {
            'part_of_equipment[code]':{
              required : true
            },
            'part_of_equipment[initial_km]':{
              required : true
            },
            'part_of_equipment[final_km]':{
              required : true
            },
            'part_of_equipment[fuel_amount]':{
              required : true
            },
            'part_of_equipment[h_stand_by]':{
              required : true
            },
            'part_of_equipment[h_maintenance]':{
              required : true
            },
            'part_of_equipment[date]':{
              required : true
            }
            
          },

          // Messages for form validation
          messages : {
            'part_of_equipment[code]':{
              required : 'Por favor, ingrese el cÃ³digo de parte.'
            },
            'part_of_equipment[initial_km]':{
              required : 'Por favor, ingrese el valor inicial.'
            },
            'part_of_equipment[final_km]':{
              required : 'Por favor, ingrese el valor final'
            },
            'part_of_equipment[fuel_amount]':{
              required : 'Por favor, ingrese la cantidad de combustible'
            },
            'part_of_equipment[h_stand_by]':{
              required : 'Por favor, ingrese el h. stand by'
            },
            'part_of_equipment[h_maintenance]':{
              required : 'Por favor, ingrese el h. mantenimiento'
            },
            'part_of_equipment[date]':{
              required : 'Por favor, ingrese la fecha.'
            }
            
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
          }
        });
        // Remove all Help-inLine
        $(".help-inline").remove();
        // Client Valid
        return $(form['selector']).valid();
      },
      target: '#content',
      success: function (data){
        $(".help-inline").parent().addClass("state-error");
      },
      error: function(xhr, status, error) {
      }
    });
  }

  function add_more_register(){
    data = { authenticity_token: "#{form_authenticity_token}"};
    append_url_ajax('#{add_more_register_production_part_of_equipments_path}', 'part_register_table', data, 0, 'POST');
  }

  function delete_item(code){
    $("#tr" + code).remove();
  }

  $('#ent').change(function(){
    var subcontract_id = $(this).val();
    complete_equipment("#{get_equipment_form_subcontract_production_part_of_equipments_path}", subcontract_id, "#{form_authenticity_token}", "0302");
  });

  $('#ent').keyup(function(){
    var subcontract_id = $(this).val();
    complete_equipment("#{get_equipment_form_subcontract_production_part_of_equipments_path}", subcontract_id, "#{form_authenticity_token}", "0302");
  });

  $('#hm').change(function(){
    var hm = $('#part_of_equipment_initial_km').val();
    var km = $('#part_of_equipment_final_km').val();
    if(hm!='' && km!=''){
      var dif= km-hm;
      $('#part_of_equipment_dif').val(dif);
    }else{
      $('#part_of_equipment_dif').val('');
    }
  });

  $('#km').change(function(){
    var hm = $('#part_of_equipment_initial_km').val();
    var km = $('#part_of_equipment_final_km').val();
    if(hm!='' && km!=''){
      var dif= km-hm;
      $('#part_of_equipment_dif').val(dif);
    }else{
      $('#part_of_equipment_dif').val('');
    }
  });

  function complete_equipment(url, subcontract_id, form_token, default_value){
    $.ajax({
        type: "POST",
        url: url,
        async: false,
        data: { subcontract_id: subcontract_id, authenticity_token: form_token}
      }).done(function( data ) {
        var unit = data.unit;
        $('.form-control.unit').empty();
        $('.form-control.unit').val(unit);
        newOptions = [];
        $.each(data.equipment, function(key, value){
          item = {};
          item['name'] = value.name;
          item['id'] = value.id;
          item['unit'] = value.unit_of_measurement_id;
          newOptions.push(item);
        });
        $('#equipment').empty();
        $.each(newOptions, function(key,value){
          if ("#{@id}" == value.id)
            $('#equipment').append(
              $("<option></option>").attr("value", value.id).attr("selected", "selected").text(value.name)
            )
          else
            $('#equipment').append(
              $("<option></option>").attr("value", value.id).text(value.name)
            )
          $('.form-control.unit').attr("value", value.unit)
        });
      });
  }