#wid-id-0.jarviswidget{"data-widget-colorbutton" => "false", "data-widget-editbutton" => "false"}
  %header
    %span.widget-icon
      %i.fa.fa-eye
    %h2
      = @typeofcontract
  .widget-body
    = simple_form_for([:production, @workercontract], html: {class: 'form-horizontal smart-form', autocomplete: 'off' }) do |f|
      %fieldset
        .row{ 'style' => 'display:none' }
          %input{ 'name' => 'worker_contract[worker_id]', 'value' => "#{@worker_id}", 'readonly' => true, 'style' => 'display:none' }
        .row
          %section.col.col-md-12
            .col-md-2
              %label.label Numero de Contrato
            .col-md-1
              %label.input{for: "numberofcontract"}
                = f.input :numberofcontract, input_html: { class: 'form-control' }, label: false
            .col-md-1
            .col-md-2{ 'style' => 'display:none' }
              %label.label Tipo de Contrato
            .col-md-1{ 'style' => 'display:none' }
              %label.input{for: "typeofcontract"}
                = f.input :typeofcontract, input_html: { class: 'form-control', value: @typeofcontract}, label: false
        .row
          %section.col.col-4
            %label.label Tipo de Contrato
            %label.input{for: "contract_type_id"}
              %select.form-control{:name =>"worker_contract[contract_type_id]", :style => 'width:100%;padding: 0;border: none;'}
                - @contractypes.each do |contractype|
                  - if @workercontract.contract_type_id == contractype.id
                    %option{:value => "#{contractype.id}", :selected => true}
                      = contractype.description
                  - else
                    %option{:value => "#{contractype.id}"}
                      = contractype.description
        .row
          %section.col.col-4
            -if @worker.typeofworker=='obrero'
              %label.label Categoría del Trabajador
            -elsif @worker.typeofworker=='empleado'
              %label.label Cargo del Trabajador
            %label.input{for: "article_id"}
              %select.form-control{:name =>"worker_contract[article_id]", :style => 'width:100%;padding: 0;border: none;'}
                - @articles.each do |article|
                  - if @workercontract.article_id == article.id
                    %option{:value => "#{article.id}", :selected => true}
                      = article.code + ' ' + article.name
                  - else
                    %option{:value => "#{article.id}"}
                      = article.code + ' ' + article.name
        .row
          %section.col.col-md-12
            .col-md-1
              %label.label Campamento
            .col-md-5
              %label.input{for: "camp"}
                = f.input :camp, input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-md-12
            .col-md-1
              %label.label Destaque
            .col-md-5
              %label.input{for: "destaque"}
                = f.input :destaque, input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-md-12
            .col-md-1
              %label.label Salario
            .col-md-5
              %label.input{for: "salary"}
                = f.input :salary, input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-md-12
            .col-md-1
              %label.label Regimen
            .col-md-5
              %label.input{for: "regime"}
                = f.input :regime, input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-md-12
            .col-md-1
              %label.label Bonificación
            .col-md-5
              %label.input{for: "bonus"}
                = f.input :bonus, input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-md-12
            .col-md-1
              %label.label Viáticos
            .col-md-5
              %label.input{for: "viatical"}
                = f.input :viatical, input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-md-12
            .col-md-1
              %label.label Dias
            .col-md-5
              %label.input{for: "days"}
                = f.input :days, input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-1
            %label.label Dia de Inicio
          %section.col.col-2
            %label.input{for: "start_date"}
              = f.input :start_date, as: :string, input_html: { class: 'form-control', :type => "date" }, label: false
          %section.col.col-1
            %label.label Dia de Fin
          %section.col.col-2
            %label.input{for: "end_date"}
              = f.input :end_date, as: :string, input_html: { class: 'form-control', :type => "date" }, label: false,  :onchange =>'calculatedays();'
      %footer
        %button.btn.btn-primary{type: "submit"}
          %i.fa.fa-save 
          Guardar

:javascript
  $(document).ready(function () {

    $('select').select2();

    if($('form[id^="edit_"]').length > 0) {
      submit_validate($('form[id^="edit_"]'));
    }else{
      submit_validate($('#new_worker_contract'));
    }

  });
  
  function submit_validate(form){
    $(form['selector']).ajaxForm({
      beforeSubmit: function() {
        $(form['selector']).validate({
          // Rules for form validation
          rules : {
            'worker_contract[numberofcontract]' : {
              required : true
            },
            'worker_contract[camp]' : {
              required : true
            },
            'worker_contract[destaque]' : {
              required : true
            },
            'worker_contract[salary]' : {
              required : true
            },
            'worker_contract[regime]' : {
              required : true
            },
            'worker_contract[start_date]' : {
              required : true
            },
            'worker_contract[end_date]' : {
              required : true
            }
          },

          // Messages for form validation
          messages : {
            'worker_contract[numberofcontract]' : {
              required : 'Por favor, ingresar el numero de contrato.'
            },
            'worker_contract[camp]' : {
              required : 'Por favor, ingresar el monto por campamento.'
            },
            'worker_contract[destaque]' : {
              required : 'Por favor, ingresar el monto por destaque.'
            },
            'worker_contract[salary]' : {
              required : 'Por favor, ingresar el monto por salario.'
            },
            'worker_contract[regime]' : {
              required : 'Por favor, ingresar el monto por regimen.'
            },
            'worker_contract[start_date]' : {
              required : 'Por favor, ingresar la fecha de inicio.'
            },
            'worker_contract[end_date]' : {
              required : 'Por favor, ingresar la fecha de fin.'
            }
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
          }
        });
        // Remove all Help-inLine
        $(".help-inline").remove();
        // Client Valid
        return $(form['selector']).valid();
      },
      target: '#content',
      success: function (data){
        $(".help-inline").parent().addClass("state-error");
      },
      error: function(xhr, status, error) {
      }
    });
  }


  function delete_item(code){
    $("#tr" + code).remove();
  }

  $('#worker_contract_days').change(function(){
    var start_date = $('#worker_contract_start_date').val();
    var dias = $('#worker_contract_days').val();
    var dias2 = parseInt(dias)
    var d1 = start_date.split("-");
    var dat1 = new Date(d1[0], parseFloat(d1[1])-1, parseFloat(d1[2]));
    var end_date = new Date(dat1);
    end_date.setDate(dat1.getDate() + dias2 - 1);
    day = String(end_date.getDate());
    month = String(end_date.getMonth()+1);
    year = String(end_date.getFullYear());
    if(day.length<2){
      day = "0"+day;
    }
    if(month.length<2){
      month = "0"+month;
    }
    end_date2 = year+"-"+month+"-"+day;
    $('#worker_contract_end_date').val(end_date2);
  });

  $('#worker_contract_start_date').change(function(){
    var start_date = $('#worker_contract_start_date').val();
    var end_date = $('#worker_contract_end_date').val();
    var d1 = start_date.split("-");
    var dat1 = new Date(d1[0], parseFloat(d1[1])-1, parseFloat(d1[2]));
    var d2 = end_date.split("-");
    var dat2 = new Date(d2[0], parseFloat(d2[1])-1, parseFloat(d2[2]));
    var fin = dat2.getTime() - dat1.getTime();
    var dias = (Math.floor(fin / (1000 * 60 * 60 * 24))+1);
    $('#worker_contract_days').val(dias);
  });

  $('#worker_contract_end_date').change(function(){
    var start_date = $('#worker_contract_start_date').val();
    var end_date = $('#worker_contract_end_date').val();
    var d1 = start_date.split("-");
    var dat1 = new Date(d1[0], parseFloat(d1[1])-1, parseFloat(d1[2]));
    var d2 = end_date.split("-");
    var dat2 = new Date(d2[0], parseFloat(d2[1])-1, parseFloat(d2[2]));
    var fin = dat2.getTime() - dat1.getTime();
    var dias = (Math.floor(fin / (1000 * 60 * 60 * 24))+1);
    $('#worker_contract_days').val(dias);
  });