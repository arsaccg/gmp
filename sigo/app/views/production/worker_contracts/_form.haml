#wid-id-0.jarviswidget{"data-widget-colorbutton" => "false", "data-widget-editbutton" => "false"}
  %header
    %span.widget-icon
      %i.fa.fa-eye
    %h2
      = @typeofcontract
  .widget-body
    = simple_form_for([:production, @workercontract], html: {class: 'form-horizontal smart-form', autocomplete: 'off' }) do |f|
      %fieldset
        .row{ 'style' => 'display:none' }
          %input{ 'name' => 'worker_contract[worker_id]', 'value' => "#{@worker_id}", 'readonly' => true, 'style' => 'display:none' }
        .row
          %section.col.col-md-12
            .col-md-3
              %label.label Numero de Contrato
            -if @action=='edit'
              .col-md-2
                %label.input{for: "numberofcontract"}
                  = f.input :numberofcontract, input_html: { class: 'form-control' }, label: false,:readonly => true
            -else
              .col-md-2
                %label.input{for: "numberofcontract"}
                  = f.input :numberofcontract, input_html: { class: 'form-control', value: @numberofcontract.to_s }, label: false          

            .col-md-1
            .col-md-2{ 'style' => 'display:none' }
              %label.label Tipo de Contrato
            .col-md-1{ 'style' => 'display:none' }
              %label.input{for: "typeofcontract"}
                = f.input :typeofcontract, input_html: { class: 'form-control', value: @typeofcontract.to_s}, label: false
        .row
          %section.col.col-6
            %label.label Tipo de Contrato
            %label.input{for: "contract_type_id"}
              %select.form-control{:name =>"worker_contract[contract_type_id]", :style => 'width:100%;padding: 0;border: none;'}
                - @contractypes.each do |contractype|
                  - if @workercontract.contract_type_id == contractype.id
                    %option{:value => "#{contractype.id}", :selected => true}
                      = contractype.description
                  - else
                    %option{:value => "#{contractype.id}"}
                      = contractype.description
        .row
          %section.col.col-6
            -if @worker.typeofworker=='obrero'
              %label.label CategorÃ­a del Trabajador
            -elsif @worker.typeofworker=='empleado'
              %label.label Cargo del Trabajador
            %label.input{for: "article_id"}
              %select.form-control{:name =>"worker_contract[article_id]", :style => 'width:100%;padding: 0;border: none;'}
                - @articles.each do |article|
                  - if @workercontract.article_id == article.id
                    %option{:value => "#{article.id}", :selected => true}
                      = article.code + ' ' + article.name
                  - else
                    %option{:value => "#{article.id}"}
                      = article.code + ' ' + article.name
        .row
          %section.col.col-6
            %label.label Regimen
            %label.input{for: "regime"}
              %select.form-control{:name =>"worker_contract[regime]", :style => 'width:100%;padding: 0;border: none;'}
                -if @action == 'edit'
                  %option{:value => "0"} Seleccione un estado
                  %option{:value => 'NORMAL', :selected => "#{@workercontract.regime}"=="NORMAL"} NORMAL
                  %option{:value => '2 x 30', :selected => "#{@workercontract.regime}"=="2 x 30"} 2 x 30
                  %option{:value => '4 x 60', :selected => "#{@workercontract.regime}"=="4 x 60"} 4 x 60
                  %option{:value => '5 x 60', :selected => "#{@workercontract.regime}"=="5 x 60"} 5 x 60
                  %option{:value => '4 x 120', :selected => "#{@workercontract.regime}"=="4 x 120"} 4 x 120
                  %option{:value => 'ESPECIAL', :selected => "#{@workercontract.regime}"=="ESPECIAL"} ESPECIAL
                -else
                  %option{:value => 'NORMAL'} NORMAL
                  %option{:value => '2 x 30'} 2 x 30
                  %option{:value => '4 x 60'} 4 x 60
                  %option{:value => '5 x 60'} 5 x 60
                  %option{:value => '4 x 120'} 4 x 120
                  %option{:value => 'ESPECIAL'} ESPECIAL

        -if Worker.find(@worker_id).typeofworker!="externo"
          -concepts=Array.new
          -if Worker.find(@worker_id).typeofworker=="empleado"
            -concepts = @concepts_empleado
          -if Worker.find(@worker_id).typeofworker=="obrero"
            -concepts=@concepts_obrero
          -if @action=='edit'
            -i=1
            -arr=Array.new
            %table#concepts-worker.table.table-striped.table-bordered.table-hover
              %thead
                %tr
                  %th{:colspan => 2, :style => "text-align:center;"} Conceptos
                  %th{:colspan => 2, :style => "text-align:center;"} Datos Contractuales
                %tr
                  %th Nombre
                  %th Monto
                  %th Nombre
                  %th Monto
              %tbody
                -if @workercontract.worker_contract_details.count>0
                  -@workercontract.worker_contract_details.each do |wor|
                    %tr
                      %td= Concept.find(wor.concept_id).name 
                      %td
                        -top=100000000000
                        -if !Concept.find(wor.concept_id).top.nil?
                          -top=Concept.find(wor.concept_id).top
                        = hidden_field_tag 'worker_contract[worker_contract_details_attributes][' + (wor.created_at.to_time.to_i + i).to_s + '][worker_id]',wor.worker_id
                        = hidden_field_tag 'worker_contract[worker_contract_details_attributes][' + (wor.created_at.to_time.to_i + i).to_s + '][worker_contract_id]',wor.worker_contract_id
                        = hidden_field_tag 'worker_contract[worker_contract_details_attributes][' + (wor.created_at.to_time.to_i + i).to_s + '][concept_id]',wor.concept_id
                        = text_field_tag 'worker_contract[worker_contract_details_attributes][' + (wor.created_at.to_time.to_i + i).to_s + '][amount]',wor.amount, onkeypress: "return isNumber(event);", onchange: "this.value = minmax(this.value, 0, "+top.to_s+")"
                        = hidden_field_tag 'worker_contract[worker_contract_details_attributes][' + (wor.created_at.to_time.to_i + i).to_s + '][id]',wor.id
                        -arr << wor.concept_id
                      -if i == 1
                        %td Sueldo Contractual
                        %td= @workercontract.salary
                      -elsif i == 2
                        %td Destaque Contractual
                        %td= @workercontract.destaque.to_f
                      -elsif i == 3
                        %td Viatico Contractual
                        %td= @workercontract.viatical.to_f
                      -else
                        %td
                        %td
                    -i+=1
                  -concepts.each do |con|
                    -cont=0
                    -arr.each do |arr|
                      -if con.id == arr
                        -cont=1
                    -if cont == 0
                      %tr
                        %td= con.name
                        %td
                          -top=10000000000000
                          -if !con.top.nil?
                            -top=con.top
                          = hidden_field_tag 'worker_contract[worker_contract_details_attributes]['+@reg_n.to_s+'][worker_id]',@worker_id
                          = hidden_field_tag 'worker_contract[worker_contract_details_attributes]['+@reg_n.to_s+'][worker_contract_id]',@workercontract.id.to_i+1
                          = hidden_field_tag 'worker_contract[worker_contract_details_attributes]['+@reg_n.to_s+'][concept_id]',con.id
                          = text_field_tag 'worker_contract[worker_contract_details_attributes]['+@reg_n.to_s+'][amount]','', onkeypress: "return isNumber(event);", onchange: "this.value = minmax(this.value, 0, "+top.to_s+")"

                        %td
                        %td
                  -@reg_n+=1
                -else
                  -j=0
                  -concepts.each do |con|
                    %tr
                      %td=con.name
                      %td
                        -top=10000000000000
                        -if !con.top.nil?
                          -top=con.top
                        = hidden_field_tag 'worker_contract[worker_contract_details_attributes]['+@reg_n.to_s+'][worker_id]',@worker_id
                        = hidden_field_tag 'worker_contract[worker_contract_details_attributes]['+@reg_n.to_s+'][worker_contract_id]',@workercontract.id.to_i+1
                        = hidden_field_tag 'worker_contract[worker_contract_details_attributes]['+@reg_n.to_s+'][concept_id]',con.id
                        = text_field_tag 'worker_contract[worker_contract_details_attributes]['+@reg_n.to_s+'][amount]','', onkeypress: "return isNumber(event);", onchange: "this.value = minmax(this.value, 0, "+top.to_s+")"
                      -if j == 1-1
                        %td Sueldo Contractual
                        %td= @workercontract.salary
                      -elsif j == 2-1
                        %td Destaque Contractual
                        %td= @workercontract.destaque.to_f
                      -elsif j == 3-1
                        %td Viatico Contractual
                        %td= @workercontract.viatical.to_f
                      -else
                        %td
                        %td
                      -j+=1                    
                    -@reg_n+=1
          -else
            %table#concepts-worker.table.table-striped.table-bordered.table-hover
              %thead
                %tr
                  %th{:colspan => 2} Concepto
                  %th{:colspan => 2} Datos Contractuales
                %tr
                  %th Nombre
                  %th Monto
                  %th Nombre
                  %th Monto
              %tbody
                -i=1
                -concepts.each do |con|
                  %tr        
                    %td= con.name
                    %td
                      -top=100000000000
                      -if !con.top.nil?
                        -top=con.top
                      = hidden_field_tag 'worker_contract[worker_contract_details_attributes]['+@reg_n.to_s+'][worker_id]',@worker_id
                      = hidden_field_tag 'worker_contract[worker_contract_details_attributes]['+@reg_n.to_s+'][worker_contract_id]',@workercontract.id.to_i+1
                      = hidden_field_tag 'worker_contract[worker_contract_details_attributes]['+@reg_n.to_s+'][concept_id]',con.id

                      = text_field_tag 'worker_contract[worker_contract_details_attributes]['+@reg_n.to_s+'][amount]','', onkeypress: "return isNumber(event);", onchange: "this.value = minmax(this.value, 0, "+top.to_s+")"
                    -if i == 1
                      %td Sueldo Contractual
                      %td= @workercontract.salary
                    -elsif i == 2
                      %td Destaque Contractual
                      %td= @workercontract.destaque.to_f
                    -elsif i == 3
                      %td Viatico Contractual
                      %td= @workercontract.viatical.to_f
                    -else
                      %td
                      %td
                  -i+=1                      
                  -@reg_n+=1
        %br                  
        .row
          %section.col.col-2
            %label.label Dia de Inicio
          %section.col.col-3
            %label.input{for: "start_date"}
              = f.input :start_date, as: :string, input_html: { class: 'form-control', :type => "date" }, label: false
          %section.col.col-2
            %label.label Dia de Fin
          %section.col.col-3
            %label.input{for: "end_date"}
              = f.input :end_date, as: :string, input_html: { class: 'form-control', :type => "date" }, label: false,  :onchange =>'calculatedays();'
        .row
          %section.col.col-md-12
            .col-md-2
              %label.label DuraciÃ³n
            .col-md-8
              %label.input{for: "days"}
                = f.input :days, input_html: { class: 'form-control' }, label: false
      %footer
        %button.btn.btn-primary{type: "submit"}
          %i.fa.fa-save 
          Guardar

:javascript
  $(document).ready(function () {

    $('select').select2();

    if($('form[id^="edit_"]').length > 0) {
      submit_validate($('form[id^="edit_"]'));
    }else{
      submit_validate($('#new_worker_contract'));
    }

  });
  
  function submit_validate(form){
    $(form['selector']).ajaxForm({
      beforeSubmit: function() {
        $(form['selector']).validate({
          // Rules for form validation
          rules : {
            'worker_contract[numberofcontract]' : {
              required : true
            },
            'worker_contract[camp]' : {
              required : true
            },
            'worker_contract[destaque]' : {
              required : true
            },
            'worker_contract[salary]' : {
              required : true
            },
            'worker_contract[regime]' : {
              required : true
            },
            'worker_contract[start_date]' : {
              required : true
            },
            'worker_contract[end_date]' : {
              required : true
            }
          },

          // Messages for form validation
          messages : {
            'worker_contract[numberofcontract]' : {
              required : 'Por favor, ingresar el numero de contrato.'
            },
            'worker_contract[camp]' : {
              required : 'Por favor, ingresar el monto por campamento.'
            },
            'worker_contract[destaque]' : {
              required : 'Por favor, ingresar el monto por destaque.'
            },
            'worker_contract[salary]' : {
              required : 'Por favor, ingresar el monto por salario.'
            },
            'worker_contract[regime]' : {
              required : 'Por favor, ingresar el monto por regimen.'
            },
            'worker_contract[start_date]' : {
              required : 'Por favor, ingresar la fecha de inicio.'
            },
            'worker_contract[end_date]' : {
              required : 'Por favor, ingresar la fecha de fin.'
            }
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
          }
        });
        // Remove all Help-inLine
        $(".help-inline").remove();
        // Client Valid
        return $(form['selector']).valid();
      },
      target: '#content',
      success: function (data){
        $(".help-inline").parent().addClass("state-error");
      },
      error: function(xhr, status, error) {
      }
    });
  }
  function calculatePrice(element){
    if ($(element).val()>10){
      alert("Ingrese datos correctos");
      //$(element).val('');
    }
  }

  function isNumber(evt) {
    evt = (evt) ? evt : window.event;
    var charCode = (evt.which) ? evt.which : evt.keyCode;
    if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode != 46) {
        return false;
    }
    return true;
  }

  function minmax(value, min, max){
    if(parseInt(value) < min || isNaN(value)) 
      return min; 
    else if(parseInt(value) > max) 
      return max; 
    else return value;
  }

  function delete_item(code){
    $("#tr" + code).remove();
  }

  $('#worker_contract_days').change(function(){
    var start_date = $('#worker_contract_start_date').val();
    var dias = $('#worker_contract_days').val();
    var dias2 = parseInt(dias)
    var d1 = start_date.split("-");
    var dat1 = new Date(d1[0], parseFloat(d1[1])-1, parseFloat(d1[2]));
    var end_date = new Date(dat1);
    end_date.setDate(dat1.getDate() + dias2 - 1);
    day = String(end_date.getDate());
    month = String(end_date.getMonth()+1);
    year = String(end_date.getFullYear());
    if(day.length<2){
      day = "0"+day;
    }
    if(month.length<2){
      month = "0"+month;
    }
    end_date2 = year+"-"+month+"-"+day;
    $('#worker_contract_end_date').val(end_date2);
  });

  $('#worker_contract_start_date').change(function(){
    var start_date = $('#worker_contract_start_date').val();
    var end_date = $('#worker_contract_end_date').val();
    var d1 = start_date.split("-");
    var dat1 = new Date(d1[0], parseFloat(d1[1])-1, parseFloat(d1[2]));
    var d2 = end_date.split("-");
    var dat2 = new Date(d2[0], parseFloat(d2[1])-1, parseFloat(d2[2]));
    var fin = dat2.getTime() - dat1.getTime();
    var dias = (Math.floor(fin / (1000 * 60 * 60 * 24))+1);
    $('#worker_contract_days').val(dias);
  });

  $('#worker_contract_end_date').change(function(){
    var start_date = $('#worker_contract_start_date').val();
    var end_date = $('#worker_contract_end_date').val();
    var d1 = start_date.split("-");
    var dat1 = new Date(d1[0], parseFloat(d1[1])-1, parseFloat(d1[2]));
    var d2 = end_date.split("-");
    var dat2 = new Date(d2[0], parseFloat(d2[1])-1, parseFloat(d2[2]));
    var fin = dat2.getTime() - dat1.getTime();
    var dias = (Math.floor(fin / (1000 * 60 * 60 * 24))+1);
    $('#worker_contract_days').val(dias);
  });