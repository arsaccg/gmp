- if !@treeOrders.nil?
  .col-md-12
    %h4= @cost_center_str
    %h1{:style => 'text-align:center;'}
      = "COSTO POR CONSUMO PERIODO: " + @month

  .col-md-4
    %p
      %strong TIPO DE REPORTE: GENERAL

  .col-md-4
    %p
      %strong FILTRO: TODOS

  .col-md-12
    %table.table.table-bordered.table-hover{:style => 'background-color: #fff;'}
      %tr
        %th
        %th{:colspan => "5", :style => 'text-align:center;'} 
          %strong ACTUAL
        %th{:colspan => "5", :style => 'text-align:center;'} 
          %strong ACUM. ACTUAL
        %th{:rowspan => "2", :style => 'text-align:center;'}
          %strong 
            COSTO AL
            %br>/
            TERMINO
        %th{:rowspan => "2", :style => 'text-align:center;'}
          %strong 
            COSTO AL
            %br>/
            TERMINO
            %br>/
            ANTERIOR
      %tr
        %td{:style => 'text-align:center;'}
          %strong DescripciÃ³n
        %td{:style => 'text-align:center;'}
          %strong PROGRAMADO
        %td{:style => 'text-align:center;'}
          %strong VALORIZADO
        %td{:style => 'text-align:center;'}
          %strong VALOR GANADO
        %td{:style => 'text-align:center;'}
          %strong COSTO REAL
        %td{:style => 'text-align:center;'}
          %strong META
        %td{:style => 'text-align:center;'}
          %strong PROGRAMADO
        %td{:style => 'text-align:center;'}
          %strong VALORIZADO
        %td{:style => 'text-align:center;'}
          %strong VALOR GANADO
        %td{:style => 'text-align:center;'}
          %strong COSTO REAL
        %td{:style => 'text-align:center;'}
          %strong META
      - @treeOrders.each do |tree_order|
        %td
          %strong= tree_order.name.upcase
        - tree_order.children.each do |first_node|
          %tr
            %td
              %span{:style => 'visibility:hidden'}
                = '-'*2
              - if first_node.content.is_a? String
                = first_node.content
              - else
                = first_node.content.name.to_s
            - if !first_node.content.is_a?(String)
              %td
                = first_node.content.programado.to_f.round(2)
              %td
                = first_node.content.valorizado.to_f.round(2)
              %td
                = first_node.content.valorGanado.to_f.round(2)
              %td
                = first_node.content.real.to_f.round(2)
              %td
                = first_node.content.meta.to_f.round(2)
              - accum = ConsumptionCost.get_the_acumulated(first_node.content.name.to_s[1..10],@for_acumulated_end_date,@cost_center_id,@type_amount)
              %td
                = accum[0].to_f.round(4).round(2) + first_node.content.programado.to_f.round(2)
              %td
                = accum[1].to_f.round(4).round(2) + first_node.content.valorizado.to_f.round(2)
              %td
                = accum[2].to_f.round(4).round(2) + first_node.content.valorGanado.to_f.round(2)
              %td
                = accum[3].to_f.round(4).round(2) + first_node.content.real.to_f.round(2)
              %td
                = accum[4].to_f.round(4).round(2) + first_node.content.meta.to_f.round(2)
              %td
                = accum[0].to_f.round(4).round(2) + first_node.content.programado.to_f.round(2) + accum[1].to_f.round(4).round(2) + first_node.content.valorizado.to_f.round(2) + accum[2].to_f.round(4).round(2) + first_node.content.valorGanado.to_f.round(2) + accum[3].to_f.round(4).round(2) + first_node.content.real.to_f.round(2) + accum[4].to_f.round(4).round(2) + first_node.content.meta.to_f.round(2)
              %td
                = accum[0].to_f.round(4).round(2) + accum[1].to_f.round(4).round(2) + accum[2].to_f.round(4).round(2) + accum[3].to_f.round(4).round(2) + accum[4].to_f.round(4).round(2)                
          - if first_node.children.count > 0
            - first_node.children.each do |second_node|
              %tr
                %td
                  %span{:style => 'visibility:hidden'}
                    = '-'*5
                  - if second_node.content.is_a? String
                    = second_node.content
                  - else
                    = second_node.content.name.to_s
                - if !second_node.content.is_a?(String)
                  %td
                    = second_node.content.programado.to_f.round(2)
                  %td
                    = second_node.content.valorizado.to_f.round(2)
                  %td
                    = second_node.content.valorGanado.to_f.round(2)
                  %td
                    = second_node.content.real.to_f.round(2)
                  %td
                    = second_node.content.meta.to_f.round(2)
                  - accum = ConsumptionCost.get_the_acumulated(second_node.content.name.to_s[1..10],@for_acumulated_end_date,@cost_center_id,@type_amount)
                  %td
                    = accum[0].to_f.round(4).round(2) + second_node.content.programado.to_f.round(2)
                  %td
                    = accum[1].to_f.round(4).round(2) + second_node.content.valorizado.to_f.round(2)
                  %td
                    = accum[2].to_f.round(4).round(2) + second_node.content.valorGanado.to_f.round(2)
                  %td
                    = accum[3].to_f.round(4).round(2) + second_node.content.real.to_f.round(2)
                  %td
                    = accum[4].to_f.round(4).round(2) + second_node.content.meta.to_f.round(2)
                  %td
                    = accum[0].to_f.round(4).round(2) + second_node.content.programado.to_f.round(2) + accum[1].to_f.round(4).round(2) + second_node.content.valorizado.to_f.round(2) + accum[2].to_f.round(4).round(2) + second_node.content.valorGanado.to_f.round(2) + accum[3].to_f.round(4).round(2) + second_node.content.real.to_f.round(2) + accum[4].to_f.round(4).round(2) + second_node.content.meta.to_f.round(2)
                  %td
                    = accum[0].to_f.round(4).round(2) + accum[1].to_f.round(4).round(2) + accum[2].to_f.round(4).round(2) + accum[3].to_f.round(4).round(2) + accum[4].to_f.round(4).round(2)                    
              - if second_node.children.count > 0
                - second_node.children.each do |third_node|
                  %tr
                    %td
                      %span{:style => 'visibility:hidden'}
                        = '-'*7
                      - if third_node.content.is_a? String
                        = third_node.content
                      - else
                        = third_node.content.name.to_s
                    - if !third_node.content.is_a?(String)
                      %td
                        = third_node.content.programado.to_f.round(2)
                      %td
                        = third_node.content.valorizado.to_f.round(2)
                      %td
                        = third_node.content.valorGanado.to_f.round(2)
                      %td
                        = third_node.content.real.to_f.round(2)
                      %td
                        = third_node.content.meta.to_f.round(2)
                      - accum = ConsumptionCost.get_the_acumulated(third_node.content.name.to_s[1..10],@for_acumulated_end_date,@cost_center_id,@type_amount)
                      %td
                        = accum[0].to_f.round(4).round(2) + third_node.content.programado.to_f.round(2)
                      %td
                        = accum[1].to_f.round(4).round(2) + third_node.content.valorizado.to_f.round(2)
                      %td
                        = accum[2].to_f.round(4).round(2) + third_node.content.valorGanado.to_f.round(2)
                      %td
                        = accum[3].to_f.round(4).round(2) + third_node.content.real.to_f.round(2)
                      %td
                        = accum[4].to_f.round(4).round(2)  + third_node.content.meta.to_f.round(2)
                      %td
                        = accum[0].to_f.round(4).round(2) + third_node.content.programado.to_f.round(2) + accum[1].to_f.round(4).round(2) + third_node.content.valorizado.to_f.round(2) + accum[2].to_f.round(4).round(2) + third_node.content.valorGanado.to_f.round(2) + accum[3].to_f.round(4).round(2) + third_node.content.real.to_f.round(2) + accum[4].to_f.round(4).round(2) + third_node.content.meta.to_f.round(2)
                      %td
                        = accum[0].to_f.round(4).round(2) + accum[1].to_f.round(4).round(2) + accum[2].to_f.round(4).round(2) + accum[3].to_f.round(4).round(2) + accum[4].to_f.round(4).round(2)                        
                  - if third_node.children.count > 0
                    - third_node.children.each do |fourth_node|
                      %tr
                        %td
                          %span{:style => 'visibility:hidden'}
                            = '-'*9
                          - if fourth_node.content.is_a?(String)
                            = fourth_node.content
                          - else
                            = fourth_node.content.name.to_s
                        - if !fourth_node.content.is_a?(String)
                          %td
                            = fourth_node.content.programado.to_f.round(2)
                          %td
                            = fourth_node.content.valorizado.to_f.round(2)
                          %td
                            = fourth_node.content.valorGanado.to_f.round(2)
                          %td
                            = fourth_node.content.real.to_f.round(2)
                          %td
                            = fourth_node.content.meta.to_f.round(2)
                          - accum = ConsumptionCost.get_the_acumulated(fourth_node.content.name.to_s[1..10],@for_acumulated_end_date,@cost_center_id,@type_amount)
                          %td
                            = accum[0].to_f.round(4).round(2) + fourth_node.content.programado.to_f.round(2)
                          %td
                            = accum[1].to_f.round(4).round(2) + fourth_node.content.valorizado.to_f.round(2)
                          %td
                            = accum[2].to_f.round(4).round(2) + fourth_node.content.valorGanado.to_f.round(2)
                          %td
                            = accum[3].to_f.round(4).round(2) + fourth_node.content.real.to_f.round(2)
                          %td
                            = accum[4].to_f.round(4).round(2) + fourth_node.content.meta.to_f.round(2)
                          %td
                            = accum[0].to_f.round(4).round(2) + fourth_node.content.programado.to_f.round(2) + accum[1].to_f.round(4).round(2) + fourth_node.content.valorizado.to_f.round(2) + accum[2].to_f.round(4).round(2) + fourth_node.content.valorGanado.to_f.round(2) + accum[3].to_f.round(4).round(2) + fourth_node.content.real.to_f.round(2) + accum[4].to_f.round(4).round(2) + fourth_node.content.meta.to_f.round(2)
                          %td
                            = accum[0].to_f.round(4).round(2) + accum[1].to_f.round(4).round(2) + accum[2].to_f.round(4).round(2) + accum[3].to_f.round(4).round(2) + accum[4].to_f.round(4).round(2)                            
                      - if fourth_node.children.count > 0
                        - fourth_node.children.each do |five_node|
                          %tr
                            %td
                              %span{:style => 'visibility:hidden'}
                                = '-'*11
                              - if five_node.content.is_a? String
                                = five_node.content
                              - else
                                = five_node.content.name.to_s
                            - if !five_node.content.is_a?(String)
                              %td
                                = five_node.content.programado.to_f.round(2)
                              %td
                                = five_node.content.valorizado.to_f.round(2)
                              %td
                                = five_node.content.valorGanado.to_f.round(2)
                              %td
                                = five_node.content.real.to_f.round(2)
                              %td
                                = five_node.content.meta.to_f.round(2)
                              - accum = ConsumptionCost.get_the_acumulated(five_node.content.name.to_s[1..10],@for_acumulated_end_date,@cost_center_id,@type_amount)
                              %td
                                = accum[0].to_f.round(4).round(2) + five_node.content.programado.to_f.round(2)
                              %td
                                = accum[1].to_f.round(4).round(2) + five_node.content.valorizado.to_f.round(2)
                              %td
                                = accum[2].to_f.round(4).round(2) + five_node.content.valorGanado.to_f.round(2)
                              %td
                                = accum[3].to_f.round(4).round(2) + five_node.content.real.to_f.round(2)
                              %td
                                = accum[4].to_f.round(4).round(2) + five_node.content.meta.to_f.round(2)
                              %td
                                = accum[0].to_f.round(4).round(2) + five_node.content.programado.to_f.round(2) + accum[1].to_f.round(4).round(2) + five_node.content.valorizado.to_f.round(2) + accum[2].to_f.round(4).round(2) + five_node.content.valorGanado.to_f.round(2) + accum[3].to_f.round(4).round(2) + five_node.content.real.to_f.round(2) + accum[4].to_f.round(4).round(2) + five_node.content.meta.to_f.round(2)
                              %td
                                = accum[0].to_f.round(4).round(2) + accum[1].to_f.round(4).round(2) + accum[2].to_f.round(4).round(2) + accum[3].to_f.round(4).round(2) + accum[4].to_f.round(4).round(2)                                
                          - if five_node.children.count > 0
                            - five_node.children.each do |six_node|
                              %tr
                                %td
                                  %span{:style => 'visibility:hidden'}
                                    = '-'*13
                                  = six_node.content.name.to_s
                                %td
                                  = six_node.content.programado.to_f.round(2)
                                %td
                                  = six_node.content.valorizado.to_f.round(2)
                                %td
                                  = six_node.content.valorGanado.to_f.round(2)
                                %td
                                  = six_node.content.real.to_f.round(2)
                                %td
                                  = six_node.content.meta.to_f.round(2)
                                - accum = ConsumptionCost.get_the_acumulated(six_node.content.name.to_s[1..10],@for_acumulated_end_date,@cost_center_id,@type_amount)
                                %td
                                  = accum[0].to_f.round(4).round(2) + six_node.content.programado.to_f.round(2)
                                %td
                                  = accum[1].to_f.round(4).round(2) + six_node.content.valorizado.to_f.round(2)
                                %td
                                  = accum[2].to_f.round(4).round(2) + six_node.content.valorGanado.to_f.round(2)
                                %td
                                  = accum[3].to_f.round(4).round(2) + six_node.content.real.to_f.round(2)
                                %td
                                  = accum[4].to_f.round(4).round(2)   + six_node.content.meta.to_f.round(2)
                                %td
                                  = accum[0].to_f.round(4).round(2) + six_node.content.programado.to_f.round(2) + accum[1].to_f.round(4).round(2) + six_node.content.valorizado.to_f.round(2) + accum[2].to_f.round(4).round(2) + six_node.content.valorGanado.to_f.round(2) + accum[3].to_f.round(4).round(2) + six_node.content.real.to_f.round(2) + accum[4].to_f.round(4).round(2) + six_node.content.meta.to_f.round(2)
                                %td
                                  = accum[0].to_f.round(4).round(2) + accum[1].to_f.round(4).round(2) + accum[2].to_f.round(4).round(2) + accum[3].to_f.round(4).round(2) + accum[4].to_f.round(4).round(2)
- else

  .col-xs-12.col-sm-12.col-md-12.col-lg-12
    .alert.alert-danger.fade.in
      %button.close{"data-dismiss" => "alert"}
        Ã
      %i.fa-fw.fa.fa-check
      %strong Oops! Aviso!
      No estan completos los datos para hacer la consulta o el resultado es vacio en la fecha seleccionada.