- @arrItems.each do |x|
  -rest=Article.getSpecificArticlesforStockOutputs4(@warehouse_id,x[0].to_i)
  -if rest.count>0
    -rest=Article.getSpecificArticlesforStockOutputs4(@warehouse_id,x[0].to_i).first.at(0).to_i
  -else
    -rest=0
  %tr{id: "tr" + @reg_n.to_s}
    %td(style="display:none" class="pod-di")
      = hidden_field_tag 'stock_input[stock_input_details_attributes][' + @reg_n.to_s + '][article_id]', x[0].to_i
    %td
      = x[1]
    %td
      = Article.find_by_code(x[1].to_s).name
    %td
      = x[5]
    %td
      %div
        %select.form-control{:name =>"stock_input[stock_input_details_attributes][#{@reg_n.to_s}][sector_id]", :required => true, title:'No puede dejar este campo vacio'}
          %option{:selected => true, :disabled => true} Seleccionar Sector
          - @sectors.each do |sector|
            %optgroup{:label => "#{sector.name}"}
              - Sector.getSubSectors(sector.code).each do |subsector|
                %option{:value => "#{subsector.id}"}
                  = subsector.name
    %td
      %div
        %select.form-control{:name =>"stock_input[stock_input_details_attributes][#{@reg_n.to_s}][phase_id]", :required => true, title:'No puede dejar este campo vacio'}
          %option{:selected => true, :disabled => true} Seleccionar Fase
          - @phases.each do |phase|
            %option{:value => "#{phase.id}"}
              = phase.name
    %td.max-total
      = x[6] - rest
    %td.amount
      = text_field_tag 'stock_input[stock_input_details_attributes][' + @reg_n.to_s + '][amount]', nil, class: "form-control amount-item", onkeypress: "return isNumber(event);", onchange: "this.value = minmax(this.value, 1, #{x[6] - rest})", :required => true, title:'No puede dejar este campo vacio'
  - @reg_n += 1