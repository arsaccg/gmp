#wid-id-0.jarviswidget{"data-widget-colorbutton" => "false", "data-widget-editbutton" => "false"}
  %header
    %span.widget-icon
      %i.fa.fa-pencil-square-o.fa-fw 
    %h2
      %strong="Orden de Suministro N° "+ @numbercode.to_s
  %div{:style => "padding-top: 0"}
    .jarviswidget-editbox
    .widget-body 
      = simple_form_for([:logistics, @deliveryOrder], html: {class: 'smart-form', autocomplete: 'off' }) do |f|
        = hidden_field_tag "delivery_order[code]", @numbercode
        
        %fieldset{ :style => 'padding-bottom: 25px;' }
          - if @deliveryOrder.id != nil
            %section.col.col-2
              %label.label{for: "id"} Código
              %label.input
                - f.fields_for :delivery_order_details do |del|
                  = del.hidden_field :lock_version
                = f.hidden_field :lock_version
                = f.input :id, placeholder: "Código", :input_html => {:class => 'form-control', :value => @deliveryOrder.id.to_s.rjust(5, '0')}, label: false, readonly: true
          - if @action == 'edit'
            = hidden_field_tag "delivery_order[cost_center_id]", @costcenter_id
            %section.col.col-2
              %label.label{for: "state"} Estado
              %label.input
                = f.input :state, placeholder: "Nombre de la Orden", :input_html => {:class => 'form-control', :value => translate_delivery_order_state(@deliveryOrder.state)}, label: false, readonly: true
            %section.col.col-4
              %label.label{for: "date_of_issue"} Fecha de Requerimiento
              %label.input
                = f.input :date_of_issue, placeholder: "Fecha de emisión", as: :string ,:input_html => {:class => 'form-control', type: "date"}, label: false
            %section.col.col-4
              %label.label{for: "scheduled"} Fecha Programada
              %label.input
                = f.input :scheduled, placeholder: "Fecha Programada", as: :string, :input_html => {:class => 'form-control', type: "date"}, label: false
            %section.col.col-4
              %label.label{for: "liable"} Responsable
              %label.input
                = text_field(:deliveryOrder, :liable, class: "form-control", value: "#{current_user.first_name} #{current_user.last_name}", readonly: true)
            %section.col.col-8
              %label.label{for: "description"} Glosa
              %label.textarea
                = f.input :description, placeholder: "Glosa", :input_html => {:class => 'form-control'}, label: false
          - else
            = hidden_field_tag "delivery_order[cost_center_id]", @cost_center.id
            %section.col.col-4
              %label.label{for: "state"} Estado
              %label.input
                = f.input :state, placeholder: "Nombre de la Orden", :input_html => {:class => 'form-control', :value => translate_delivery_order_state(@deliveryOrder.state)}, label: false, readonly: true
            %section.col.col-4
              %label.label{for: "date_of_issue"} Fecha de Requerimiento
              %label.input
                = f.input :date_of_issue, placeholder: "Fecha de emisión", as: :string ,:input_html => {:class => 'form-control', type: "date", value: Time.now.to_date}, label: false, readonly: true
            %section.col.col-4
              %label.label{for: "scheduled"} Fecha Programada
              %label.input
                = f.input :scheduled, placeholder: "Fecha Programada", as: :string, :input_html => {:class => 'form-control', type: "date"}, label: false
            %section.col.col-4
              %label.label{for: "liable"} Responsable
              %label.input
                = text_field(:deliveryOrder, :liable, class: "form-control", value: "#{current_user.first_name} #{current_user.last_name}", readonly: true)
            %section.col.col-8
              %label.label{for: "description"} Glosa
              %label.textarea
                = f.input :description, placeholder: "Glosa", :input_html => {:class => 'form-control'}, label: false
          
          = hidden_field_tag "company_id"

        %fieldset{ :style => 'padding-bottom: 25px;' }
          %legend Detalle de Orden de Suministro
          %section.col.col-md-12
            %label.col.col-md-2.control-label{ :for => "article_id" } Insumos
            .col.col-md-6
              %input#article-select.select2.bigdrop.select2-offscreen.form-control{'name' => 'entity_id', 'type' => 'hidden', 'style' => 'width:100%;padding: 0;border: none;'}

            .col.col-md-1
              = text_field_tag 'amount', nil, class: 'form-control', id: 'article-amount', value: '1'
            .col.col-md-2 
              %div.col.col-md-3
                %a.btn.btn-success#btn-add-article{ :href => "javascript:add_article_item();", :role => "button", :style => 'padding: 6px;' }
                  Agregar Insumo
          .form-group
            .col.col-md-3
            .col.col-md-12
              %table.has-tickbox(class="table table-condensed table-bordered table-striped table-hover dataTable" style="font-size: 12px;" id="summary-articles" aria-describedby="data-table_info")
                %thead
                  %tr
                    %th Codigo
                    %th Insumo
                    %th Unidad
                    %th Cantidad
                    %th.col-md-1 Sector
                    %th.col-md-1 Fases/Subfases
                    %th.col-md-1 Centro de Atención
                    %th.col-md-1 Fecha Programada
                    %th Glosa
                    %th Eliminar
                %tbody(id="article_items_table")
                  - if @action != nil && @action == 'edit'
                    - i = 1
                    - @deliveryOrder.delivery_order_details.each do |dod|
                      %tr(class="order_delivery_item"){id: "tr" + dod.id.to_s}
                        %td.article-id(style="display:none")
                          = hidden_field_tag 'delivery_order[delivery_order_details_attributes][' + (dod.created_at.to_time.to_i + i).to_s + '][article_id]', dod.article_id.to_i
                        %td.measurement-id(style="display:none")
                          = hidden_field_tag 'delivery_order[delivery_order_details_attributes][' + (dod.created_at.to_time.to_i + i).to_s + '][unit_of_measurement_id]', dod.unit_of_measurement_id.to_i
                        %td
                          = dod.article.code
                        %td
                          = dod.article.name
                        %td
                          = dod.unit_of_measurement.symbol
                        %td.col-md-1
                          .col-md-9
                            = text_field_tag 'delivery_order[delivery_order_details_attributes][' + (dod.created_at.to_time.to_i + i).to_s + '][amount]', dod.amount.to_f , class: "form-control quantity", id: 'article-amount'
                        %td.precio
                          %select.form-control{:name =>"delivery_order[delivery_order_details_attributes][#{(dod.created_at.to_time.to_i + i).to_s}][sector_id]"}
                            - @sectors.each do |sect|
                              - if sect.id == dod.sector.id
                                %option{:value => "#{sect.id}", :selected => true}
                                  = sect.name
                              - else
                                %option{:value => "#{sect.id}"}
                                  = sect.name
                        %td
                          %select.form-control{:name =>"delivery_order[delivery_order_details_attributes][#{(dod.created_at.to_time.to_i + i).to_s}][phase_id]"}
                            - @phases.each do |phas|
                              - if phas.id == dod.phase_id
                                %option{:value => "#{phas.id}", :selected => true}
                                  = phas.name
                              - else
                                %option{:value => "#{phas.id}"}
                                  = phas.name
                        %td(class="order_delivery_centro_atencion")
                          %select.form-control{:name =>"delivery_order[delivery_order_details_attributes][#{(dod.created_at.to_time.to_i + i).to_s}][center_of_attention_id]"}
                            - @centerOfAttentions.each do |centerOfAttention|
                              - if centerOfAttention.id == dod.center_of_attention.id
                                %option{:value => "#{centerOfAttention.id}", :selected => true}
                                  = centerOfAttention.name
                              - else
                                %option{:value => "#{centerOfAttention.id}"}
                                  = centerOfAttention.name
                        %td.order_delivery_fecha_programada
                          %input.scheduled-date{:type => "date", :name => "delivery_order[delivery_order_details_attributes][#{(dod.created_at.to_time.to_i + i).to_s}][scheduled_date]", :value => dod.scheduled_date}
                        //%td(class="order_delivery_equipos")
                        %td
                          = text_area_tag 'delivery_order[delivery_order_details_attributes][' + (dod.created_at.to_time.to_i + i).to_s + '][description]', dod.description, class: "form-control description"
                        %td(style="display:none")
                          = hidden_field_tag 'delivery_order[delivery_order_details_attributes][' + (dod.created_at.to_time.to_i + i).to_s + '][id]', dod.id
                        %td(style="display:none")
                          = hidden_field_tag 'delivery_order[delivery_order_details_attributes][' + (dod.created_at.to_time.to_i + i).to_s + '][delivery_order_id]', @deliveryOrder.id
                        %td.delete-item
                          %label.checkbox
                            = check_box 'delivery_order', '[delivery_order_details_attributes][' + (dod.created_at.to_time.to_i + i).to_s + '][_destroy]'
                            %i
                      - i += 1
        %footer
          %button.btn.btn-primary{type: "submit", :onclick => "part_block();"}
            %i.fa.fa-save
              Guardar

:javascript
  
  $(document).ready(function(){
    $("#company_id").val("#{@company}");
    
    $('#article-select').select2({
      placeholder: "Buscar Insumos...",
      minimumInputLength: 3,
      ajax: {
        url: "#{display_articles_logistics_delivery_orders_path}",
        dataType: 'json',
        type: 'POST',
        quietMillis: 100,
        data: function(term, page){
          return {
            q: term,
            page: page,
            authenticity_token: "#{form_authenticity_token}"
          };
        },
        results: function(data, page){
          return {results: data.articles};
        }
      },
      formatResult: function(node){ return '<div>' + node.code + ' - ' + node.name + ' - ' + node.symbol + '</div>' },
      formatSelection: function(node){ return (node.code + ' - ' + node.name + ' - ' + node.symbol) },
      escapeMarkup: function (m) { return m; }
    });

    $('#new_delivery_order').ajaxForm({
      beforeSubmit: function() {
        $('#new_delivery_order').validate({
          // Rules for form validation
          rules : {
            'delivery_order[state]' : {
              required : true
            },
            'deliveryOrder[liable]' : {
              required : true,
            },
            'delivery_order[description]' : {
              required : true,
            },
            'delivery_order[date_of_issue]' : {
              required : true
            },
            'delivery_order[scheduled]' : {
              required : true,
              greaterThan: "#delivery_order_date_of_issue"
            }
          },

          // Messages for form validation
          messages : {
            'delivery_order[state]' : {
              required : 'El estado de la Orden es requerido.'
            },
            'deliveryOrder[liable]' : {
              required : 'El nombre del responsable es requerido. Por favor, verifique si usted a actualizado su perfil.',
            },
            'delivery_order[date_of_issue]' : {
              required : 'La fecha de emisión es requerida.'
            },
            'delivery_order[scheduled]' : {
              required : 'La fecha programada es requerida.',
              greaterThan: 'Debe ser mayor que la fecha de emisión.'
            },
            'delivery_order[description]' : {
              required : 'La descripción es requerida.'
            }
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
            $('#modalLoadingLabelading').modal('hide');
            $('.modal-backdrop.fade.in').remove();
          }
        });

        return $('#new_delivery_order').valid();
      },
      target: '#content',
      success: function (data){
        $(".help-inline").parent().addClass("state-error");
        $('#modalLoadingLabelading').modal('hide');
        $('.modal-backdrop.fade.in').remove();
      }
    });

    $('form[id^="edit_"]').ajaxForm({
      beforeSubmit: function() {
        $('form[id^="edit_"]').validate({
          // Rules for form validation
          rules : {
            'delivery_order[state]' : {
              required : true
            },
            'delivery_order[description]' : {
              required : true,
            },
            'deliveryOrder[liable]' : {
              required : true
            },
            'delivery_order[date_of_issue]' : {
              required : true
            },
            'delivery_order[scheduled]' : {
              required : true
            }
          },

          // Messages for form validation
          messages : {
            'delivery_order[state]' : {
              required : 'El estado de la Orden es requerido.'
            },
            'deliveryOrder[liable]' : {
              required : 'El nombre del responsable es requerido. Por favor, verifique si usted a actualizado su perfil.',
            },
            'delivery_order[date_of_issue]' : {
              required : 'La fecha de emisión es requerida.'
            },
            'delivery_order[scheduled]' : {
              required : 'La fecha programada es requerida.'
            },
            'delivery_order[description]' : {
              required : 'La descripción es requerida.'
            }
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
            $('#modalLoadingLabelading').modal('hide');
            $('.modal-backdrop.fade.in').remove();
          }
        });
        // Remove all Help-inLine
        $(".help-inline").remove();
        $('#modalLoadingLabelading').modal('hide');
        $('.modal-backdrop.fade.in').remove();
        // Client Valid
        if( $(form['selector']).valid() ){
          $('#modalLoadingLabelading').modal();
        }
        // Client Valid
        return $(form['selector']).valid();
      },
      target: '#content',
      success: function (data){
        $(".help-inline").parent().addClass("state-error");
        $('#modalLoadingLabelading').modal('hide');
        $('.modal-backdrop.fade.in').remove();
      },
      error: function(xhr, status, error) {
        $('#modalLoadingLabelading').modal('hide');
        $('.modal-backdrop.fade.in').remove();
      }
    });
  });

  function add_article_item(){

    var article_id = $("#article-select").val();
    str_item = {authenticity_token: "#{form_authenticity_token}", article_id: $("#article-select").val(), amount: $("#article-amount").val()};

    append_url_ajax('#{add_delivery_order_item_field_logistics_delivery_orders_path}', 'article_items_table', str_item, 0, 'POST');
  }

  function delete_item(code){
    $("#tr" + code).remove();
  }