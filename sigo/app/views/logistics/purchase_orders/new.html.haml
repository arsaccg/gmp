#content-inside
  %section#widget-grid
    .row
      %article.col-sm-12.col-md-12.col-lg-12
        #wid-id-2.jarviswidget{"data-widget-colorbutton" => "false", "data-widget-deletebutton" => "false", "data-widget-editbutton" => "false", "data-widget-collapsed" => "false", "data-widget-fullscreenbutton" => "false"}
          %header
            %span.widget-icon
              %i.fa.fa-pencil-square-o.fa-fw 
            %h2
              %strong Generar Órdenes de Compra - Paso a Paso
          %div
            .jarviswidget-editbox

            .widget-body.fuelux
              .wizard
                %ul.steps
                  %li{"data-target" => "#step2"}
                    %span.badge> 1
                    Seleccionar los Items de Ordenes de Suministro
                    %span.chevron
                  %li{"data-target" => "#step3"}
                    %span.badge> 2
                    Llenar información de la Órden de Compra
                    %span.chevron
                  %li{"data-target" => "#step4"}
                    %span.badge> 3
                    Guardar Información
                    %span.chevron
                .actions
                  %button.btn.btn-sm.btn-primary.btn-prev{type: "button"}
                    %i.fa.fa-arrow-left>
                    Anterior
                  %button.btn.btn-sm.btn-success.btn-next{"data-last" => "Finalizar", type: "button"}
                    Siguiente
                    %i.fa.fa-arrow-right
              .step-content
                = render :partial => 'form_new_order'

%button.btn.btn-sm.btn-primary.btn-prev#backlist-purchase-order{type: "button"}
  %i.fa.fa-arrow-left>
  Retornar al listado de Ordenes de Compra

#modalDeliveryItems.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "modalDeliveryItemsLabel", role: "dialog", tabindex: "-1"}
  .modal-dialog
    .modal-content
      .modal-body#modalDeliveryItemsContent

:javascript
  // DO NOT REMOVE : GLOBAL FUNCTIONS!
  pageSetUp();

  $(document).ready(function(){
    get_exchange_rate();
    $('#btn-add-more-items-do').click(function(){
      var ids_delivery_order = new Array();

      $('#summary-delivery-orders tbody tr td.pod-di input').each(function(index, element){
        ids_delivery_order[index] = $(this).val();
      });

      data = { cost_center_id: $.cost_center, authenticity_token: "#{form_authenticity_token}", ids_delivery_order: ids_delivery_order };
      load_items_delivery_order_ajax('#{more_items_from_delivery_orders_logistics_purchase_orders_path}', 'modalDeliveryItemsContent', data);
      $('#modalDeliveryItems').modal('toggle', {
        keyboard: false,
        backdrop: 'static'
      });
    });

    $('#category-select').change(function(){
      get_exchange_rate();
    });

    $('#backlist-purchase-order').click(function(){
      load_url_ajax("#{logistics_purchase_orders_path}", 'content', {company_id: "#{@company}"}, null, 'GET');
    });

    $('#btn-info-cost').click(function() {
      var total_unit_price = 0;
      $('#order_delivery_items_table tr td.price-without-igv input').each(function(k,v){
        total_unit_price = total_unit_price + parseFloat($(this).val());
      });

      var total_unit_price_with_igv = 0;
      $('#order_delivery_items_table tr td.price-with-igv input').each(function(k,v){
        total_unit_price_with_igv = total_unit_price_with_igv + parseFloat($(this).val());
      });

      $.smallBox({
        title : "Información de la Orden de Compra",
        content : "El Sub Total es de: " + total_unit_price + ' ' + "El Total es de: " + total_unit_price_with_igv, 
        color : "#5384AF",
        //timeout: 8000,
        icon : "fa fa-bell"
      });
    });

  });

  function delete_item(code){
    id_modal = $("#tr-" + code + " td.aditional-operations a").attr('data-target');
    $("#tr-" + code).remove();
    $(id_modal).remove();
  }

  function get_exchange_rate(){
    var date = $('#purchase_order_date_of_issue').val();
    var money_id = $('#category-select').val();
    $.ajax({
      type: 'POST',
      url: "#{get_exchange_rate_per_date_logistics_purchase_orders_path}",
      data: {
        date: date,
        money_id: money_id,
        authenticity_token: "#{form_authenticity_token}"
      },
      dataType : 'json',
      async: false,
      success: function(data) {
        if(data){
          $('#purchase_order_exchange_of_rate').val(data);
        }else{
          $('#purchase_order_exchange_of_rate').val(0);
        }
      }
    });
  }

  // PAGE RELATED SCRIPTS
  function calculatePriceWithourIgv(element){
    var amount = parseInt($(element).parent().siblings('.amount').find('input').val());

    var price_without_igv = parseFloat($(element).val() * amount).toFixed(2);

    $(element).parent().siblings('.price-without-igv').find('input').val(price_without_igv);
    $(element).parent().siblings('.price-with-igv').find('input').val(price_without_igv);
  }

  function calculatePrice(element){
    var amount = parseInt($(element).val());

    var price_without_igv = parseFloat($(element).parent().siblings('.unit-price').find('input').val() * amount).toFixed(2);

    $(element).parent().siblings('.price-without-igv').find('input').val(price_without_igv);
    $(element).parent().siblings('.price-with-igv').find('input').val(price_without_igv);
  }

  function isNumber(evt) {
    evt = (evt) ? evt : window.event;
    var charCode = (evt.which) ? evt.which : evt.keyCode;
    if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode != 46) {
        return false;
    }
    return true;
  }

  function minmax(value, min, max){
    if(parseInt(value) < min || isNaN(value)) 
      return min; 
    else if(parseInt(value) > max) 
      return max; 
    else return value;
  }

  function add_more_items(){
    var data_delivery_order = new Array();
    status = false;
    var index = 0;
    $('#modal-more-items tbody tr td .checkbox .order_check').each(function(){
      if( $(this).is(':checked') ){
        status = true
        data_delivery_order[index] = $(this).val();
        index++;
      }
    });

    if(status){
      data = { ids_delivery_order: data_delivery_order, authenticity_token: "#{form_authenticity_token}" };
      append_url_ajax('#{add_items_from_delivery_orders_logistics_purchase_orders_path}', 'order_delivery_items_table', data, '', 'POST');
      append_url_ajax('#{add_modal_extra_operations_logistics_purchase_orders_path}', 'new_purchase_order', data, 0, 'POST');
    }

    $('#modalDeliveryItems').modal('hide');
  };

  /* Comentando una función que puede servir en un futuro...
  function calculatePriceFromIgv(element){
    var price_with_igv = parseFloat($(element).val()).toFixed(2);
    var amount = parseInt($(element).parent().siblings('.amount').find('input').val());
    var price_without_igv = parseFloat(price_with_igv / ((parseFloat("#{@igv}"))*amount)).toFixed(2);

    $(element).parent().siblings('.unit-price').find('input').val(price_without_igv);

    var price_with_amount_unit = parseFloat(amount * price_without_igv).toFixed(2);

    $(element).parent().siblings('.price-without-igv').find('input').val(price_with_amount_unit);
  }
  */

  function enableFieldsForIgv(element){
    if($(element).is(":checked")){
      var price_without_igv = $(element).parent().parent().siblings('.price-without-igv').find('input').val();
      console.log(price_without_igv);
      console.log($(element).parent().parent().siblings('.price-with-igv').find('input'));
      $(element).parent().parent().siblings('.price-with-igv').find('input').val(parseFloat(price_without_igv*(parseFloat("#{@igv}"))).toFixed(2));
    } else {
      var price_without_igv = $(element).parent().parent().siblings('.price-without-igv').find('input').val();
      $(element).parent().parent().siblings('.price-with-igv').find('input').val(price_without_igv);
    }
  }

  loadScript("#{ asset_path 'plugin/bootstrap-wizard/jquery.bootstrap.wizard.min.js', type: :javascript }", runBootstrapWizard);
  
  //Bootstrap Wizard Validations

  function runBootstrapWizard() {

    var $validator = $("#new_purchase_order").validate({

      rules: {
        'purchase_order[supplier_id]': {
          required: true
        },
        'purchase_order[money_id]': {
          required: true
        },
        'purchase_order[method_of_payment_id]': {
          required: true
        },
        'purchase_order[date_of_issue]': {
          required: true
        },
        'purchase_order[expiration_date]': {
          required: true,
          greaterThan: "#purchase_order_delivery_date"
        },
        'purchase_order[delivery_date]': {
          required: true,
          greaterThan: "#purchase_order_date_of_issue"
        }
      },
      
      messages: {
        'purchase_order[supplier_id]': "Porfavor, especifica el proveedor.",
        'purchase_order[money_id]': "Porfavor, especifica el tipo de moneda con que se trabajará.",
        'purchase_order[method_of_payment_id]': "Porfavor, especifica el método de págo.",
        'purchase_order[date_of_issue]': "Porfavor, especifica la fecha de emisión.",
        'purchase_order[expiration_date]': {
          required: "Porfavor, especifica la fecha de expiración.",
          greaterThan: "La fecha de vencimiento debe ser mayor a la fecha de entrega."
        },
        'purchase_order[delivery_date]': { 
          required: "Porfavor, especifica la fecha de entrega.",
          greaterThan: "La fecha de entrega debe ser mayor a la fecha de emisión."
        }
      },
      
      highlight: function (element) {
        $(element).closest('.form-group').removeClass('has-success').addClass('has-error');
      },
      unhighlight: function (element) {
        $(element).closest('.form-group').removeClass('has-error').addClass('has-success');
      },
      errorElement: 'span',
      errorClass: 'help-block',
      errorPlacement: function (error, element) {
        if (element.parent('.input-group').length) {
          error.insertAfter(element.parent());
        } else {
          error.insertAfter(element);
        }
      }
    });

  }

  loadScript("#{ asset_path 'plugin/fuelux/wizard/wizard.js', type: :javascript }", fueluxWizard);
  
  function fueluxWizard() {
    
    var wizard = $('.wizard').wizard();
    
    wizard.on('finished', function (e, data) {
    
      $.ajax({
        type: 'POST',
        url: "/logistics/purchase_orders",
        async: false,
        data: $('#new_purchase_order').serialize(),
        dataType : 'html',
        success: function(data) {
          $('#modalLoading').modal('hide');
          $('#content').html(data);
        },
        error : function(xhr, ajaxOptions, thrownError) {
          container.html('<h4 style="margin-top:10px; display:block; text-align:left"><i class="fa fa-warning txt-color-orangeDark"></i> Error 404! Page not found.</h4>');
        }
      });

    });

    wizard.on('change', function(e, data){

      var status = false;
      var data_delivery_order = new Array();

      if(data.step == 1 && data.direction == 'next'){
        var index = 0;
        $('#items-delivery-orders #dt_basic tbody tr td .checkbox .order_check').each(function(){
          if( $(this).is(':checked') ){
            status = true
            data_delivery_order[index] = $(this).val();
            index++;
          }
        });

        if(status){
          data = { ids_delivery_order: data_delivery_order, authenticity_token: "#{form_authenticity_token}" };
          load_items_delivery_order_ajax('#{add_items_from_delivery_orders_logistics_purchase_orders_path}', 'order_delivery_items_table', data);

          if($('#new_purchase_order').length > 0){
            append_url_ajax('#{add_modal_extra_operations_logistics_purchase_orders_path}', 'new_purchase_order', data, 0, 'POST');
          }

          $.smallBox({
            title: "Ahora completa la información de la Orden de compra.",
            content: "<i class='fa fa-clock-o'></i> <i>1 seconds ago...</i>",
            color: "#5F895F",
            iconSmall: "fa fa-check bounce animated",
            timeout: 4000
          });

        } else {

          e.preventDefault();
          $.smallBox({
            title: "Antes de continuar debes de haber seleccionado Items de alguna Orden de Suministro.",
            content: "<i class='fa fa-clock-o'></i> <i>1 seconds ago...</i>",
            color: "#c46a69",
            iconSmall: "fa fa-times bounce animated",
            timeout: 4000
          });
        }
      }

      if(data.step == 2 && data.direction == 'next') {
        var $valid = $("#new_purchase_order").valid();
        if (!$valid) {
          e.preventDefault();
        }        
        
      }

      if(data.step == 3 && data.direction == 'next') {

      }

    });

  }

  function add_extra_operation(obj){

    var id_content = $(obj).attr('rel') + '-section';

    var concept = '#' + $(obj).attr('rel') + '-select-calc';
    var type = '#' + $(obj).attr('rel') + '-select-type';
    var name_concept = '#' + $(obj).attr('rel') + '-select-calc option:selected';
    var name_type = '#' + $(obj).attr('rel') + '-select-type option:selected';

    var value = '#' + $(obj).attr('rel') + '-input-value';

    var apply = '#' + $(obj).attr('rel') + '-select-apply';
    var operation = '#' + $(obj).attr('rel') + '-select-operation';
    var name_apply = '#' + $(obj).attr('rel') + '-select-apply option:selected';

    var reg_n = '#' + $(obj).attr('rel') + '-hidden';

    var str_data = { concept: $(concept).val(), type: $(type).val(), value: $(value).val(), apply: $(apply).val(), operation: $(operation).val(), name_concept: $(name_concept).text(), name_type: $(name_type).text(), name_apply: $(name_apply).text(), reg_n: $(reg_n).val() };

    path_jquery_before = '#tr-' + $(reg_n).val() + ' td.price-without-igv input';
    path_jquery_after = '#tr-' + $(reg_n).val() + ' td.price-with-igv input';
    path_jquery_igv = '#tr-' + $(reg_n).val() + ' td.check-igv .checkbox input';
    ancient_value_before = parseFloat($(path_jquery_before).val());
    ancient_value_after = parseFloat($(path_jquery_after).val());

    if( $(apply).val() == 'before' ){
      if( $(operation).val() == 'sum' ){
        if( $(type).val() == 'soles' ){
          ancient_value_before = ancient_value_before + parseFloat($(value).val());
        } else {
          ancient_value_before = ancient_value_before + parseFloat((ancient_value_before*($(value).val()/100)));
        }
      } else {
        if( $(type).val() == 'soles' ){
          ancient_value_before = ancient_value_before - parseFloat($(value).val());
        } else {
          ancient_value_before = ancient_value_before - parseFloat((ancient_value_before*($(value).val()/100)));
        }
      }

      if($(path_jquery_igv).is(":checked")){
        $(path_jquery_before).val(parseFloat(ancient_value_before).toFixed(2));
        ancient_value_before = ancient_value_before * (parseFloat("#{@igv}"))
        $(path_jquery_after).val(parseFloat(ancient_value_before).toFixed(2));
      } else {
        $(path_jquery_before).val(parseFloat(ancient_value_before).toFixed(2));
        $(path_jquery_after).val(parseFloat(ancient_value_before).toFixed(2));
      }

    }

    append_url_ajax('#{add_more_row_form_extra_op_logistics_purchase_orders_path}', id_content, str_data, 0, 'POST');
  }

  function set_id_modeling(obj, id_modeling){
    $current_tr_parent = $(obj).parent().parent().attr('id');
    id_modal_target = $(obj).attr('data-target');
    $id_generated = $current_tr_parent.split('-')[1];
    $(id_modal_target + '-hidden').val($id_generated);
  }