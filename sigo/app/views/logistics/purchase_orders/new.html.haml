#content-inside
  %section#widget-grid
    .row
      %article.col-sm-12.col-md-12.col-lg-12
        #wid-id-10.jarviswidget{:role => 'widget'}
          %header{:role => 'heading'}
            %span.widget-icon
              %i.fa.fa-cloud-upload
            %h2="Crear Orden de Compra N° "+@numbercode
          %div{:role => 'content'}
            .widget-body
              = render :partial => 'form_new_order'

%button.btn.btn-sm.btn-primary.btn-prev#backlist-purchase-order{type: "button"}
  %i.fa.fa-arrow-left>
  Retornar al listado de Ordenes de Compra

#modalDeliveryItems.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "modalDeliveryItemsLabel", role: "dialog", tabindex: "-1"}
  .modal-dialog
    .modal-content
      .modal-body#modalDeliveryItemsContent

:javascript
  // DO NOT REMOVE : GLOBAL FUNCTIONS!
  pageSetUp();

  $(document).ready(function(){
  
    $('#proveedor-select').select2({
      placeholder: "Buscar proveedor...",
      minimumInputLength: 3,
      ajax: {
        url: "#{display_proveedor_logistics_purchase_orders_path}",
        dataType: 'json',
        type: 'POST',
        quietMillis: 100,
        data: function(term, page){
          return {
            q: term,
            page: page,
            authenticity_token: "#{form_authenticity_token}"
          };
        },
        results: function(data, page){
          return {results: data.articles};
        }
      },
      formatResult: function(node){ return '<div>' + node.code + ' - ' + node.name +'</div>' },
      formatSelection: function(node){ return (node.code + ' - ' + node.name ) },
      escapeMarkup: function (m) { return m; }
    });

    get_exchange_rate();

    $('#btn-add-more-items-do').click(function(){
      var ids_delivery_order = new Array();

      $('#summary-delivery-orders tbody tr td.pod-di input').each(function(index, element){
        ids_delivery_order[index] = $(this).val();
      });

      data = { cost_center_id: $.cost_center, authenticity_token: "#{form_authenticity_token}", ids_delivery_order: ids_delivery_order };
      load_items_delivery_order_ajax('#{more_items_from_delivery_orders_logistics_purchase_orders_path}', 'modalDeliveryItemsContent', data);
      $('#modalDeliveryItems').modal('toggle', {
        keyboard: false,
        backdrop: 'static'
      });
    });

    $('#category-select').change(function(){
      get_exchange_rate();
    });

    $('#backlist-purchase-order').click(function(){
      load_url_ajax("#{logistics_purchase_orders_path}", 'content', {company_id: "#{@company}"}, null, 'GET');
    });

    $('#btn-info-cost').click(function() {
      var total_unit_price = 0;
      $('#order_delivery_items_table tr td.price-without-igv input').each(function(k,v){
        total_unit_price = total_unit_price + parseFloat($(this).val());
      });

      var total_unit_price_with_igv = 0;
      $('#order_delivery_items_table tr td.price-with-igv input').each(function(k,v){
        total_unit_price_with_igv = total_unit_price_with_igv + parseFloat($(this).val());
      });

      $.smallBox({
        title : "Información de la Orden de Compra",
        content : "El Sub Total es de: " + total_unit_price + ' ' + "El Total es de: " + total_unit_price_with_igv, 
        color : "#5384AF",
        //timeout: 8000,
        icon : "fa fa-bell"
      });
    });

  });

  function delete_item(code){
    id_modal = $("#tr-" + code + " td.aditional-operations a").attr('data-target');
    $("#tr-" + code).remove();
    $(id_modal).remove();
  }

  function get_exchange_rate(){
    var date = $('#purchase_order_date_of_issue').val();
    var money_id = $('#category-select').val();
    $.ajax({
      type: 'POST',
      url: "#{get_exchange_rate_per_date_logistics_purchase_orders_path}",
      data: {
        date: date,
        money_id: money_id,
        authenticity_token: "#{form_authenticity_token}"
      },
      dataType : 'json',
      async: false,
      success: function(data) {
        if(data){
          $('#purchase_order_exchange_of_rate').val(data);
        }else{
          $('#purchase_order_exchange_of_rate').val(0);
        }
      }
    });
  }

  // PAGE RELATED SCRIPTS
  function calculatePriceWithourIgv(element){
    var reg = $(element).attr('id').split("_")[6];
    calcularcondescuentos(reg);
  }

  function calculatePrice(element){
    var reg = $(element).attr('id').split("_")[6];
    calcularcondescuentos(reg);
  }

  function isNumber(evt) {
    evt = (evt) ? evt : window.event;
    var charCode = (evt.which) ? evt.which : evt.keyCode;
    if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode != 46) {
        return false;
    }
    return true;
  }

  function minmax(value, min, max){
    if(parseInt(value) < min || isNaN(value)) 
      return min; 
    else if(parseInt(value) > max) 
      return max; 
    else return value;
  }

  function add_more_items(){
    var data_delivery_order = new Array();
    status = false;
    var ids = new Array();
    var idst = document.getElementsByClassName('pod-di-id');
    var index = 0;
    if(idst.length > 0){
      $.each(idst, function(){
        ids[index] = $(this).val();
        index++;
      });
    }
    index = 0;
    var flag = 0;
    $('#modal-more-items tbody tr td .checkbox .order_check').each(function(){
      if( $(this).is(':checked') ){
        if(ids.indexOf($(this).val())==-1){
          data_delivery_order[index] = $(this).val();
          status = true;
          index++;
        }else{
          flag = 1;
        }
      }
    });

    if(status){
      data = { ids_delivery_order: data_delivery_order, authenticity_token: "#{form_authenticity_token}" };
      append_url_ajax('#{add_items_from_delivery_orders_logistics_purchase_orders_path}', 'order_delivery_items_table', data, '', 'POST');
      append_url_ajax('#{add_modal_extra_operations_logistics_purchase_orders_path}', 'new_purchase_order', data, 0, 'POST');
    }

    if(flag == 1){
      $.smallBox({
        title : "Aviso",
        content : "Algunas de las ordenes seleccionadas ya han sido agregadas", 
        color: "#c46a69",
        timeout: 8000,
        icon : "fa fa-bell"
      });
    }

    $('#cont').val(0);
    $('#modalDeliveryItems').modal('hide');
  };

  /* Comentando una función que puede servir en un futuro...
  function calculatePriceFromIgv(element){
    var price_with_igv = parseFloat($(element).val()).toFixed(2);
    var amount = parseInt($(element).parent().siblings('.amount').find('input').val());
    var price_without_igv = parseFloat(price_with_igv / ((parseFloat("#{@igv}"))*amount)).toFixed(2);

    $(element).parent().siblings('.unit-price').find('input').val(price_without_igv);

    var price_with_amount_unit = parseFloat(amount * price_without_igv).toFixed(2);

    $(element).parent().siblings('.price-without-igv').find('input').val(price_with_amount_unit);
  }
  */

  function enableFieldsForIgv(element){
    var reg = $(element).attr('id').split("_")[6];
    calcularcondescuentos(reg);
  }
  
  //Bootstrap Wizard Validations

  $("#new_purchase_order").ajaxForm({
    beforeSubmit: function(arr, $form, options) {
      $form.validate({
        // Rules for form validation
        rules: {
          'purchase_order[supplier_id]': {
            required: true
          },
          'purchase_order[money_id]': {
            required: true
          },
          'purchase_order[entity_id]': {
            required: true
          },
          'purchase_order[method_of_payment_id]': {
            required: true
          },
          'purchase_order[date_of_issue]': {
            required: true
          },
          'purchase_order[expiration_date]': {
            required: true,
            greaterThan: "#purchase_order_delivery_date"
          },
          'purchase_order[delivery_date]': {
            required: true,
            greaterThan: "#purchase_order_date_of_issue"
          }
        },
        
        messages: {
          'purchase_order[supplier_id]': "Porfavor, especifica el proveedor.",
          'purchase_order[money_id]': "Porfavor, especifica el tipo de moneda con que se trabajará.",
          'purchase_order[method_of_payment_id]': "Porfavor, especifica el método de págo.",
          'purchase_order[date_of_issue]': "Porfavor, especifica la fecha de emisión.",
          'purchase_order[entity_id]':"Escoja un proveedor",
          'purchase_order[expiration_date]': {
            required: "Porfavor, especifica la fecha de expiración.",
            greaterThan: "La fecha de vencimiento debe ser mayor a la fecha de entrega."
          },
          'purchase_order[delivery_date]': { 
            required: "Porfavor, especifica la fecha de entrega.",
            greaterThan: "La fecha de entrega debe ser mayor a la fecha de emisión."
          }
        },
        
        highlight: function (element) {
          $(element).closest('.form-group').removeClass('has-success').addClass('has-error');
        },
        unhighlight: function (element) {
          $(element).closest('.form-group').removeClass('has-error').addClass('has-success');
        },
        errorElement: 'span',
        errorClass: 'help-block',
        errorPlacement: function (error, element) {
          if (element.parent('.input-group').length) {
            error.insertAfter(element.parent());
          } else {
            error.insertAfter(element);
          }
        }
      });

      return $form.valid();
    },
    target: '#content',
    success: function (data){
      $(".help-inline").parent().addClass("state-error");
      $('#modalLoadingLabelading').modal('hide');
      $('.modal-backdrop.fade.in').remove();
    },
    error: function(xhr, status, error) {
      $('#modalLoadingLabelading').modal('hide');
      $('.modal-backdrop.fade.in').remove();
    }
  });

  function add_extra_operation(obj){

    var id_content = $(obj).attr('rel') + '-section';

    var concept = '#' + $(obj).attr('rel') + '-select-calc';
    var type = '#' + $(obj).attr('rel') + '-select-type';
    var name_concept = '#' + $(obj).attr('rel') + '-select-calc option:selected';
    var name_type = '#' + $(obj).attr('rel') + '-select-type option:selected';

    var value = '#' + $(obj).attr('rel') + '-input-value';

    var apply = '#' + $(obj).attr('rel') + '-select-apply';
    var operation = '#' + $(obj).attr('rel') + '-select-operation';
    var name_apply = '#' + $(obj).attr('rel') + '-select-apply option:selected';

    var reg_n = '#' + $(obj).attr('rel') + '-hidden';

    var str_data = { concept: $(concept).val(), type: $(type).val(), value: $(value).val(), apply: $(apply).val(), operation: $(operation).val(), name_concept: $(name_concept).text(), name_type: $(name_type).text(), name_apply: $(name_apply).text(), reg_n: $(reg_n).val() };

    /* Data for Calculate */
    amount_bruto = $('#tr-' + $(reg_n).val() + ' td.amount input').val()*$('#tr-' + $(reg_n).val() + ' td.unit-price input').val();

    /* Referencial Data */
    path_jquery_before = '#tr-' + $(reg_n).val() + ' td.price-without-igv input';
    path_jquery_after = '#tr-' + $(reg_n).val() + ' td.price-with-igv input';
    path_jquery_igv = '#tr-' + $(reg_n).val() + ' td.check-igv .checkbox input';
    /* Amounts */
    path_jquery_discount_before = '#tr-' + $(reg_n).val() + ' td.discount-before input';
    path_jquery_discount_after = '#tr-' + $(reg_n).val() + ' td.discount-after input';
    path_jquery_discount_igv = '#tr-' + $(reg_n).val() + ' td.discount-igv input';

    if($(path_jquery_before).val() != ''){

      ancient_value_before = parseFloat($(path_jquery_before).val());
      ancient_value_after = parseFloat($(path_jquery_after).val());

      if( $(apply).val() == 'before' ){

        if( $(operation).val() == 'sum' ){
          if( $(type).val() == 'soles' ){
            value_before = $(path_jquery_discount_before).val() + parseFloat($(value).val());
            $(path_jquery_discount_before).val(value_before);
          } else {
            value_before = $(path_jquery_discount_before).val() + parseFloat((amount_bruto*($(value).val()/100)));
            $(path_jquery_discount_before).val(value_before);
          }
        } else {
          if( $(type).val() == 'soles' ){
            value_before = $(path_jquery_discount_before).val() - parseFloat($(value).val());
            $(path_jquery_discount_before).val(value_before);
          } else {
            value_before = $(path_jquery_discount_before).val() - parseFloat((amount_bruto*($(value).val()/100)));
            $(path_jquery_discount_before).val(value_before);
          }
        }

        if($(path_jquery_igv).is(":checked")){
          $(path_jquery_before).val( parseFloat(amount_bruto) + parseFloat($(path_jquery_discount_before).val()) );
          $(path_jquery_discount_igv).val( (parseFloat(amount_bruto) + parseFloat($(path_jquery_discount_before).val())) * (1 - parseFloat("#{@igv}")) );
          $(path_jquery_after).val( (parseFloat(amount_bruto) + parseFloat($(path_jquery_discount_before).val())) * parseFloat("#{@igv}") );
        } else {
          $(path_jquery_before).val( parseFloat(amount_bruto) + parseFloat($(path_jquery_discount_before).val()) );
          $(path_jquery_after).val( parseFloat(amount_bruto) + parseFloat($(path_jquery_discount_before).val()) );
          $(path_jquery_discount_igv).val(0);
        }

      } else {

        if( $(operation).val() == 'sum' ){
          if( $(type).val() == 'soles' ){
            value_after = $(path_jquery_discount_after).val() + parseFloat($(value).val()).toFixed(2);
            $(path_jquery_discount_after).val(value_after);
          } else {
            value_after = $(path_jquery_discount_after).val() + parseFloat($(path_jquery_after).val()*($(value).val()/100)).toFixed(2);
            $(path_jquery_discount_after).val(value_after);
          }
        } else {
          if( $(type).val() == 'soles' ){
            value_after = $(path_jquery_discount_after).val() - parseFloat($(value).val()).toFixed(2);
            $(path_jquery_discount_after).val(value_after);
          } else {
            value_after = $(path_jquery_discount_after).val() - parseFloat($(path_jquery_after).val()*($(value).val()/100)).toFixed(2);
            $(path_jquery_discount_after).val(value_after);
          }
        }

      }

      append_url_ajax('#{add_more_row_form_extra_op_logistics_purchase_orders_path}', id_content, str_data, 0, 'POST');

    } else {

      alert('No se ha calculado el Precio antes de IGV.');

    }

  }

  function set_id_modeling(obj, id_modeling){
    $current_tr_parent = $(obj).parent().parent().attr('id');
    id_modal_target = $(obj).attr('data-target');
    $id_generated = $current_tr_parent.split('-')[1];
    $(id_modal_target + '-hidden').val($id_generated);
  }

  function calcularcondescuentos(reg){
    var dib = $('#'+reg+'b').children();
    var dia = $('#'+reg+'a').children();
    var price = parseFloat($('#purchase_order_purchase_order_details_attributes_'+reg+'_unit_price').val());
    var amount = parseFloat($('#purchase_order_purchase_order_details_attributes_'+reg+'_amount').val());
    var igv = $('#purchase_order_purchase_order_details_attributes_'+reg+'_igv').is(':checked');

    var db_m = 0;
    var da_m = 0;
    var a_igv_c_d = 0;
    var d_igv_c_d = 0;

    if($('#'+reg+'b > input').length > 0){
      dib.each(function(){
        if(Math.abs($(this).attr('value')) < 1.0){
          db_m = parseFloat(db_m)+parseFloat(parseFloat($(this).attr('value'))*price*amount);
        }else{
          db_m =parseFloat(db_m)+parseFloat($(this).attr('value'));
        }
      });
    }
    $('#purchase_order_purchase_order_details_attributes_'+reg+'_discount_before').val(Math.abs(toFixed(db_m,2)));
    $('#purchase_order_purchase_order_details_attributes_'+reg+'_unit_price_before_igv').val(toFixed(parseFloat(price*amount-db_m),2));

    var total = 0;
    if(igv){
      if($('#'+reg+'a > input').length > 0){
        dia.each(function(){
          if(Math.abs($(this).attr('value')) < 1.0){
            da_m = parseFloat(da_m)+parseFloat(parseFloat($(this).attr('value'))*price*amount*1.18);
          }else{
            da_m =parseFloat(da_m)+parseFloat($(this).attr('value'));
          }
        });  
      }
      total=toFixed((parseFloat(price*amount-db_m)*1.18-da_m),2);
      $('#purchase_order_purchase_order_details_attributes_'+reg+'_quantity_igv').val(toFixed(parseFloat(price*amount-db_m)*0.18,2));
      $('#purchase_order_purchase_order_details_attributes_'+reg+'_total_igv').val(toFixed(parseFloat(price*amount-db_m)*1.18,2));
    }else{
      if($('#'+reg+'a > input').length > 0){
        dia.each(function(){
          if(Math.abs($(this).attr('value')) < 1.0){
            da_m = parseFloat(da_m)+parseFloat(parseFloat($(this).attr('value'))*price*amount);
          }else{
            da_m =parseFloat(da_m)+parseFloat($(this).attr('value'));
          }
        });    
      }
      total=toFixed(parseFloat(price*amount-db_m)-da_m,2);
      $('#purchase_order_purchase_order_details_attributes_'+reg+'_quantity_igv').val('0');
      $('#purchase_order_purchase_order_details_attributes_'+reg+'_total_igv').val(toFixed(parseFloat(price*amount-db_m),2));
    }
    $('#purchase_order_purchase_order_details_attributes_'+reg+'_discount_after').val(Math.abs(toFixed(da_m,2)));
    $('#purchase_order_purchase_order_details_attributes_'+reg+'_unit_price_igv').val(total);
  }


  function toFixed(num,dec){
    dec= dec || 0;
    var s = String(num);
    console.log(num%1);
    if(num%1)s= s.replace(/5$/, '6');
    return Number((+s).toFixed(dec));
  }