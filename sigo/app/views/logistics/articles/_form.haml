#wid-id-0.jarviswidget{"data-widget-colorbutton" => "false", "data-widget-editbutton" => "false"}
  %header
    %span.widget-icon
      %i.fa.fa-eye
    %h2 Artículos
  .widget-body
    = simple_form_for([:logistics, @article], html: {class: 'form-horizontal smart-form', autocomplete: 'off' }) do |f|
      %fieldset
        = f.hidden_field :subcategory_id_edit, :value => @subcategory_article
        -if @action=="edit"
          %input#code{:value => "#{@article.code[2,4]}", "style"=>"display:none;"}
        -else
          %input#code{:value => "0", "style"=>"display:none;"}
        .row
          %section.col.col-10
            %label.label Tipo de Articulo
            %label.input{for: "type_of_article_id"}
              %select.form-control#type-article-select{:name =>"article[type_of_article_id]"}
                - @typeOfArticles.each do |typeArticle|
                  %option{:value => "#{typeArticle.id}", :rel => "#{typeArticle.code}", :selected => @typeOfArticle == typeArticle.id}
                    = typeArticle.name
          %section.col.col-5
            %label.label Grupo
            %label.input{for: "category_id"}
              %select.form-control#category-select
                -if @action == "edit"
                  %option{ :value => "0"} Seleccione un grupo
                  - @categories.each do |cat|
                    -if @article.code[2,2] == cat.code
                      %option{:value => "#{cat.code}", :rel => "#{cat.code}", :selected =>"selected" }
                        = cat.name
                    -else
                      %option{:value => "#{cat.code}", :rel => "#{cat.code}"}
                        = cat.name
                -else
                  %option{ :value => "0"} Seleccione un grupo
                  - @categories.each do |cat|
                    %option{:value => "#{cat.code}", :rel => "#{cat.code}"}
                      = cat.name
          %section.col.col-5
            %label.label Sub Grupo
            %label.input{for: "subcategory_id"}
              %select.form-control#subcategory-select
                %option{ :value => "0"} Seleccione un Subgrupo
                
          %section.col.col-5
            %label.label Específico
            %label.input{for: "specific_id"}
              %select.form-control#specific-select{:name =>"article[specific_id]"}
                %option{ :value => "0"} Seleccione un Especifico
                
        .row
          %section.col.col-3
            %label.label Código
            %label.input{for: "code"}
              %i
              - if @article.code != nil
                = text_field(:extrafield, :first_code, class: "form-control", readonly: true, value: "#{@article.code[0,6]}")
              - else
                = text_field(:extrafield, :first_code, class: "form-control", readonly: true)
          %section.col.col-6
            %label.label &nbsp;
            %label.input{for: "code"}
              %i.icon-append.fa.fa-superscript
              - if @article.code != nil
                = f.input :code, placeholder: "Código", :input_html => {:class => 'form-control', :id => 'code-category', :value => "#{@article.code[8,6]}"}, label: false
              - else
                = f.input :code, placeholder: "Código", input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-10
            %label.label Nombre
            %label.input{for: "name"}
              %i.icon-append.fa.fa-user
              = f.input :name, placeholder: "Nombre del articulo", input_html: { class: 'form-control' }, label: false
        .row
          %section.col.col-10
            %label.label Unidad de medida
            %label.input{for: "unit_of_measurement_id"}
            %select#unit-select-measure.form-control.select2{:name =>"article[unit_of_measurement_id]", :style => "width:100%;;padding: 0;border: none;"}
              - if @action == 'edit'
                - @unitOfMeasurement.each do |unito|
                  - if @unitid == unito.id
                    %option{:value => "#{unito.id}", :selected => true}
                      =unito.name
                  - else
                    %option{:value => "#{unito.id}"}
                      =unito.name
              - else
                - @unitOfMeasurement.each do |unit|
                  %option{:value => "#{unit.id}"}
                    =unit.name

        .row
          %section.col.col-10
            %label.label Descripción
            %label.input{for: "description"}
              = f.input :description, placeholder: "Descripción del articulo", input_html: { class: 'form-control' }, label: false, rows: 4

      %footer
        %button.btn.btn-primary{type: "submit"}
          %i.fa.fa-save
            Guardar

:javascript
  $(document).ready(function () {
    $("#type-article-select").focus();
    $('#unit-select-measure').select2();

    var type = $('option:selected', $('#type-article-select')).attr('rel');
    $('#extrafield_first_code').val(type);

    var category_code = $("#category-select").val();
    complete_infocombo("#{get_subcategory_form_category_logistics_categories_path}", category_code, "#{form_authenticity_token}", "0302");

    if($('form[id^="edit_"]').length > 0) {
      submit_validate($('form[id^="edit_"]'));
    }
    else{
      submit_validate($('#new_article'));
    }
  });

  $('#type-article-select').change(function(){
    var type = $('option:selected', $('#type-article-select')).attr('rel');
    $('#extrafield_first_code').val(type);
  });

  $('#category-select').change(function(){
    if($(this).val()!=0){
      var category_code = $(this).val();
      complete_infocombo("#{get_subcategory_form_category_logistics_categories_path}", category_code, "#{form_authenticity_token}, 0");
    }else{
      $('#subcategory-select').empty();
      $('#subcategory-select').append(
            $("<option></option>").attr("value", 0).text("Seleccione un sub grupo").attr("selected", "selected")
          )
      $('#specific-select').empty();
      $('#specific-select').append(
            $("<option></option>").attr("value", 0).text("Seleccione un específico").attr("selected", "selected")
          )
    }
    var code = $('option:selected', $('#type-article-select')).attr('rel')
    $("#extrafield_first_code").val(code);
  });

  $('#category-select').keyup(function(){
    if($(this).val()!=0){
      var category_code = $(this).val();
      complete_infocombo("#{get_subcategory_form_category_logistics_categories_path}", category_code, "#{form_authenticity_token}, 0");
    }else{
      $('#subcategory-select').empty();
      $('#subcategory-select').append(
            $("<option></option>").attr("value", 0).text("Seleccione un sub grupo").attr("selected", "selected")
          )
      $('#specific-select').empty();
      $('#specific-select').append(
            $("<option></option>").attr("value", 0).text("Seleccione un específico").attr("selected", "selected")
          )
    }
    var code = $('option:selected', $('#type-article-select')).attr('rel')
    $("#extrafield_first_code").val(code);
  });

  $('#subcategory-select').change(function(){
    if($(this).val()!=0){
      var subcategory_code = $('option:selected', $(this)).attr("rel");
      complete_infocombo2("#{get_specific_from_subcategory_logistics_categories_path}", subcategory_code, "#{form_authenticity_token}, 0");
    }else{
      $('#specific-select').empty();
      $('#specific-select').append(
        $("<option></option>").attr("value", 0).text("Seleccione un específico").attr("selected", "selected")
      )
    }
  });

  $('#subcategory-select').keyup(function(){
    if($(this).val()!=0){
      var subcategory_code = $('option:selected', $(this)).attr("rel");
      complete_infocombo2("#{get_specific_from_subcategory_logistics_categories_path}", subcategory_code, "#{form_authenticity_token}, 0");
    }else{
      $('#specific-select').empty();
      $('#specific-select').append(
        $("<option></option>").attr("value", 0).text("Seleccione un específico").attr("selected", "selected")
      )
      var code = $('option:selected', $('#type-article-select')).attr('rel')
      $("#extrafield_first_code").val(code);
    }
  });

  $('#specific-select').change(function(){
    var es_code = $('option:selected', $(this)).attr("rel");
    var code = $('option:selected', $('#type-article-select')).attr('rel') + es_code
    $("#extrafield_first_code").val(code);
  });

  function submit_validate(form){
    $(form['selector']).ajaxForm({
      beforeSubmit: function() {
        $(form['selector']).validate({
          // Rules for form validation
          rules : {
            'article[code]' : {
              required : true,
              minlength : 2,
              maxlength : 2
            },
            'article[name]' : {
              required : true,
            },
            'article[unit_of_measurement_id]': {
              required : true,
            }
          },

          // Messages for form validation
          messages : {
            'article[code]' : {
              required : 'Por favor, ingresar el código del Artículo',
              minlength : "Como mínimo debe tener 2 dígitos.",
              maxlength : "Como máximo debe tener 2 dígitos.",
            },
            'article[name]' : {
              required : 'Por favor, ingresar el nombre del artículo.'
            },
            'article[unit_of_measurement_id]' : {
              required : '</br>Por favor, ingresar la unidad de medida.'
            }
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
          }
        });
        // Remove all Help-inLine
        $(".help-inline").remove();
        // Client Valid
        return $(form['selector']).valid();
      },
      target: '#content',
      success: function (data){
        $(".help-inline").parent().addClass("state-error");
      },
      error: function(xhr, status, error) {
      }
    });
  }

  function complete_infocombo(url, category_code, form_token, default_value){
    $.ajax({
        type: "POST",
        url: url,
        async: false,
        data: { category_code: category_code, authenticity_token: form_token}
      }).done(function( data ) {
        newOptions = [];
        $.each(data.subcategories, function(key, value){
          item = {};
          item['name'] = value.name;
          item['code'] = value.code;
          item['id'] = value.id;
          newOptions.push(item);
        });
        $('#subcategory-select').empty();
        $('#subcategory-select').append(
              $("<option></option>").attr("value", "").text("Seleccione un Subgrupo")
            )
        $('#specific-select').empty();
        $('#specific-select').append(
              $("<option></option>").attr("value", "").text("Seleccione un Específico")
            )
        $.each(newOptions, function(key,value){
          if ($('#code').val() == value.code){
            $('#subcategory-select').append(
              $("<option></option>").attr("value", value.id).text(value.name).attr("selected", "selected").attr("rel", value.code)
            )
          }else{
            $('#subcategory-select').append(
              $("<option></option>").attr("value", value.id).text(value.name).attr("rel", value.code)
            )
          }
        });
      });
  }

  function complete_infocombo2(url, subcategory_code, form_token, default_value){
    $.ajax({
        type: "POST",
        url: url,
        async: false,
        data: { subcategory_code: subcategory_code, authenticity_token: form_token}
      }).done(function( data ) {
        newOptions = [];
        $.each(data.specifics, function(key, value){
          item = {};
          item['name'] = value.name;
          item['code'] = value.code;
          item['id'] = value.id;
          newOptions.push(item);
        });
        $('#specific-select').empty();
        $('#specific-select').append(
              $("<option></option>").attr("value", " ").text("Seleccione un específico").attr("selected", "selected").attr("rel", " ")
            )
        $.each(newOptions, function(key,value){
          if ("#{@article.category_id} "== value.id){
            $('#specific-select').append(
              $("<option></option>").attr("value", value.id).text(value.name).attr("selected", "selected").attr("rel", value.code)
            )
          } else {
            $('#specific-select').append(
              $("<option></option>").attr("value", value.id).text(value.name).attr("rel", value.code)
            )
          }  
          // Default Value:
          var code = $('option:selected', $('#type-article-select')).attr('rel') + $('option:selected', $('#specific-select')).attr('rel')
          $("#extrafield_first_code").val(code);
        });
      });
  }