#content-inside
  .row
    .col-xs-12.col-sm-7.col-md-7.col-lg-3
      %h1.page-title.txt-color-blueDark{ "style" => "margin-bottom: 10px;"}
        %i.fa.fa-pencil-square-o.fa-fw
        Ordenes de Servicio
    - if @article != nil && @phase != nil && @sector != nil
      .col-sm-3{ "style" => "margin-top: 10px;" }
        %a.btn.btn-primary.btn-mini{:onclick => "javascript:load_url_ajax('#{new_logistics_order_of_service_path}', 'content', {company_id: #{@company}, cost_center_id: $('#cost-center-selected').val()}, null, 'GET')"}
          Agregar Nueva Orden de Servicio
    - else
      .col-xs-12.col-sm-7.col-md-7.col-lg-12
        .alert.alert-block.alert-danger
          %a.close(data-dismiss="alert" href="#")
            ×
          %h4.alert-heading
            %i.fa.fa-lock
              No puedes crear Ordenes de Servicio!
          %p
            Verifica si tienes, por lo menos, 1 insumo, 1 fase y 1 sector
    - if flash[:notice] != nil
      .alert.alert-success.fade.in{"style" => "clear:both"}
        %button.close{"data-dismiss" => "alert"}
          ×
        %i.fa-fw.fa.fa-check
        %strong Éxito
        = flash[:notice]
    - if flash[:error] != nil
      .alert.alert-danger.fade.in
        %button.close{"data-dismiss" => "alert"}
          ×
        %i.fa-fw.fa.fa-times
        %strong Error!
        = flash[:error]
  %br
  #widget-grid
    .row
      %article.col-xs-12.col-sm-12.col-md-12.col-lg-12
        = render :partial => 'table'

:javascript

  // DO NOT REMOVE : GLOBAL FUNCTIONS!
  pageSetUp();
  
  // PAGE RELATED SCRIPTS

  loadDataTableScripts();
  function loadDataTableScripts() {

    loadScript("#{ asset_path 'plugin/datatables/jquery.dataTables-cust.min', type: :javascript }", dt_2);

    function dt_2() {
      loadScript("#{ asset_path 'plugin/datatables/ColReorder.min', type: :javascript }", dt_3);
    }

    function dt_3() {
      loadScript("#{ asset_path 'plugin/datatables/FixedColumns.min.js', type: :javascript }", dt_4);
    }

    function dt_4() {
      loadScript("#{ asset_path 'plugin/datatables/ColVis.min', type: :javascript }", dt_5);
    }

    function dt_5() {
      loadScript("#{ asset_path 'plugin/datatables/ZeroClipboard', type: :javascript }", dt_6);
    }

    function dt_6() {
      loadScript("#{ asset_path 'plugin/datatables/media/js/TableTools.min', type: :javascript }", dt_7);
    }

    function dt_7() {
      loadScript("#{ asset_path 'plugin/datatables/DT_bootstrap', type: :javascript }", runDataTables);
    }

  }

  $('#summary-purchase-orders_wrapper').removeClass("dataTables_wrapper");

  function runDataTables() {
    $('#summary-purchase-orders').dataTable({
      bDestroy: true,
      bProcessing  : true,
      sProcessing  : true,
      bServerSide  : true,
      sServerMethod: 'POST',
      sAjaxSource  : "#{display_orders_logistics_order_of_services_path}",
      fnDrawCallback : function(oSettings, json) {
        oSettings.fnDrawCallback = $('a.btn').tooltip('hide');
      },
      fnServerParams: function ( aoData ) {
        aoData.push( {"name": "authenticity_token", "value": "#{form_authenticity_token}"} );
        aoData.push( {"name": "state", "value": $('#state').val()} );
      },
      sPaginationType : 'bootstrap_full'
    });

    $("#summary-purchase-orders_filter div input").keyup(function() {
      oTable.fnFilter(this.value, oTable.oApi._fnVisibleToColumnIndex(oTable.fnSettings(), $("thead input").index(this)));
    });
  }


  function filtro(state) {
    $('#state').val(state);
    runDataTables();
  }