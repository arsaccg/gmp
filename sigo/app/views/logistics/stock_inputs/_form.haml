#wid-id-0.jarviswidget{"data-widget-colorbutton" => "false", "data-widget-editbutton" => "false"}
  %header
    %span.widget-icon
      %i.fa.fa-eye
    %h2 Ingreso a Almacén
  %div{:style => "padding-top: 0"}
    .jarviswidget-editbox
    .widget-body{:style=>"width: 95%;margin: 2%;"}
      = simple_form_for([:logistics, @head], html: {class: 'form-horizontal', novalidate: 'novalidate', autocomplete: 'off' }) do |f|
        - f.fields_for :stock_input_details do |del|
          = del.hidden_field :lock_version
        = f.hidden_field :lock_version          
        %fieldset
          = hidden_field_tag "stock_input[input]", "1"
          = hidden_field_tag "supplier-selected", @head.supplier_id
          .row
            .col-md-3
              .row
                .col-md-10
                  .form-group
                    %label.control-label Almacén
                    .input-group
                      %select.form-control#category-select{:name =>"stock_input[warehouse_id]",}
                        - @warehouses.each do |x|
                          - if @head.warehouse_id == x.id
                            %option{:value => "#{x.id}", :rel => "", :selected => true}
                              = x.name
                          - else
                            %option{:value => "#{x.id}"}
                              = x.name
                      %span.input-group-addon
                        %i.fa.fa-gears
            .col-md-2
              .row
                .col-md-10
                  .form-group
                    %label.control-label Formato
                    .input-group
                      %select.form-control#format-select{:name =>"stock_input[format_id]"}
                        - @formats.each do |x|
                          - if @head.format_id == x.id
                            %option{:value => "#{x.id}", :rel => "", :selected => true}
                              = x.name
                          - else
                            %option{:value => "#{x.id}"}
                              = x.name
                      %span.input-group-addon
                        %i.fa.fa-gears
            .col-md-2
              .row
                .col-md-10
                  .form-group
                    %label.control-label Periodo
                    .input-group
                      %select(name='stock_input[period]' class = 'select2 form-control' id = 'period-select' style='width:100%;padding: 0;border: none;')
                        - @periods.select(:year).uniq.each do |x|
                          %optgroup{:label => "#{x.year.to_i}"}
                            - @periods.where("year = ?", x.year).each do |y|
                              - if @head.period == y.year.to_s + y.month.to_s.rjust(2, "0")
                                %option{:value => "#{y.year.to_s}#{y.month.to_s.rjust(2, "0")}", :rel => "", :selected => true}
                                  = y.year.to_s + " - " + y.month.to_s.rjust(2, "0")
                              - else
                                %option(value = "#{y.year.to_s}#{y.month.to_s.rjust(2, "0")}")
                                  = y.year.to_s + " - " + y.month.to_s.rjust(2, "0")
            .col-sm-1{:style=>"width:7.5%"}
              .row
                .col-md-9
                  .form-group
                    %label.control-label Serie
                    = text_field(:stock_input, :series, :value => "#{@head.series}", placeholder: "Serie", class: "form-control col-md-3")
            .col-md-2
              .row
                .col-md-10
                  .form-group
                    %label.control-label N° Documento
                    .input-group
                      = text_field(:stock_input, :document, :value => "#{@head.document}", placeholder: "N° Documento", class: "form-control")
                      %span.input-group-addon
                        %i.fa.fa-file
            .col-md-2
              .row
                .col-md-10
                  .form-group
                    %label.control-label Fecha
                    .input-group
                      = f.input :issue_date, placeholder: "Fecha", as: :string, :input_html => {:class => 'form-control', type: "date", :required => true}, label: false
                      %span.input-group-addon
                        %i.fa.fa-calendar
          .row
            .col-md-12
              .form-group
                %label.control-label Glosa
                .input-group
                  = text_area(:stock_input, :description, :value => "#{@head.description}", placeholder: "Glosa", class: "form-control")
                  %span.input-group-addon
                    %i.fa.fa-align-justify
          .row
            %fieldset
              .row
                .col-md-6
                  .actions
                    %button.btn.btn-sm.btn-success#btn-add-more-items-do{'type' => 'button'}
                      Agregar más items
            %br
          
            %fieldset
              %table(class="table table-condensed table-bordered table-striped table-hover has-tickbox smart-form" style="font-size: 12px;" id="summary-pod" aria-describedby="data-table_info")
                %thead
                  %tr
                    %th Codigo
                    %th Descripción
                    %th{'style' => 'width: 4%;'}
                      Unidad
                    %th{'style' => 'width: 5%;'}
                      Cantidad Total
                    %th{'style' => 'width: 4%;'}
                      Cantidad Pendiente
                    %th{'style' => 'width: 6%;'}
                      Cantidad Recibida
                    %th{'style' => 'width: 4%;'}
                      Eliminar
                %tbody(id="table-items-paso2")
                  = render :partial => 'table_items_detail_edit'

        .form-actions{:style => "margin-top: 0;"}
          %br
          .row
            .col-md-12
              %button.btn.btn-primary{type: "submit"}
                %i.fa.fa-save
                  Guardar

  %button.btn.btn-primary#backlist{type: "button"}
    %i.fa.fa-arrow-left
      Retornar

#modalPurchaseOrderItems.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "modalDeliveryItemsLabel", role: "dialog", tabindex: "-1"}
  .modal-dialog
    .modal-content
      .modal-body#modalPodContent
    

:javascript
  $(document).ready(function(){
    //$('#stock_input_issue_date').datepicker.noConflict;

    $('#btn-add-more-items-do').click(function(){
      var ids_items = new Array();

      $('#summary-pod tbody tr td.pod-di input').each(function(index, element){
        ids_items[index] = $(this).val();
      });

      var supplier_id = $("#supplier-selected").val();

      data = { cost_center_id: 1, authenticity_token: "#{form_authenticity_token}", ids_items: ids_items, supplier_id: supplier_id };
      load_items_delivery_order_ajax('#{more_items_from_pod_logistics_stock_inputs_path}', 'modalPodContent', data);
      $('#modalPurchaseOrderItems').modal('toggle', {
        keyboard: false,
        backdrop: 'static'
      });
    });

    $('form[id^="edit_stock_input"]').ajaxForm({
      beforeSubmit: function(arr, $form, options) {
        $form.validate({
          // Rules for form validation
          rules: {
            'stock_input[supplier_id]': {
              required: true
            },
            'stock_input[warehouse_id]': {
              required: true
            },
            'stock_input[format_id]': {
              required: true
            },
            'stock_input[period]': {
              required: true
            },
            'stock_input[series]': {
              required: true,
              minlength : 3,
              maxlength : 3
            },
            'stock_input[document]': {
              required: true,
              minlength : 1,
              maxlength : 10
            },
            'stock_input[issue_date]': {
              required: true
            },
            'stock_input[description]': {
              required: true
            }
          },
          
          messages: {
            'stock_input[supplier_id]': "(*)",
            'stock_input[warehouse_id]': "(*)",
            'stock_input[format_id]': "(*)",
            'stock_input[period]': "(*)",
            'stock_input[series]' : {
              required : '(*)',
              minlength : "Mín 3 dígitos.",
              maxlength : "Máx 3 dígitos."
            },
            'stock_input[document]' : {
              required : '(*)',
              minlength : "Mín 1 dígito.",
              maxlength : "Máx 10 dígitos.",
            },
            'stock_input[issue_date]': "(*)",
            'stock_input[description]': "(*)"
          },
          highlight: function (element) {
            $(element).closest('.form-group').removeClass('has-success').addClass('has-error');
          },
          unhighlight: function (element) {
            $(element).closest('.form-group').removeClass('has-error').addClass('has-success');
          },
          errorElement: 'span',
          errorClass: 'help-block',
          errorPlacement: function (error, element) {
            if (element.parent('.input-group').length) {
              error.insertAfter(element.parent());
            } else {
              error.insertAfter(element);
            }
          }
        });

        return $form.valid();
      },
      target: '#content'
    });

  });

  function add_more_items(){
    var ids_items = new Array();
    status = false;
    var index = 0;
    $('#modal-more-items tbody tr td .checkbox .order_check').each(function(){
      if( $(this).is(':checked') ){
        status = true
        ids_items[index] = $(this).val();
        index++;
      }
    });

    if(status){
      data = { ids_items: ids_items, authenticity_token: "#{form_authenticity_token}" };
      append_url_ajax('#{add_items_from_pod_logistics_stock_inputs_path}', 'summary-pod', data, '', 'POST');
    }

    $('#modalPurchaseOrderItems').modal('hide');
  };
