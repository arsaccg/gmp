.modal-dialog#modalid{ style: "width: 50%;" }
  .modal-content
    .modal-header
      %header
        %h2
          %span.widget-icon
            %i.fa.fa-pencil-square-o.fa-fw 
          %strong REGISTRO DE CARTAS FIANZAS
    .modal-body
    
      = form_for @letters, url: general_expenses_bond_letters_path, as: :post, html: { class: "smart-form", id: "create_bond_letter" } do |f|    

        %fieldset
          =hidden_field_tag "bond_letter[cost_center_id]", "#{@cc.id.to_i.to_s}"
          .row
            %section.col-md-5
              %label{"style"=>"font-size:14px;"} Emitido por
            %section.col-md-6
              %input#issuer_entity_id.form-control{"name" =>"bond_letter[issuer_entity_id]", 'type' => 'hidden', 'style' => 'width:100%;padding: 0;border: none;'}

          .row{"style"=>"margin-bottom:1%;"}
            %section.col-md-5
              %label{"style"=>"font-size:14px;"} A Cargo de 
            %section.col-md-6
              %input#receptor_entity_id.form-control{"name" =>"bond_letter[receptor_entity_id]", 'type' => 'hidden', 'style' => 'width:100%;padding: 0;border: none;'}           
          .row
            %section.col-md-5
              %label{"style"=>"font-size:14px;"} Concepto
            %section.col-md-6
              %select#concept.select2.form-control{:name => "bond_letter[concept]"}
                %option{:value => nil, :disabled => true, :selected => true} Seleccione
                %option{:value => "0"} Fiel Cumplimiento
                %option{:value => "1"} Adelanto
                
          .row#concept_type_advance{"style"=>"display:none"}
            %section.col-md-5
              %label{"style"=>"font-size:14px;"} TIPO Y NÂº ADELANTO 
            %section.col-md-6
              %select#advance_id.select2.form-control{:name => "bond_letter[advance_id]"}
                
          .row
            %section.col-md-5
              %label{"style"=>"font-size:14px;"} Estado
            %section.col-md-6
              %select#state.select2.form-control{:name => 'bond_letter[status]'}
                %option{:value => nil, :disabled => true, :selected => true} Seleccione
                %option{:value => "0"} Cerrado
                %option{:value => "1"} Activo

        %footer
          %button.btn.btn-primary#smart-mod-eg1{type: "button", "style"=>"float:right;"}
            %i.fa.fa-save
              Guardar
          %button.btn.btn-danger#new2{"data-dismiss" => "modal", type: "button"}
            Salir

:javascript
  $('#bond_letter_new').attr("tabindex","");

  $("#new2").click(function() {
    data2 = { authenticity_token: "#{form_authenticity_token}", cc: #{@cc.id}};
    load_modal_ajax('#{general_expenses_bond_letters_path}', 'bond_letter_index', 'bond_letter_new', data2, null, 'GET');
  });

  $(document).ready(function (){
    $('#issuer_entity_id').select2({
      placeholder: "Buscar proveedor...",
      minimumInputLength: 3,
      ajax: {
        url: "#{display_issuer_general_expenses_bond_letters_path}",
        dataType: 'json',
        type: 'POST',
        quietMillis: 100,
        data: function(term, page){
          return {
            q: term,
            page: page,
            authenticity_token: "#{form_authenticity_token}"
          };
        },
        results: function(data, page){
          return {results: data.articles};
        }
      },
      formatResult: function(node){ return '<div>' + node.code + ' - ' + node.name +'</div>' },
      formatSelection: function(node){ return (node.code + ' - ' + node.name ) },
      escapeMarkup: function (m) { return m; }
    });

    $('#receptor_entity_id').select2({
      placeholder: "Buscar proveedor...",
      minimumInputLength: 3,
      ajax: {
        url: "#{display_receptor_general_expenses_bond_letters_path}",
        dataType: 'json',
        type: 'POST',
        quietMillis: 100,
        data: function(term, page){
          return {
            q: term,
            page: page,
            authenticity_token: "#{form_authenticity_token}"
          };
        },
        results: function(data, page){
          return {results: data.articles};
        }
      },
      formatResult: function(node){ return '<div>' + node.code + ' - ' + node.name +'</div>' },
      formatSelection: function(node){ return (node.code + ' - ' + node.name ) },
      escapeMarkup: function (m) { return m; }
    });

    $("#concept").change(function() {
        // foo is the id of the other select box 
        if ($(this).val() == "1") {
          $("#concept_type_advance").show();
          $("#advance_id").empty();
          type_advances("#{type_advances_general_expenses_bond_letters_path}", "#{@cc.id.to_i.to_s}", "#{form_authenticity_token}", "0");
        }else{
          $("#concept_type_advance").hide();
          $("#advance_id").empty();
        } 
    });
    submit_form($('form#create_bond_letter'))
  });

  $("#smart-mod-eg1").click(function(e) {
    $("#smart-mod-eg1").attr("disabled",true);
    $('form#create_bond_letter').submit();
    data2 = { authenticity_token: "#{form_authenticity_token}", cc: #{@cc.id}};
    load_modal_ajax('#{general_expenses_bond_letters_path}', 'bond_letter_index', 'bond_letter_new', data2, null, 'GET');
  });

  function submit_form(form_element){
    form_element.ajaxForm({
      beforeSubmit: function() {
        form_element.validate({
          // Rules for form validation
          ignore: '',
          rules : {
            'bond_letter[issuer_entity_id]' : {
              required : true,
            },
            'bond_letter[receptor_entity_id]' : {
              required : true,
            },
            'bond_letter[concept]' : {
              required : true,
            },
            'bond_letter[status]' : {
              required : true,
            }
          },

          // Messages for form validation
          messages : {
            'bond_letter[issuer_entity_id]' : {
              required : "(*)",
            },
            'bond_letter[receptor_entity_id]' : {
              required : "(*)",
            },
            'bond_letter[concept]' : {
              required : "(*)",
            },
            'bond_letter[status]' : {
              required :  "(*)",
            }
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
          }
        });
        // Remove all Help-inLine
        $(".help-inline").remove();
        // Client Valid
        return form_element.valid();
      },
      success: function (data){
        $(".help-inline").parent().addClass("state-error");
      },
      error: function(xhr, status, error) {
        console.log(error);
      }
    })
  }

  function type_advances(url, cost_center, form_token, default_value){
    $.ajax({
      type: "POST",
      url: url,
      async: false,
      data: { cost_center: cost_center, authenticity_token: form_token}
    }).done(function( data ) {
      newOptions = [];
      $.each(data.advances, function(key, value){
        item = {};
        item['advance_type'] = value.advance_type;
        item['id'] = value.id;
        newOptions.push(item);
      });
      $('#advance_id').empty();
      $.each(newOptions, function(key,value){
        $('#advance_id').append(
          $("<option></option>").attr("value", value.id).text(value.advance_type)
        )
      });
    });
  }