.modal-dialog#modalid{ style: "width: 50%;" }
  .modal-content
    .modal-header
      %header
        %h2
          %span.widget-icon
            %i.fa.fa-pencil-square-o.fa-fw 
          %strong Formulario del Préstamo
    .modal-body
    
      = form_for @loan, url: create_loan_general_expenses_loans_path, as: :post, html: { class: "smart-form", id: "create_loan" } do |f|    

        %fieldset
          %input#cc{ :value => "#{@cc.id.to_i.to_s}", "style"=>"display:none"}
          %input{:name=> 'loan[cost_center_lender_id]', :value => "#{@cc.id.to_i.to_s}", "style"=>"display:none"}
          .row
            %section.col-md-5
              %label{"style"=>"font-size:14px;"} Beneficiario
            %section.col-md-6
              %select#beneficiary.select2.form-control{:name => "loan[cost_center_beneficiary_id]"}
                %option{:value => nil} Seleccione un Beneficiario
                - @costcenters.each do |ph|
                  %option{:value => "#{ph.id}"}
                    = ph.name
          .row{"style"=>"margin-bottom:1%;"}
            %section.col-md-5
              %label{"style"=>"font-size:14px;"} Entregado a
            %section.col-md-6
              %input#loan_cost_center_lender_id.form-control{'name' => 'loan[person]', 'type' => 'hidden', 'style' => 'width:100%;padding: 0;border: none;'}
          .row
            %section.col-md-5
              %label{"style"=>"font-size:14px;"} Fecha
            %section.col-md-6
              %input#loan_date.form-control{as: :string,type: "date", :name => "loan[loan_date]"}
                
          .row{"style"=>""}
            %section.col-md-5
              %label{"style"=>"font-size:14px;"} Forma de Préstamo
            %section.col-md-6
              %select#loan_type.select2.form-control{:name => "loan[loan_type]"}
                %option{:value => nil} Seleccione una Forma
                %option{:value => "1"} Cheque
                %option{:value => "2"} Transferencia
                %option{:value => "3"} Efectivo
          .row
            %section.col-md-5
            %section.col-md-5
              = file_field_tag 'loan[loan_doc]', class: 'btn btn-default'

          .row{"style"=>""}
            %section.col-md-5
              %label{"style"=>"font-size:14px;"} Monto
            %section.col-md-6
              %input#amount.form-control{placeholder: "", :name => "loan[amount]"}
                
          .row{"style"=>""}
            %section.col-md-5
              %label{"style"=>"font-size:14px;"} Motivo
            %section.col-md-6
              %textarea#description.form-control{placeholder: "", :name => 'loan[description]'}
                
          .row{"style"=>""}
            %section.col-md-5
              %label{"style"=>"font-size:14px;"} Forma de Devolución
            %section.col-md-6
              %select#refund_type.select2.form-control{:name => "loan[refund_type]"}
                %option{:value => nil} Seleccione una Forma
                %option{:value => "1"} Cheque
                %option{:value => "2"} Transferencia
                %option{:value => "3"} Efectivo
          .row
            %section.col-md-5
            %section.col-md-5
              = file_field_tag 'loan[refund_doc]', class: 'btn btn-default'
          .row#checkn{"style"=>"margin-bottom:1%;display:none;"}
            %section.col-md-5
              %label{"style"=>"font-size:14px;"} N° Cheque
            %section.col-md-6
              %input#check_number.form-control{:name => "loan[check_number]"}
                
          .row#checkd{"style"=>"display:none;"}
            %section.col-md-5
              %label{"style"=>"font-size:14px;"} Fecha de Cheque
            %section.col-md-6
              %input#check_date.form-control{as: :string,type: "date", :name => 'loan[check_date]'}
                
          .row{"style"=>""}
            %section.col-md-5
              %label{"style"=>"font-size:14px;"} Estado
            %section.col-md-6
              %select#state.select2.form-control{:name => 'loan[state]'}
                %option{:value => "1"} Pendiente
                %option{:value => "2"} Devuelto

          .row#devdate{"style"=>"display:none;"}
            %section.col-md-5
              %label{"style"=>"font-size:14px;"} Fecha de Devolución
            %section.col-md-6
              %input#refund_date.form-control{as: :string,type: "date", :name =>"loan[refund_date]"}
                
        %footer
          %button.btn.btn-primary#smart-mod-eg1{type: "button", "style"=>"float:right;"}
            %i.fa.fa-save
              Guardar
          %button.btn.btn-danger#new2{"data-dismiss" => "modal", type: "button"}
            Salir

:javascript

  $("#new2").click(function() {
    data2 = { authenticity_token: "#{form_authenticity_token}", cc_id: $('#cc').val()};
    load_modal_ajax('#{general_expenses_loans_path}', 'loan', 'loan_new', data2, null, 'GET');
  });

  $(document).ready(function (){

    $('#loan_new').attr("tabindex","");

    $('#refund_type').change(function(){
      if($(this).val() == 2)
        $('#devdate').fadeIn('fast');
      else
        $('#devdate').fadeOut('fast');
    });

    $('#loan_cost_center_lender_id').select2({
      placeholder: "Buscar Trabajadores...",
      minimumInputLength: 3,
      id: function(data) { return data.id; },
      ajax: {
        url: "#{display_workers_general_expenses_loans_path}",
        dataType: 'json',
        type: 'POST',
        quietMillis: 100,
        data: function(term, page){
          return {
            q: term,
            page: page,
            authenticity_token: "#{form_authenticity_token}"
          };
        },
        results: function(data, page){
          return {results: data.workers};
        }
      },
      formatResult: function(node){ return '<div>' +'DNI° '+ node.dni+' - '+ node.name + ' ' + node.paternal_surname + ' ' + node.maternal_surname + '</div>' },
      formatSelection: function(node){ return ('DNI° '+node.dni+' - '+node.name + ' ' + node.paternal_surname + ' ' + node.maternal_surname) },
      escapeMarkup: function (m) { return m; }
    });

    $("#refund_type").change(function() {
        // foo is the id of the other select box 
        if ($(this).val() == "1") {
            $("#checkn").show();
            $("#checkd").show();
        }else{
            $("#checkn").hide();
            $("#checkd").hide();
        } 
    });

    $("#state").change(function() {
        // foo is the id of the other select box 
        if ($(this).val() == "2") {
            $("#devdate").show();
        }else{
            $("#devdate").hide();
        } 
    });

    submit_form($('form#create_loan'))
  });

  $("#smart-mod-eg1").click(function(e) {
    if($('#beneficiary').val()!='' && $('#person').val()!= '' && $('#loan_date').val()!= '' && $('#loan_type').val()!=''  && $('#amount').val()!='' && !isNaN($('#amount').val())  && $('#description').val()!=''&& $('#refund_type').val()!='' && $('#state').val()!=''){
      if($('#refund_type').val()==2 ){
        if($('#refund_date').val()!='' ){
          data2 = { authenticity_token: "#{form_authenticity_token}", cc_id: $('#cc').val()};

          $('form#create_loan').submit();
          load_modal_ajax('#{general_expenses_loans_path}', 'loan', 'loan_new', data2, null, 'GET');
          $.smallBox({
            title : "Exito",
            content : "<i class='fa fa-clock-o'></i> <i>Se creó el préstamo</i>",
            color : "#659265",
            iconSmall : "fa fa-check fa-2x fadeInRight animated",
            timeout : 4000
          });      
        }else{
          $.smallBox({
            title : "Aviso",
            content : "<i class='fa fa-clock-o'></i> <i>Ingrese los datos correctamente.</i>",
            color : "#C46A69",
            iconSmall : "fa fa-times fa-2x fadeInRight animated",
            timeout : 4000
          });
        }
      }else{
        data2 = { authenticity_token: "#{form_authenticity_token}", cc_id: $('#cc').val()};
        $('form#create_loan').submit();
        load_modal_ajax('#{general_expenses_loans_path}', 'loan', 'loan_new', data2, null, 'GET');
        $.smallBox({
          title : "Exito",
          content : "<i class='fa fa-clock-o'></i> <i>Se creó el préstamo</i>",
          color : "#659265",
          iconSmall : "fa fa-check fa-2x fadeInRight animated",
          timeout : 4000
        });
      }

    }else{
      $.smallBox({
        title : "Aviso",
        content : "<i class='fa fa-clock-o'></i> <i>Ingrese los datos correctamente.</i>",
        color : "#C46A69",
        iconSmall : "fa fa-times fa-2x fadeInRight animated",
        timeout : 4000
      });
    }
  });

  function minmax(value, min, max){
    if(parseInt(value) < min || isNaN(value)){ 
      return min; 
    }else{
      if(parseInt(value) > max){
        return max; 
      }else{
        return value;
      }
    }
  }

  function isNumber(evt) {
    evt = (evt) ? evt : window.event;
    var charCode = (evt.which) ? evt.which : evt.keyCode;
    if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode != 46) {
        return false;
    }
    return true;
  }

  function submit_form(form_element){
    form_element.ajaxForm({
      beforeSubmit: function() {
        form_element.validate({
          // Rules for form validation
          ignore: '',
          rules : {
            'loan[cost_center_beneficiary_id]' : {
              required : true,
            },
            'loan[cost_center_lender_id]' : {
              required : true,
            },
            'loan[loan_date]' : {
              required : true,
            },
            'loan[loan_type]' : {
              required : true,
            },
            'loan[amount]' : {
              required : true,
            }

          },

          // Messages for form validation
          messages : {
            'loan[cost_center_beneficiary_id]' : {
              required : "(*)",
            },
            'loan[cost_center_lender_id]' : {
              required : "(*)",
            },
            'loan[loan_date]' : {
              required : "(*)",
            },
            'loan[loan_type]' : {
              required :  "(*)",
            },
            'loan[amount]' : {
              required :  "(*)",
            }
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
          }
        });
        // Remove all Help-inLine
        $(".help-inline").remove();
        // Client Valid
        return form_element.valid();
      },
      success: function (data){
        $(".help-inline").parent().addClass("state-error");
      },
      error: function(xhr, status, error) {
        console.log(error);
      }
    })
  }
