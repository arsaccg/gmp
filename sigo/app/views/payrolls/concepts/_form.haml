#wid-id-0.jarviswidget{"data-widget-colorbutton" => "false", "data-widget-editbutton" => "false"}
  %header
    %span.widget-icon
      %i.fa.fa-eye
    %h2 Conceptos
  .widget-body
    = simple_form_for([:payrolls, @con], html: {class: 'smart-form', autocomplete: 'off' }) do |f|
      %fieldset
        %row
          %section.col.col-10
            %label.label Nombre
            %label.input
              %i.icon-append.fa.fa-credit-card
              = f.input :name, placeholder: "Nombre", input_html: { class: 'form-control' }, label: false
        %row
          %section.col.col-4
            %label.label Código
            %label.input
              = f.input :code, placeholder: "Código", input_html: { class: 'form-control'}, label: false              
          %section.col.col-4
            %label.label Tipo
            %label.input
              %select#tipo.form-control{"style"=>'width:100%;padding: 0;border: none;',:name=>"tipo"}
                -if @action=="edit"
                  %option{:value => nil,:disabled=>true} Seleccione
                  %option{:value => "1",:selected=>@con.code[0,1]=='1'} Ganancia
                  %option{:value => "2",:selected=>@con.code[0,1]=='2'} Descuento
                  %option{:value => "3",:selected=>@con.code[0,1]=='3'} Aportación
                -else
                  %option{:value => nil,:disabled=>true,:selected=>true} Seleccione
                  %option{:value => "1"} Ganancia
                  %option{:value => "2"} Descuento
                  %option{:value => "3"} Aportación
          %section.col.col-4
            %label.label Tope
            %label.input
              = f.input :top, placeholder: "Tope", input_html: { class: 'form-control' }, label: false 
        %row  
          %section.col.col-12{:style=>" width: 490px; "}
            .form-group.in-line
              %label.check-inline
                %input.checkbox#e{:name=>"check_type_worker",:type => 'checkbox', :value => "empleado", :onchange => "checkWorkerE();", :checked => @con.type_empleado!=nil}
                %span Aplica para Empleado?
              %br
              %label.check-inline
                %input.checkbox#o{:name=>"check_type_worker",:type => 'checkbox', :value => "obrero", :onchange => "checkWorkerO();", :checked => @con.type_obrero!=nil}
                %span  Aplica para Obrero?
        %br
        %row#cobr{"style"=>"display:none"}
          %section.col.col-6
            %label.label Concepto Obrero
            .form-group.in-line
              .col-md-1
              .col-md-10
                .col-md-5
                  = f.radio_button :type_obrero,  "Fijo", :selected=>@con.type_obrero=="Fijo"
                  %label Fijo
                .col-md-7
                  = f.radio_button :type_obrero, "Variable", :selected=>@con.type_obrero=="Variable"
                  %label Variable              
          %section.col.col-6
            %label.label Valorizaciones Obrero
            %label.input
              %a.btn.btn-sm.btn-info#valorization_concept{ :href => 'javascript:void(0)', :onclick => 'javascript:show_me_the_valorization("worker")' }
                %i.fa.fa-superscript
                Definir
        %br
        %row#cemp{"style"=>"display:none"}
          %section.col.col-6
            %label.label Concepto Empleado
            .form-group.in-line
              .col-md-1
              .col-md-10
                .col-md-5
                  = f.radio_button :type_empleado,  "Fijo", :selected=>@con.type_empleado=="Fijo"
                  %label Fijo
                .col-md-7
                  = f.radio_button :type_empleado, "Variable", :selected=>@con.type_empleado=="Variable"
                  %label Variable
          %section.col.col-6
            %label.label Valorizaciones Empleado
            %label.input
              %a.btn.btn-sm.btn-info#valorization_concept{ :href => 'javascript:void(0)', :onclick => 'javascript:show_me_the_valorization("employee")' }
                %i.fa.fa-superscript
                Definir
                      
      %footer
        %button.btn.btn-primary{type: "submit"}
          %i.fa.fa-save 
          Guardar

      #modal_valorization.modal.fade{ "aria-hidden" => "true", "aria-labelledby" => "modalValorizationLabel", role: "dialog" }
        .modal-dialog{ :style => 'margin: 0 auto; width: 50%;' }
          .modal-content
            .modal-body{ :style => 'overflow: hidden; padding: 2em;' }
              %section
                .col-md-6
                  .alert.alert-block.alert-danger{ :style => 'margin-bottom: 0' }
                    %h4.alert-heading
                      %i.fa.fa-warning
                      Tenga en cuenta estos tokens. Si desea añadirlos a la formula, deberá hacerles click:
                    %p
                      %a.tokens{ :href=> 'javascript:void(0)', :style => 'color: white;' }
                        [horas-trabajadas]
                      ,
                      %a.tokens{ :href=> 'javascript:void(0)', :style => 'color: white;' }
                        [horas-simples]
                      ,
                      %a.tokens{ :href=> 'javascript:void(0)', :style => 'color: white;' }
                        [horas-dobles]
                      ,
                      %a.tokens{ :href=> 'javascript:void(0)', :style => 'color: white;' }
                        [precio-por-hora]
                      ,
                      %a.tokens{ :href=> 'javascript:void(0)', :style => 'color: white;' }
                        [dias-trabajados]
                      ,
                      %a.tokens{ :href=> 'javascript:void(0)', :style => 'color: white;' }
                        [horas-totales-semana]
                .col-md-6
                  .alert.alert-block.alert-success{ :style => 'padding-bottom: 20px;' }
                    %h4.alert-heading
                      %i.fa.fa-exclamation
                      Token Genérico:
                    %p
                      Este token coge el valor, del concepto actual, que figura en el contrato del trabajador o de su categoria correspondiente. En todo caso, su valor será 0.
                    %p
                      El nombre del Token es:
                      %a.tokens{ :href=> 'javascript:void(0)', :style => 'color: #296829;' }
                        [monto-contrato-categoria]
                
                .col-md-6
                  .alert.alert-block.alert-info
                    %h4.alert-heading
                      %i.fa.fa-bullseye
                      Simbolos de operaciones aritméticas:
                    %p
                      Suma (+), Resta (-), Multiplicación (*), División (/), Exponente (**) y Paréntesis
                .col-md-6
                  .alert.alert-block.alert-warning
                    %h4.alert-heading
                      %i.fa.fa-check-square-o
                      Revisa la Fórmula antes de Guardar:
                    %p
                      Si modificas el nombre de los Tokens generados puede que haya errores en los calculos de los montos.

              %section.col-md-9
                %label{ :style => 'font-size: 13px;' } Buscar Conceptos:
                =#%label.input
                %input#concepts_list.form-control{ "name" => "concept_item", 'type' => 'hidden', 'style' => 'width:100%;padding: 0;border: none;' }
              %section.col-md-3
                %a.btn.btn-sm.btn-info{ :href => 'javascript:void(0)', :onclick => 'javascript:add_concept_valorization("")', :style => 'margin-top: 19px; margin-left: 19px;' }
                  Añadir Concepto
              
              %br

              %section.col-md-12{ :style => 'margin-top: 20px;' }
                #modalValorizationItemsContent

                  %table#summary_valorization.table.table-striped.table-bordered.table-hover.smart-form
                    %thead
                      %tr
                        %th Fórmula
                    %tbody#summary_valorization_items
                      - if @action == 'edit'
                        %tr
                          - if !@con.concept_valorizations.where('type_worker = "worker"').first.nil?
                            %td{ :style => "display:none" }
                              = hidden_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][id]', @con.concept_valorizations.where('type_worker = "worker"').first.id
                              = hidden_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][concept_id]', @con.id
                              = hidden_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][date_week]', @con.concept_valorizations.where('type_worker = "worker"').first.date_week
                              = hidden_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][cost_center_id]', @con.concept_valorizations.where('type_worker = "worker"').first.cost_center_id
                              = hidden_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][type_worker]', 'worker'
                            %td
                              = text_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][formula]', @con.concept_valorizations.where('type_worker = "worker"').first.formula, class: 'form-control formula', id: 'formula_field_concept'
                          - else
                            %td{ :style => "display:none" }
                              = hidden_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][date_week]', @date_week
                              = hidden_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][cost_center_id]', @cost_center
                              = hidden_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][type_worker]', 'worker'
                            %td
                              = text_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][formula]', nil, class: 'form-control formula', id: 'formula_field_concept'
                      - else
                        %tr
                          %td{ :style => "display:none" }
                            = hidden_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][date_week]', @date_week
                            = hidden_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][cost_center_id]', @cost_center
                            = hidden_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][type_worker]', 'worker'
                          %td
                            = text_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][formula]', nil, class: 'form-control formula', id: 'formula_field_concept'
                  
              %br

            .modal-footer{ :style => 'padding: 2em;' }
              %button.btn.btn-success{"data-dismiss" => "modal", :type => "button", :style => 'padding: 7px;'} Guardar
              %button.btn.btn-default{"data-dismiss" => "modal", :type => "button", :style => 'padding: 7px;'} Salir
      -@reg_n+=1

      #modal_valorization_employees.modal.fade{ "aria-hidden" => "true", "aria-labelledby" => "modalValorizationLabel", role: "dialog" }
        .modal-dialog{ :style => 'margin: 0 auto; width: 50%;' }
          .modal-content
            .modal-body{ :style => 'overflow: hidden; padding: 2em;' }
              %section
                .col-md-6
                  .alert.alert-block.alert-danger{ :style => 'margin-bottom: 0' }
                    %h4.alert-heading
                      %i.fa.fa-warning
                      Tenga en cuenta estos tokens. Si desea añadirlos a la formula, deberá hacerles click:
                    %p
                      %a.tokens-employee{ :href=> 'javascript:void(0)', :style => 'color: white;' }
                        [horas-trabajadas]
                      ,
                      %a.tokens-employee{ :href=> 'javascript:void(0)', :style => 'color: white;' }
                        [horas-simples]
                      ,
                      %a.tokens-employee{ :href=> 'javascript:void(0)', :style => 'color: white;' }
                        [horas-dobles]
                      ,
                      %a.tokens-employee{ :href=> 'javascript:void(0)', :style => 'color: white;' }
                        [precio-por-hora]
                      ,
                      %a.tokens-employee{ :href=> 'javascript:void(0)', :style => 'color: white;' }
                        [dias-trabajados]
                      ,
                      %a.tokens-employee{ :href=> 'javascript:void(0)', :style => 'color: white;' }
                        [horas-totales-semana]
                .col-md-6
                  .alert.alert-block.alert-success{ :style => 'padding-bottom: 20px;' }
                    %h4.alert-heading
                      %i.fa.fa-exclamation
                      Token Genérico:
                    %p
                      Este token coge el valor, del concepto actual, que figura en el contrato del trabajador o de su categoria correspondiente. En todo caso, su valor será 0.
                    %p
                      El nombre del Token es:
                      %a.tokens-employee{ :href=> 'javascript:void(0)', :style => 'color: #296829;' }
                        [monto-contrato-categoria]
                
                .col-md-6
                  .alert.alert-block.alert-info
                    %h4.alert-heading
                      %i.fa.fa-bullseye
                      Simbolos de operaciones aritméticas:
                    %p
                      Suma (+), Resta (-), Multiplicación (*), División (/), Exponente (**) y Paréntesis
                .col-md-6
                  .alert.alert-block.alert-warning
                    %h4.alert-heading
                      %i.fa.fa-check-square-o
                      Revisa la Fórmula antes de Guardar:
                    %p
                      Si modificas el nombre de los Tokens generados puede que haya errores en los calculos de los montos.

              %section.col-md-9
                %label{ :style => 'font-size: 13px;' } Buscar Conceptos:
                =#%label.input
                %input#concepts_list_employees.form-control{ "name" => "concept_item_employees", 'type' => 'hidden', 'style' => 'width:100%;padding: 0;border: none;' }
              %section.col-md-3
                %a.btn.btn-sm.btn-info{ :href => 'javascript:void(0)', :onclick => 'javascript:add_concept_valorization_emplo()', :style => 'margin-top: 19px; margin-left: 19px;' }
                  Añadir Concepto
              
              %br

              %section.col-md-12{ :style => 'margin-top: 20px;' }
                #modalValorizationItemsContent

                  %table#summary_valorization.table.table-striped.table-bordered.table-hover.smart-form
                    %thead
                      %tr
                        %th Fórmula
                    %tbody#summary_valorization_items
                      - if @action == 'edit'
                        %tr
                          - if !@con.concept_valorizations.where('type_worker = "employee"').first.nil?
                            %td{ :style => "display:none" }
                              = hidden_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][id]', @con.concept_valorizations.where('type_worker = "employee"').first.id
                              = hidden_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][concept_id]', @con.id
                              = hidden_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][date_week]', @con.concept_valorizations.where('type_worker = "employee"').first.date_week
                              = hidden_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][cost_center_id]', @con.concept_valorizations.where('type_worker = "employee"').first.cost_center_id
                              = hidden_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][type_worker]', 'employee'
                            %td
                              = text_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][formula]', @con.concept_valorizations.where('type_worker = "employee"').first.formula, class: 'form-control formula', id: 'formula_field_concept_employee'
                          - else
                            %td{ :style => "display:none" }
                              = hidden_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][date_week]', @date_week
                              = hidden_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][cost_center_id]', @cost_center
                              = hidden_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][type_worker]', 'employee'
                            %td
                              = text_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][formula]', nil, class: 'form-control formula', id: 'formula_field_concept_employee'
                      - else
                        %tr
                          %td{ :style => "display:none" }
                            = hidden_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][date_week]', @date_week
                            = hidden_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][cost_center_id]', @cost_center
                            = hidden_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][type_worker]', 'employee'
                          %td
                            = text_field_tag 'concept[concept_valorizations_attributes]['+@reg_n.to_s+'][formula]', nil, class: 'form-control formula', id: 'formula_field_concept_employee'
                  
              %br

            .modal-footer{ :style => 'padding: 2em;' }
              %button.btn.btn-success{"data-dismiss" => "modal", :type => "button", :style => 'padding: 7px;'} Guardar
              %button.btn.btn-default{"data-dismiss" => "modal", :type => "button", :style => 'padding: 7px;'} Salir

:javascript
  $(document).ready(function () {
    $('.check_boxes').attr("style"," position: relative; left: 0; ");
    if(document.getElementById('e').checked){checkWorkerE();}
    if(document.getElementById('o').checked){checkWorkerO();}
    $('input[type="radio"]').click(function(){
        if($(this).attr("value")=="Trabajador"){
            $("#condeEmp").hide();
            $("#condeDef").hide();
            $("#condeTrab").show();
        }
        if($(this).attr("value")=="Empresa"){
            $("#condeTrab").hide();
            $("#condeDef").hide();
            $("#condeEmp").show();
        }
    });

    $('select').select2();

    if($('form[id^="edit_"]').length > 0) {
      submit_validate($('form[id^="edit_"]'));
    }else{
      submit_validate($('#new_concept'));
    }

    $('a.tokens').click(function(){
      var token = $(this).html().trim();
      old_formula = $('#formula_field_concept').val();

      if (old_formula != '')
        new_formula = old_formula + '+' + token;
      else
        new_formula = token;

      $('#formula_field_concept').val(new_formula);
    });

    $('a.tokens-employee').click(function(){
      var token = $(this).html().trim();
      old_formula = $('#formula_field_concept_employee').val();

      if (old_formula != '')
        new_formula = old_formula + '+' + token;
      else
        new_formula = token;

      $('#formula_field_concept_employee').val(new_formula);
    });    

  });
  
  function submit_validate(form){  
    loadScript("#{ asset_path 'plugin/select2/select2.min.js', type: :javascript }");
    $(form['selector']).ajaxForm({
      beforeSubmit: function() {
        $(form['selector']).validate({
          // Rules for form validation
          rules : {
            'concept[code]' : {
              required : true
            },
            'concept[name]' : {
              required : true
            },
            'concept[type_concept]' : {
              required : true
            },
            'tipo' : {
              required : true
            }
          },

          // Messages for form validation
          messages : {
            'concept[code]' : {
              required : 'Por favor, ingresar el código.'
            },
            'concept[name]' : {
              required : 'Por favor, ingresar el nombre.'
            },
            'concept[type_concept]' : {
              required : 'Seleccione el tipo de concepto'
            },
            'tipo' : {
              required : 'Seleccione el tipo'
            }
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
          }
        });
        // Remove all Help-inLine
        $(".help-inline").remove();
        // Client Valid
        return $(form['selector']).valid();
      },
      target: '#content',
      success: function (data){
        $(".help-inline").parent().addClass("state-error");
      },
      error: function(xhr, status, error) {
      }
    });
  }

  function show_me_the_valorization(type){
    if(type == "worker"){
      $('#modal_valorization').modal({
        backdrop : 'static',
        keyword : false
      });
    }else{
      $('#modal_valorization_employees').modal({
        backdrop : 'static',
        keyword : false
      });    
    }

  }

  $('#concepts_list').select2({
    placeholder: "Buscar Concepto...",
    minimumInputLength: 3,
    ajax: {
      url: "#{display_concepts_payrolls_concepts_path}",
      dataType: 'json',
      type: 'POST',
      quietMillis: 100,
      data: function(term, page){
        return {
          q: term,
          page: page,
          authenticity_token: "#{form_authenticity_token}"
        };
      },
      results: function(data, page){
        return {results: data.concepts};
      }
    },
    formatResult: function(node){ return '<div>' + node.name + '</div>' },
    formatSelection: function(node){ return node.name },
    escapeMarkup: function (m) { return m; }
  });

  $('#concepts_list_employees').select2({
    placeholder: "Buscar Concepto...",
    minimumInputLength: 3,
    ajax: {
      url: "#{display_concepts_payrolls_concepts_path}",
      dataType: 'json',
      type: 'POST',
      quietMillis: 100,
      data: function(term, page){
        return {
          q: term,
          page: page,
          authenticity_token: "#{form_authenticity_token}"
        };
      },
      results: function(data, page){
        return {results: data.concepts};
      }
    },
    formatResult: function(node){ return '<div>' + node.name + '</div>' },
    formatSelection: function(node){ return node.name },
    escapeMarkup: function (m) { return m; }
  });

  function add_concept_valorization(){
    var concept_id = 0
    var concept_name = ''

    data_selected = $('#concepts_list').select2('data');
    concept_token = data_selected.id
    concept_name = data_selected.name

    reg_n = (new Date).getTime();

    old_formula = $('#formula_field_concept').val();

    if (old_formula != '')
      new_formula = old_formula + '+' + concept_token;
    else
      new_formula = concept_token;

    $('#formula_field_concept').val(new_formula);

  }

  function add_concept_valorization_emplo(){
    var concept_id = 0
    var concept_name = ''

    data_selected = $('#concepts_list_employees').select2('data');
    concept_token = data_selected.id
    concept_name = data_selected.name

    reg_n = (new Date).getTime();

    old_formula = $('#formula_field_concept_employee').val();

    if (old_formula != '')
      new_formula = old_formula + '+' + concept_token;
    else
      new_formula = concept_token;

    $('#formula_field_concept_employee').val(new_formula);

  }

  function checkWorkerE(){
    if(document.getElementById('e').checked){
      $('#cemp').fadeIn('fast');
    }else{
      $('#cemp').fadeOut('fast');
    }
  }

  function checkWorkerO(){
    if(document.getElementById('o').checked){
      $('#cobr').fadeIn('fast');
    }else{
      $('#cobr').fadeOut('fast');
    }
  }  