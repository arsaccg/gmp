#content-inside
  .row
    .col-xs-12.col-sm-7.col-md-7.col-lg-4
      %h1.page-title.txt-color-blueDark
        %i.fa.fa-pencil-square-o.fa-fw 
        Editar ProvisiÃ³n
  #widget-grid
    .row
      %article.col-sm-12.col-md-12.col-lg-12
        = render :partial => 'form_edit'
  %button.btn.btn-sm.btn-primary.btn-prev#backlist-provisions{type: "button"}
    %i.fa.fa-arrow-left>
    Retornar al listado de cargos

:javascript

  $(document).ready(function () {
    if($('form').length > 0) {
      submit_validate($('form'));
    }

  });

  // DO NOT REMOVE : GLOBAL FUNCTIONS!
  pageSetUp();
  $('#backlist-provisions').click(function(){
    load_url_ajax("#{administration_provisions_path}", 'content', null, null, 'GET');
  });

  function delete_item(code){
    $("#tr" + code).remove();
  }

  // PAGE RELATED SCRIPTS

  function calculatePrice(element){
    var amount = parseInt($(element).val());
    var igv = parseFloat($(element).parent().siblings('.current-igv').find('input').val());
    var unit_price = parseFloat($(element).parent().siblings('.unit-price').find('input').val());
    var discount_before = $(element).parent().siblings('.discount-before').find('input');
    var discount_after = $(element).parent().siblings('.discount-after').find('input');
    var perception = $(element).parent().siblings('.perception').find('input');

    var total_dis_bes = 0;
    var total_dis_bep = 0;
    discount_before.each(function(){
      if($(this).attr('class')=="discount_before-item-soles"){
        total_dis_bes+=parseFloat($(this).val()).toFixed(2);
      }else{
        if($(this).attr('class')=="discount_before-item-percent"){
          total_dis_bep+=parseFloat((amount*unit_price*parseFloat($(this).val()))).toFixed(2);
        }
      }
    });
    var sdb = (total_dis_bes + total_dis_bep).toFixed(2);
    var a =(1+igv).toFixed(2)
    var total_price = (((amount * unit_price) - sdb)*(a)).toFixed(2);
    $(element).parent().siblings('.price-with-igv').find('input').val(total_price);
    $(element).parent().siblings('.discount-after').children('#db').find('input').val(sdb);

    var total_dis_afs = 0;
    var total_dis_afp = 0;
    discount_after.each(function(){
      if($(this).attr('class')=="discount_after-item-soles"){
        total_dis_afs+=parseFloat($(this).val());
      }else{
        if($(this).attr('class')=="discount_after-item-percent"){
          total_dis_afp+=parseFloat((total_price*parseFloat($(this).val())));
        }
      }
    });
    var sda = (total_dis_afs + total_dis_afp).toFixed(2);
    var net_total_price = parseFloat(total_price) - sda
    var per_am;
    perception.each(function(){
      if($(this).attr('class')=="perception-soles"){
        per_am=parseFloat($(this).val()).toFixed(2);
      }else{
        if($(this).attr('class')=="perception-percent"){
          per_am=parseFloat(total_price*parseFloat($(this).val())).toFixed(2);
        }
      }
    });
    $(element).parent().siblings('.discount-after').children('#da').find('input').val(sda*-1);
    $(element).parent().siblings('.neto-price-with-igv').find('input').val(parseFloat(net_total_price).toFixed(2));
    $(element).parent().siblings('.perception').children('#per').find('input').val(per_am);
  }

  function isNumber(evt) {
    evt = (evt) ? evt : window.event;
    var charCode = (evt.which) ? evt.which : evt.keyCode;
    if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode != 46) {
        return false;
    }
    return true;
  }

  function minmax(value, min, max){
    if(parseInt(value) < min || isNaN(value)) 
      return min; 
    else if(parseInt(value) > max) 
      return max; 
    else return value;
  }

  function add_more_items(){
    var data_delivery_order = new Array();
    status = false;
    var index = 0;
    $('#modal-more-items tbody tr td .checkbox .order_check').each(function(){
      if( $(this).is(':checked') ){
        status = true
        data_delivery_order[index] = $(this).val();
        index++;
      }
    });

    if(status){
      data = { ids_delivery_order: data_delivery_order, authenticity_token: "#{form_authenticity_token}" };
      append_url_ajax('#{add_items_from_delivery_orders_logistics_purchase_orders_path}', 'order_delivery_items_table', data, '', 'POST');
    }

    $('#modalDeliveryItems').modal('hide');
  }

  function submit_validate(form){
    $(form['selector']).ajaxForm({
      beforeSubmit: function() {
        $(form['selector']).validate({
          // Rules for form validation
          rules: {
            'provision[document_provision_id]': {
              required: true
            },
            'provision[number_document_provision]': {
              required: true
            },
            'provision[accounting_date]': {
              required: true
            },
            'provision[series]': {
              required: true
            },
            'provision[entity_id]': {
              required: true
            }
          },
          
          messages: {
            'provision[document_provision_id]':  {
              required: "Porfavor, especifica el tipo de Documento."
            },
            'provision[number_document_provision]':  {
              required: "Porfavor, especifica el numero del documento."
            },
            'provision[accounting_date]':  {
              required: "Porfavor, especifica la fecha."
            },
            'provision[series]':  {
              required: "Porfavor, especifica la serie."
             },
            'provision[entity_id]': {
              required: "Porfavor, especifica al proveedor."
            }
          },

          highlight: function (element) {
            $(element).closest('.form-group').removeClass('has-success').addClass('has-error');
          },
          unhighlight: function (element) {
            $(element).closest('.form-group').removeClass('has-error').addClass('has-success');
          },
          errorElement: 'span',
          errorClass: 'help-block',
          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
          }
        });
        // Remove all Help-inLine
        $(".help-inline").remove();
        // Client Valid
        return $(form['selector']).valid();
      },
      target: '#content',
      success: function (data){
        $(".help-inline").parent().addClass("state-error");
      },
      error: function(xhr, status, error) {
      }
    });
  }