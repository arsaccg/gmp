#wid-id-0.jarviswidget{"data-widget-colorbutton" => "false", "data-widget-editbutton" => "false"}
  %header
    %span.widget-icon
      %i.fa.fa-pencil-square-o.fa-fw
    %h2 Nuevo Parte de Personal
  .widget-body
    = simple_form_for([:administration, @partworker], html: {class: 'form-horizontal smart-form', autocomplete: 'off' }) do |f|
      %fieldset
        .row{ 'style' => 'display:none' }
          %input{ 'name' => 'company_id', 'value' => "#{@company}", 'readonly' => true, 'style' => 'display:none' }
        .row
          %section.col.col-2
            %label.input{for: "number_part"}
              = f.input :number_part, placeholder: "Numero", input_html: {:value => "#{@numbercode}", class: 'form-control' }, label: false

          %section.col.col-2
            %label.input{for: "date_of_creation"}
              = f.input :date_of_creation, as: :string, input_html: { class: 'form-control', :type => "date" }, label: false
            
      %fieldset
        %legend Registro de Partidas
        .col-lg-18
          %table.has-tickbox(class="table table-condensed table-bordered table-striped table-hover dataTable" style="font-size: 12px;" id="summary-workers" aria-describedby="data-table_info")
            %thead
              %tr
                %th Trabajador
                %th Asistencia
                %th Motivo de Falta
                %th Sector
                %th Fase
                %th Grupo de Trabajo
                %th Centro de Costo
                %th Eliminar
            %tbody(id="worker_items_table")
              - if @action == 'new'
                - @workers.each do |worker|                
                  %tr
                    %td.bank-id(style="display:none")
                      = hidden_field_tag 'part_worker[part_worker_details_attributes][' + worker.id.to_s + '][worker_id]', worker.id
                    %td.col-2=worker.entity.name.to_s + ' ' + worker.entity.paternal_surname.to_s
                    %td.col-1.assistance
                      %label.radio-inline
                        %input.radiobox{:name =>'part_worker[part_worker_details_attributes][' + worker.id.to_s + '][assistance]', :type => 'radio', :value => "si", onchange: 'activatereasonlack(this);'}
                        %span Si
                      %label.radio-inline
                        %input.radiobox{:name =>'part_worker[part_worker_details_attributes][' + worker.id.to_s + '][assistance]', :type => 'radio', :value => "no", onchange: 'activatereasonlack(this);'}
                        %span No
                    %td.col-1.reason
                      %select.col-sm-6.form-control.reasonlack{:name =>'part_worker[part_worker_details_attributes][' + worker.id.to_s + '][reason_of_lack]', :required => true, title:'No puede dejar este campo vacio', 'style' => 'width:200px;display:none' }
                        %option{:value => "0", :selected => 'selected'} Seleccione una falta
                        %option{:value => "Licencia sin goce de haber"} Licencia sin goce de haber
                        %option{:value => "Licencia con goce de haber"} Licencia con goce de haber
                        %option{:value => "Vacaciones y/o adelanto de vacaciones"} Vacaciones y/o adelanto de vacaciones
                        %option{:value => "Faltas injustificadas"} Faltas injustificadas
                        %option{:value => "Descanso Médico"} Descanso Médico
                        %option{:value => "Subsidios por enfermedad"} Subsidios por enfermedad
                        %option{:value => "Subsidios por maternidad"} Subsidios por maternidad
                    %td.sector
                      %select.form-control{:name =>"part_worker[part_worker_details_attributes][#{worker.id.to_s}][sector_id]", :style => 'width:100%;padding: 0;border: none;'}
                        - @sectors.each do |sector|
                          %optgroup{:label => "#{sector.name}"}
                            - Sector.getSubSectors(sector.code).each do |subsector|
                              %option{:value => "#{subsector.id}"}
                                = subsector.name
                    %td.phase.col-md-2
                      %select.form-control{:name =>"part_worker[part_worker_details_attributes][#{worker.id.to_s}][phase_id]", :style => 'width:100%;padding: 0;border: none;'}
                        %option{:value => "0", :selected => true, :disabled => true} Seleccionar Fase
                        - @phases.each do |phase|
                          %option{:value => "#{phase.id}"}
                            = phase.code + ' - ' + phase.name
                    %td.working-group
                      %select.form-control{:name =>"part_worker[part_worker_details_attributes][#{worker.id.to_s}][sector_id]", :style => 'width:100%;padding: 0;border: none;'}
                        %option{:value => ''}
                          = 'Seleccione Grupo de Trabajo'
                        - @working_groups.each do |working_group|
                          - if @action == 'edit'
                            - if @partperson.working_group_id == working_group.id
                              %option{:value => "#{working_group.id}", :selected => true}
                                = working_group.name
                            - else
                              %option{:value => "#{working_group.id}"}
                                = working_group.name
                          - else
                            %option{:value => "#{working_group.id}"}
                              = working_group.name
                    %td.costcenter.col-md-2
                      %select.form-control{:name =>"part_worker[part_worker_details_attributes][#{worker.id.to_s}][cost_center_id]", :style => 'width:100%;padding: 0;border: none;'}
                        %option{:value => "0", :selected => true, :disabled => true} Seleccionar Centro de Costo
                        - @costcenters.each do |costcenters|
                          %option{:value => "#{costcenters.id}"}
                            = costcenters.name
                    %td{:style => "width: 1%; text-align: center;"}
                      %a{href: "javascript:delete_item('"+@reg_n.to_s+"')"}(class="btn") X
              - if @action == 'edit'
                - @partperson.part_person_details.each do |oos|
                  %tr
                    %td.bank-id(style="display:none")
                      = hidden_field_tag 'part_person[part_person_details_attributes][' + @reg_n.to_s + '][worker_id]', oos.worker.id
                    %td.col-2=oos.worker.entity.dni
                    %td.col-2=oos.worker.entity.name
                    %td.col-2=oos.sector.name
                    %td.col-2=oos.phase.code + ' - ' + oos.phase.name
                    %td.normal-hours
                      %div
                        = text_field_tag 'part_person[part_person_details_attributes][' + @reg_n.to_s + '][normal_hours]', oos.normal_hours , class: "form-control normal-hours", onfocusout: "calculateHours(this, 'normal');", onchange: "this.value = minmax(this.value, 0, 24)", :required => true, title:'No puede dejar este campo vacio'
                    %td.he-60
                      %div
                        = text_field_tag 'part_person[part_person_details_attributes][' + @reg_n.to_s + '][he_60]', oos.he_60 , class: "form-control he-60", onfocusout: "calculateHours(this, '60');", onchange: "this.value = minmax(this.value, 0, 24)", :required => true, title:'No puede dejar este campo vacio'
                    %td.he-100
                      %div
                        = text_field_tag 'part_person[part_person_details_attributes][' + @reg_n.to_s + '][he_100]', oos.he_100 , class: "form-control he-100", onfocusout: "calculateHours(this, '100');", onchange: "this.value = minmax(this.value, 0, 24)", :required => true, title:'No puede dejar este campo vacio'
                    %td.total-hours
                      %div
                        = text_field_tag 'part_person[part_person_details_attributes][' + @reg_n.to_s + '][total_hours]', oos.total_hours , class: "form-control total-hours", onchange: "this.value = minmax(this.value, 0, 24)", readonly: true
                    %td(style="display:none")
                      = hidden_field_tag 'part_person[part_person_details_attributes][' + @reg_n.to_s + '][id]', oos.id
                    %td.delete-item
                      %label.checkbox
                        = check_box 'part_person[part_person_details_attributes]', '[' + @reg_n.to_s + '][_destroy]'
                        %i
                    - @reg_n += 1
      %footer
        %button.btn.btn-primary{type: "submit"}
          %i.fa.fa-save 
          Guardar

:javascript
  $(document).ready(function () {

    $('select').select2();
    if($('form[id^="edit_"]').length > 0) {
      submit_validate($('form[id^="edit_"]'));
    }else{
      submit_validate($('#new_part_person'));
    }

  });
  
  function submit_validate(form){
    $(form['selector']).ajaxForm({
      beforeSubmit: function() {
        $(form['selector']).validate({
          // Rules for form validation
          rules : {
            'part_person[number_working_group]' : {
              required : true
            },
            'part_person[working_group_id]' : {
              required : true
            },
            'part_person[date_of_creation]' : {
              required : true
            }
          },

          // Messages for form validation
          messages : {
            'part_person[number_working_group]' : {
              required : 'Por favor, ingresar el grupo de trabajo.'
            },
            'part_person[working_group_id]' : {
              required : 'Por favor, ingresar el grupo de trabajo.'
            },
            'part_person[date_of_creation]' : {
              required : 'Por favor, ingresar la fecha.'
            }
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
          }
        });
        // Remove all Help-inLine
        $(".help-inline").remove();
        // Client Valid
        return $(form['selector']).valid();
      },
      target: '#content',
      success: function (data){
        $(".help-inline").parent().addClass("state-error");
      },
      error: function(xhr, status, error) {
      }
    });
  }

  function delete_item(code){
    $("#tr" + code).remove();
  }

  function activatereasonlack(value){
    console.log($(value).val());
    if ($(value).val() == 'si'){
      $(value).parent().parent().siblings('.reason').children('.reasonlack').css("display", "");
    }
    else{
      $(value).parent().parent().siblings('.reason').children('.reasonlack').css("display", "none");
    }
  }