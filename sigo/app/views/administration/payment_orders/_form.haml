#wid-id-0.jarviswidget{"data-widget-colorbutton" => "false", "data-widget-editbutton" => "false"}
  %header
    %span.widget-icon
      %i.fa.fa-eye
    %h2 Orden de Pago
  .widget-body
    = simple_form_for([:administration, @paymentOrder], html: {class: 'form-horizontal smart-form', autocomplete: 'off' }) do |f|
      %fieldset
        %legend Información de Provisiones
        .row
          %section.col.col-4
            %label.label Provisiones
            %label.input
              %select.form-control#provision-select{:name =>"payment_order[provision_id]", :style => 'border:none;width:100%;'}
                - if @action == 'edit'
                  %option{:value => nil}
                    Seleccionar alguna de las Provisiones
                - else
                  %option{:value => nil,  :selected => true}
                    Seleccionar alguna de las Provisiones
                - @provisions.each do |provision|
                  - if @paymentOrder.provision_id == provision.id
                    %option{:value => "#{provision.id}", :selected => true}
                      = 'Provision N° ' + provision.id.to_s.rjust(5, '0') + ' - ' + provision.entity.name.to_s + ' ' + provision.entity.second_name.to_s + ' ' + provision.entity.paternal_surname.to_s + ' ' + provision.entity.maternal_surname.to_s + ' (RUC: ' + provision.entity.ruc.to_s + ')'
                  - else
                    %option{:value => "#{provision.id}"}
                      = 'Provision N° ' + provision.id.to_s.rjust(5, '0') + ' - ' + provision.entity.name.to_s + ' ' + provision.entity.second_name.to_s + ' ' + provision.entity.paternal_surname.to_s + ' ' + provision.entity.maternal_surname.to_s + ' (RUC: ' + provision.entity.ruc.to_s + ')'

          %section.col.col-4
            %label.label Tipo de Documento
            %label.input
              %i.icon-append.fa.fa-user
              = text_field_tag 'type_document_provision', nil, class: 'form-control', id: 'type_document_provision', readonly: true
              
          %section.col.col-4
            %label.label Número de Documento
            %label.input
              %i.icon-append.fa.fa-user
              = text_field_tag 'number_document_provision', nil, class: 'form-control', id: 'number_document_provision', readonly: true
              
        .row
          %section.col.col-4
            %label.label Proveedor
            %label.input
              %i.icon-append.fa.fa-user
              = text_field_tag 'supplier_provision', nil, class: 'form-control', id: 'supplier_provision', readonly: true

          %section.col.col-4
            %label.label Fecha del Documento
            %label.input
              %i.icon-append.fa.fa-user
              = text_field_tag 'date_doc_provision', nil, class: 'form-control', id: 'date_doc_provision', readonly: true

          %section.col.col-4
            %label.label Monto total de la Provision
            %label.input
              .input-group
                %span.input-group-addon
                  %span S/.
                = text_field_tag 'total_quantity_provision', nil, class: 'form-control', id: 'total_quantity_provision', readonly: true
        
      %fieldset
        %legend Información de la Provisión
        .row
          %section.col.col-2
            %label.label Sub-Total
            %label.input{for: "sub_total"}
              .input-group
                %span.input-group-addon
                  %span S/.
                = f.input :sub_total, placeholder: "Sub-Total", input_html: { class: 'form-control', id: 'subtotal-field' }, label: false, readonly: true

          %section.col.col-2
            %label.label IGV
            %label.input{for: "igv"}
              .input-group
                %span.input-group-addon
                  %span S/.
                = f.input :igv, placeholder: "IGV", input_html: { class: 'form-control', id: 'igv-field' }, label: false, readonly: true

          %section.col.col-2
            %label.label Percepción
            %label.input{for: "perception"}
              .input-group
                %span.input-group-addon
                  %span S/.
                = f.input :perception, placeholder: "Percepción", input_html: { class: 'form-control', id: 'perception-field' }, label: false, readonly: true

          %section.col.col-2
            %label.label Total
            %label.input{for: "total"}
              .input-group
                %span.input-group-addon
                  %span S/.
                = f.input :total, placeholder: "Total", input_html: { class: 'form-control', id: 'total-field' }, label: false, readonly: true
        
          %section.col.col-1
            %label.label % de Detracción
            %label.input{for: "percent_detraction"}
              .input-group
                = f.input :percent_detraction, input_html: { class: 'form-control', onkeypress: 'return isNumber(event);' }, label: false
                %span.input-group-addon
                  %span %

          %section.col.col-2
            %label.label S/. Detracción
            %label.input{for: "detraction"}
              .input-group
                %span.input-group-addon
                  %span S/.
                = f.input :detraction, placeholder: "Detracción", input_html: { class: 'form-control' }, label: false, readonly: true

          %section.col.col-2
            %label.label Neto a Pagar
            %label.input{for: "net_pay"}
              .input-group
                %span.input-group-addon
                  %span S/.
                = f.input :net_pay, placeholder: "A pagar", input_html: { class: 'form-control' }, label: false

      %fieldset
        %legend Información de Descuentos
        .row
          %section.col.col-2
            %label.label Fondo de Garantía N° 01
            %label.input{for: "sub_total"}
              .input-group
                %span.input-group-addon
                  %span S/.
                = f.input :guarantee_fund_n1, placeholder: "Fondo Garantia 1", input_html: { class: 'form-control' }, label: false

          %section.col.col-2
            %label.label Otros Descuentos
            %label.input{for: "sub_total"}
              .input-group
                %span.input-group-addon
                  %span S/.
                = f.input :other_discounts, placeholder: "Otros Descuentos", input_html: { class: 'form-control' }, label: false

      %footer
        %button.btn.btn-primary{type: "submit"}
          %i.fa.fa-save 
          Guardar

:javascript
  $(document).ready(function () {

    $('select').select2();

    if($('form[id^="edit_"]').length > 0) {
      submit_validate($('form[id^="edit_"]'));
    }else{
      submit_validate($('#new_payment_order'));
    }

    $('#provision-select').change(function(){
      $.ajax({
        url: "#{get_info_from_provision_administration_payment_orders_path}",
        type: 'POST',
        data: { provision_id: $(this).val() },
        async: false,
        context: document.body,
        success: function(data){
          $('#date_doc_provision').val(data.provision[0].date_doc_provision);
          $('#number_document_provision').val(data.provision[0].number_document_provision);
          $('#supplier_provision').val(data.provision[0].supplier_provision)
          $('#total_quantity_provision').val(data.provision[0].total_quantity_provision);
          $('#type_document_provision').val(data.provision[0].type_document_provision);
          $('#subtotal-field').val(data.provision[0].total_quantity_provision);
          $('#total-field').val(data.provision[0].total_quantity_provision_with_igv);
          $('#perception-field').val(data.provision[0].perception);
          $('#igv-field').val(data.provision[0].igv);
        }
      });
    });

    $('#payment_order_percent_detraction').change(function(){
      value = $(this).val()/100;
      detraction_value = $('#total-field').val()*value
      $('#payment_order_detraction').val(parseFloat(detraction_value).toFixed(2));
      $('#payment_order_net_pay').val(parseFloat($('#total-field').val()-detraction_value).toFixed(2))
    })

    if($('#provision-select').val()){
      $.ajax({
        url: "#{get_info_from_provision_administration_payment_orders_path}",
        type: 'POST',
        data: { provision_id: $('#provision-select').val() },
        async: false,
        context: document.body,
        success: function(data){
          console.log(data.provision[0]);
          $('#date_doc_provision').val(data.provision[0].date_doc_provision);
          $('#number_document_provision').val(data.provision[0].number_document_provision);
          $('#supplier_provision').val(data.provision[0].supplier_provision)
          $('#total_quantity_provision').val(data.provision[0].total_quantity_provision);
          $('#type_document_provision').val(data.provision[0].type_document_provision);
          $('#subtotal-field').val(data.provision[0].total_quantity_provision);
          $('#total-field').val(data.provision[0].total_quantity_provision_with_igv);
          $('#perception-field').val(data.provision[0].perception);
          $('#igv-field').val(data.provision[0].igv);
        }
      });
    }

    $('#payment_order_net_pay').keyup(function(){
      net_pay = parseFloat($(this).val());
      limit = parseFloat($('#total_quantity_provision').val());
      if( net_pay > limit ){
        $(this).val(limit);
        $.smallBox({
          title: "No puedes pagar más del total de la provisión.",
          content: "<i class='fa fa-clock-o'></i> <i>1 seconds ago...</i>",
          color: "#c46a69",
          iconSmall: "fa fa-times bounce animated",
          timeout: 4000
        });
      }
    });

  });
  
  function submit_validate(form){
    $(form['selector']).ajaxForm({
      beforeSubmit: function() {
        $(form['selector']).validate({
          // Rules for form validation
          rules : {
            'payment_order[provision_id]' : {
              required : true
            },
            'payment_order[net_pay]' : {
              required : true
            },
            'payment_order[igv]' : {
              required : true
            }
          },

          // Messages for form validation
          messages : {
            'payment_order[provision_id]' : {
              required : "Por favor, seleccione alguna Provision."
            },
            'payment_order[net_pay]' : {
              required : "Por favor, ingrese el total a pagar."
            },
            'payment_order[igv]' : {
              required : "Por favor, ingrese el IGV el cual aplica."
            }
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
          }
        });
        // Remove all Help-inLine
        $(".help-inline").remove();
        // Client Valid
        return $(form['selector']).valid();
      },
      target: '#content',
      success: function (data){
        $(".help-inline").parent().addClass("state-error");
      },
      error: function(xhr, status, error) {
      }
    });
  }

  function isNumber(evt) {
    evt = (evt) ? evt : window.event;
    var charCode = (evt.which) ? evt.which : evt.keyCode;
    if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode != 46) {
        return false;
    }
    return true;
  }